{"version":3,"sources":["components/AnalysisGraph.js"],"names":["AnalysisGraphs","props","getMCCQuoteOutput","Promise","all","getMCCQuoteOutput1","getMCCQuoteOutput4","quoteClient","INAEstateOption","QUOTE_JOINT","QUOTE_CLIENT","FA","INAOption","insuranceNeed","dataEstateLiability","FAClean","parseFloat","cleanFormat","dataMCC","readMCCData","input","fetchMCCData","dataAPISite","then","data","undefined","minPrem","parseInt","Values","lifeExp","a","age","insured","lives","lifeStatus","years","projectEnd","policy","objPremium","PremSet","bestFitEquiBuild","faceAmount","objRider","ICO20","T20Amt","objCustomDB","solveForPremium_On","customDB","getDataFutureINA","PremSetAmt","Prem","PremSetDur","premiumDur","PremSolve","i","console","log","dataAges","slice","map","x","dataPremiums","dataDB","dataSVEquiBuild","unshift","length","pop","getMCCQuoteOutputManu","PremSolveDur","intRate","province","dataSVManulife","selectMultiButton","id","value","minMultiple","insMultiple","insuranceAmtInitial","b","state","loadingMCC","setState","solveForOptimumQuote","min","bestPremiumDur","dataFutureINA","ratio","k","dataFVofPrems","getDataFVofPrems","SumOfSquresDiff","insVal","Math","pow","round","bestMinMultiple","gotHereInInnerLoop","solveForOptimumEquiBuild","e","selectMultiButtonINAorTax","getEstateLiabPieCharts","totalLiabProjections","getProjectedLiabilities","dataInput","language","dataNA","setUIDataToAPI","estateLiab2","push","getTaxLiabCategoryTotal","ASSET_TAX","REGISTERED","Key","l1","taxL","CAPITAL_GAINS_ANNUAL","l2","CAPITAL_GAINS_DEFERRED","l3","FULLY_TAXABLE","DIVIDEND","estateLiab","estateLiab3","l2LE","l3LE","estateLiabLE","pv","currINA","Presentations","invRate","inflation","dataShortfall","max","handleFocus","event","target","select","dataFuture","fv","shortfall","chartRef","React","createRef","taxLiabChartRef","this","nextProps","nextState","prevState","dtaAgesAll","Clients","Age","lifeExpClient","lifeExpJLTD","dataShortfallFV","labels","datasets","label","fill","borderColor","backgroundColor","dataTaxLiabLifeExp","dataTaxLiab","dataTaxLiability","dataPieAssets","getAssetsCategoryTotal","ASSETS","CASH","LIFE_INSURANCE","CHARITABLE_GIFTS_TAX_CREDIT","RRSP_RRIF","SMALL_BUSINESS_SHARES","STOCKS_BONDS","REAL_ESTATE","PERSONAL_RESIDENCE","OTHER_ASSETS","dataPieTax","getAssetsTaxCategoryTotal","NON_TAXABLE","dataPieLiabs","getLiabsCategoryTotal","LIABILITIES","OUTSTANDING_LOANS","MORTGAGE_REDEMPTION","CREDIT_CARDS","CLIENT_TAX_LIABILITY","INCOME_TAXES","EMERGENCY_FUND","OTHER","CHILD_HOME_CARE","dataPieLiabsAtDeath","LAST_EXPENSES","LEGAL_AND_EXECUTOR_FEES","LEGACY_FOR_CHILDREN","CHARITABLE_GIFTS","optionsPie","responsive","title","display","position","text","fontSize","fontColor","legend","optionsPieTax","JSON","parse","stringify","optionsPieLiabsAtDeath","optionsPieLiabs","dataPieEstateLiabNow","dataPieEstateLiabLE","optionsPieEstateLiab","optionsPieEstateLiabLE","dataMCCpremFV","numFormat","dataMCCQuoteDB","optionsFV","maintainAspectRatio","scales","xAxes","stacked","ticks","beginAtZero","yAxes","steps","stepValue","dataProjection","dataProjectionCV","needToE","needToF","needTo","style","color","marginTop","MultiButtons","noButtons","buttonCaption","width","className","height","overflow","float","options","clear","inputName","format","Count","inputValue","maxValue","handleUpdateInput","marginLeft","leftPadding","DataTable","dataColTitles","gridTitle","Component"],"mappings":"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","file":"static/js/5.bc1ea6ef.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Bar, Line, Chart,Pie } from \"react-chartjs-2\";\r\n//import \"./Output.css\";\r\nimport \"./Output.css\";\r\nimport { readMCCData } from \"../data/dataExchangeMCC\";\r\nimport { fetchMCCData } from \"../utils/FetchAPIs\";\r\nimport { setUIDataToAPI} from \"../data/dataExchange\";\r\nimport {\r\n  getProjectedLiabilities,\r\n  cleanFormat,\r\n  numFormat,\r\n  getAssetsTaxCategoryTotal,\r\n  getAssetsCategoryTotal,\r\n  getTaxLiabCategoryTotal,\r\n  getLiabsCategoryTotal\r\n} from \"../utils/helper\";\r\nimport {\r\n  GROWTHDIR,\r\n  QUOTE_CLIENT,\r\n  QUOTE_SPOUSE,\r\n  QUOTE_JOINT,\r\n  ASSET_TAX,\r\n  ASSETS,\r\n  LIABILITIES\r\n} from \"../definitions/generalDefinitions\";\r\nimport MCCGraph from \"./MCCGraph\";\r\nimport { MultiButtons } from \"./MultiButtons\";\r\nimport { InputField } from \"./inputField\";\r\nimport DataTable from \"./GridExcelComponent/DataTable\";\r\n\r\n// props option\r\nconst DISPLAY_INCOME = 1;\r\n\r\n// for Estate\r\nconst DISPLAY_TAXLIAB_CLIENT = 1;\r\nconst DISPLAY_TAXLIAB_JLTD = 2;\r\n\r\nexport default class AnalysisGraphs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loadingMCC: true,\r\n      estateLiab: [],\r\n      estateLiabLE: [],\r\n      taxL:0\r\n    };\r\n    this.dataAges = [];\r\n    this.dataPremiums = [];\r\n    this.dataDB = [];\r\n    this.dataSVEquiBuild = [];\r\n    this.dataSVManulife = [];\r\n    this.Prem = 0;\r\n    this.bestPremiumDur = 100;\r\n    this.bestMinMultiple = 0;\r\n    this.premiumDur = 10;\r\n    this.lifeExp = 0;\r\n    this.minMultiple = 0;\r\n    this.insMultiple = 0;\r\n    this.bestFitEquiBuild = false;\r\n    this.INAEstateOption = DISPLAY_TAXLIAB_CLIENT;\r\n    this.insuranceAmtInitial = this.props.INAOption === DISPLAY_INCOME\r\n        ? this.props.insuranceNeed\r\n        : this.props.dataEstateLiability[0];\r\nthis.chartRef = React.createRef();\r\n  this.taxLiabChartRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getEstateLiabPieCharts()\r\n\r\n  }\r\n\r\n\r\n  shouldComponentUpdate(nextProps, nextState, prevState) {\r\n    if (\r\n      this.props.projectEnd !== nextProps.projectEnd ||\r\n      this.state.loadingMCC !== prevState.loadingMCC || this.props.INAOption !== nextProps.INAOption\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  getMCCQuoteOutput = () => {\r\n    return Promise.all([this.getMCCQuoteOutput1(), this.getMCCQuoteOutput4()]);\r\n  };\r\n\r\n  getMCCQuoteOutput1 = () => {\r\n    let quotePlanID = 48;\r\n    let quoteClient =\r\n      this.INAEstateOption === DISPLAY_TAXLIAB_JLTD\r\n        ? QUOTE_JOINT\r\n        : QUOTE_CLIENT;\r\n    let FA=this.props.INAOption === DISPLAY_INCOME\r\n        ? this.props.insuranceNeed\r\n        : this.props.dataEstateLiability[0];\r\n        const FAClean=parseFloat(cleanFormat(FA))\r\n    let dataMCC = readMCCData(\r\n      this.props.input,\r\n      quotePlanID,\r\n      quoteClient,\r\n      FAClean\r\n    );\r\n\r\n    // console.log(this.props.dataAPISite, dataMCC, FA);\r\n    if(FA>0)\r\n    {\r\n    fetchMCCData(\r\n      this.props.dataAPISite,\r\n      dataMCC,\r\n      FAClean\r\n    )\r\n      .then(data => {\r\n        // console.log(data[0]);\r\n        if (data[0] !== undefined) {\r\n          //  console.log(\"POST: MCC_OutputArrays success\");\r\n          this.minPrem = parseInt(cleanFormat(data[0][2].Values[0]));\r\n          //this.dataDB = data[0][3].Values.map(x=>parseInt(cleanFormat(x)));\r\n          this.lifeExp = this.props.lifeExp; // Math.round(parseInt(data[0][4].Values[0]));\r\n\r\n          //console.log(this.lifeExp,data[0][4].Values)\r\n          // make render\r\n        }\r\n      })\r\n      .then(data => {\r\n        this.getMCCQuoteOutput4();\r\n      });\r\n    }\r\n  };\r\n\r\n \r\n  getMCCQuoteOutput4 = async () => {\r\n    let quotePlanID = 48;\r\n    let quoteClient =\r\n      this.INAEstateOption === DISPLAY_TAXLIAB_JLTD\r\n        ? QUOTE_JOINT\r\n        : QUOTE_CLIENT;\r\n    let FA= this.props.INAOption === DISPLAY_INCOME\r\n        ? this.props.insuranceNeed\r\n        : this.props.dataEstateLiability[0];    \r\n    const FAClean=parseFloat(cleanFormat(FA))\r\n    let dataMCC = readMCCData(\r\n      this.props.input,\r\n      quotePlanID,\r\n      quoteClient,\r\n      FAClean\r\n    );\r\n    let age = dataMCC.insured.lives[0].age;\r\n    if (dataMCC.insured.lifeStatus > 0 && age > dataMCC.insured.lives[1].age)\r\n      age = dataMCC.insured.lives[1].age;\r\n    let years = this.props.projectEnd;\r\n    dataMCC.policy.objPremium.PremSet = true;\r\n    if (this.bestFitEquiBuild === true) {\r\n      dataMCC.policy.faceAmount =\r\n        FAClean / 2;\r\n      dataMCC.policy.objRider.ICO20 = true;\r\n      dataMCC.policy.objRider.T20Amt =\r\n        FAClean / 2;\r\n      dataMCC.policy.objCustomDB.solveForPremium_On = true;\r\n      dataMCC.policy.objCustomDB.customDB =\r\n        this.props.INAOption === DISPLAY_INCOME\r\n          ? this.getDataFutureINA()\r\n          : this.props.dataEstateLiability;\r\n    } else {\r\n      dataMCC.policy.objCustomDB.customDB = [];\r\n      dataMCC.policy.objCustomDB.solveForPremium_On = false;\r\n      dataMCC.policy.objPremium.PremSetAmt = this.Prem;\r\n      dataMCC.policy.objPremium.PremSetDur = parseInt(this.premiumDur);\r\n    }\r\n    dataMCC.policy.objPremium.PremSolve = false;\r\n    fetchMCCData(\r\n      this.props.dataAPISite,\r\n      dataMCC,\r\n      FAClean\r\n    ).then(data => {\r\n       if (data[0][1] !== undefined) {\r\n        console.log(\"POST: MCC_OutputArrays success\");\r\n        this.dataAges = data[0][1].Values.slice(0, years).map(x =>\r\n          parseInt(cleanFormat(x))\r\n        );\r\n        this.dataPremiums = data[0][2].Values.map(x =>\r\n          parseInt(cleanFormat(x))\r\n        );\r\n        this.dataDB = data[0][3].Values.slice(0, years).map(x =>\r\n          parseInt(cleanFormat(x))\r\n        );\r\n        this.dataSVEquiBuild = data[0][4].Values.slice(0, years).map(x =>\r\n          parseInt(cleanFormat(x))\r\n        );\r\n        this.dataDB.unshift(FAClean);\r\n        let i;\r\n\r\n        for (\r\n          i = 0;\r\n          i < this.dataDB.length + age - this.props.projectEnd + 3;\r\n          ++i\r\n        ) {\r\n          this.dataAges.pop();\r\n          this.dataDB.pop();\r\n          this.dataPremiums.pop();\r\n          this.dataSVEquiBuild.pop();\r\n        }\r\n        //console.log(this.dataDB);\r\n        /* let l = this.state.loadingMCC;\r\n        l = false;\r\n        this.setState({ l }); */\r\n      }\r\n    });\r\n  };\r\n\r\n  getMCCQuoteOutputManu = async () => {\r\n    let quotePlanID = 47; //MANU_UL_CLIENT_INVSEL = 47\r\n    let quoteClient =\r\n      this.INAEstateOption === DISPLAY_TAXLIAB_JLTD\r\n        ? QUOTE_JOINT\r\n        : QUOTE_CLIENT;\r\n        let FA = this.props.INAOption === DISPLAY_INCOME\r\n        ? this.props.insuranceNeed\r\n        : this.props.dataEstateLiability[0];\r\n        const FAClean=parseFloat(cleanFormat(FA))\r\n    let dataMCC = readMCCData(\r\n      this.props.input,\r\n      quotePlanID,\r\n      quoteClient,\r\n      FAClean\r\n    );\r\n    //console.log(dataMCC);\r\n    let age = dataMCC.insured.lives[0].age;\r\n    if (dataMCC.insured.lifeStatus > 0 && age > dataMCC.insured.lives[1].age)\r\n      age = dataMCC.insured.lives[1].age;\r\n    let years = this.props.projectEnd;\r\n    dataMCC.policy.objPremium.PremSet = false;\r\n    dataMCC.policy.objPremium.PremSolve = true;\r\n    dataMCC.policy.objPremium.PremSolveDur = 99; //years-age;\r\n    dataMCC.policy.objCustomDB.customDB = [];\r\n    dataMCC.policy.objCustomDB.solveForPremium_On = false;\r\n    dataMCC.policy.intRate = 0.035;\r\n    dataMCC.policy.province = \"AB\"; // data.dataInput.Presentations[0].Province,\r\n    fetchMCCData(\r\n      this.props.dataAPISite,\r\n      dataMCC,\r\n      FAClean\r\n    ).then(data => {\r\n       if (data[0][1] !== undefined) {\r\n        console.log(\"POST: MCC_OutputArrays success\");\r\n        this.dataAges = data[0][1].Values.slice(0, years).map(x =>\r\n          parseInt(cleanFormat(x))\r\n        );\r\n        this.dataPremiums = data[0][2].Values.map(x =>\r\n          parseInt(cleanFormat(x))\r\n        );\r\n        this.dataDB = data[0][3].Values.slice(0, years).map(x =>\r\n          parseInt(cleanFormat(x))\r\n        );\r\n        this.dataSVManulife = data[0][4].Values.slice(0, years).map(x =>\r\n          parseInt(cleanFormat(x))\r\n        );\r\n\r\n        this.dataDB.unshift(FAClean);\r\n        let i;\r\n\r\n        for (\r\n          i = 0;\r\n          i < this.dataDB.length + age - this.props.projectEnd + 8;\r\n          ++i\r\n        ) {\r\n          this.dataAges.pop();\r\n          this.dataDB.pop();\r\n          this.dataPremiums.pop();\r\n          this.dataSVManulife.pop();\r\n        }\r\n        //console.log(this.dataDB);\r\n        /* let l = this.state.loadingMCC;\r\n        l = false;\r\n        this.setState({ l }); */\r\n      }\r\n    });\r\n  };\r\n\r\n  selectMultiButton = (id, value) => {\r\n    if (value !== undefined) {\r\n      if (id === 1) this.premiumDur = value;\r\n      else if (id === 2) this.minMultiple = value;\r\n      else if (id === 3) this.insMultiple = value;\r\n      else if (id === 4) this.insuranceAmtInitial = value;\r\n    }\r\n    this.getMCCQuoteOutput();\r\n    //console.log(value);\r\n\r\n    let b = !this.state.loadingMCC;\r\n    this.setState({ loadingMCC: b });\r\n    this.minPrem = 1;\r\n  };\r\n\r\n  solveForOptimumQuote = async () => {\r\n    let min = 0;\r\n    this.bestPremiumDur = 100;\r\n    let k;\r\n    let ratio;\r\n    let dataFutureINA = this.getDataFutureINA();\r\n    //let dataFutureEstateLiab = this.getDataFutureEstateLiability();\r\n    this.bestFitEquiBuild = false;\r\n\r\n    if (false) {\r\n      let gotHereInInnerLoop = false;\r\n      for (ratio = 0; ratio <= 40; ratio++) {\r\n        for (k = 5; k < this.lifeExp + 1; k++) {\r\n          this.premiumDur = k;\r\n          this.Prem = (1 + ratio / 20) * this.minPrem;\r\n\r\n          let dataFVofPrems = this.getDataFVofPrems(\r\n            (this.props.INAOption = DISPLAY_INCOME\r\n              ? dataFutureINA\r\n              : this.props.dataEstateLiability)\r\n          );\r\n\r\n          await this.getMCCQuoteOutput4();\r\n          let SumOfSquresDiff = 0;\r\n          let i;\r\n          for (i = 0; i < this.lifeExp; ++i) {\r\n            let insVal = DISPLAY_INCOME\r\n              ? dataFutureINA[i]\r\n              : this.props.dataEstateLiability[i];\r\n            //console.log(SumOfSquresDiff,dataFVofPrems,insVal)\r\n            SumOfSquresDiff += Math.pow(dataFVofPrems[i] - insVal, 2);\r\n          }\r\n          SumOfSquresDiff = Math.round(\r\n            SumOfSquresDiff / (1000000 * this.lifeExp)\r\n          );\r\n\r\n          if (min === 0) min = SumOfSquresDiff;\r\n          else if (min > SumOfSquresDiff) {\r\n            //console.log(\"k, min, SumOfSquresDiff\");\r\n            min = SumOfSquresDiff;\r\n            this.bestPremiumDur = k;\r\n            this.bestMinMultiple = 5 * ratio;\r\n            gotHereInInnerLoop = true;\r\n          } else if (gotHereInInnerLoop === true) k = this.lifeExp + 1; //get out\r\n          //console.log(k, min, SumOfSquresDiff, ratio);\r\n          //let b = !this.state.loadingMCC;\r\n          //await this.setState({ loadingMCC: b });\r\n        }\r\n        gotHereInInnerLoop = false;\r\n      }\r\n      this.premiumDur = this.bestPremiumDur;\r\n      this.minMultiple = this.bestMinMultiple;\r\n      //await this.getMCCQuoteOutput();\r\n    } else {\r\n      //this.premiumDur = this.bestPremiumDur;\r\n      //this.minMultiple =  this.bestMinMultiple;\r\n      //this.premiumDur = k;\r\n      this.Prem = (1 + this.bestMinMultiple) * this.minPrem;\r\n\r\n      await this.getMCCQuoteOutput();\r\n    }\r\n    let b = !this.state.loadingMCC;\r\n    await this.setState({ loadingMCC: b });\r\n  };\r\n\r\n  solveForOptimumEquiBuild = async e => {\r\n    if (e === 1) {\r\n      this.bestPremiumDur = 100;\r\n      let dataFutureINA = this.getDataFutureINA();\r\n      //let dataFutureEstateLiab = this.getDataFutureEstateLiability();\r\n\r\n      this.bestFitEquiBuild = true;\r\n      await this.getMCCQuoteOutput4();\r\n\r\n      let dataFVofPrems = this.getDataFVofPrems(dataFutureINA);\r\n      let SumOfSquresDiff = 0;\r\n      let i;\r\n      for (i = 0; i < this.lifeExp; ++i) {\r\n        let insVal = DISPLAY_INCOME\r\n          ? dataFutureINA[i]\r\n          : this.props.dataEstateLiability[i];\r\n        //console.log(SumOfSquresDiff,dataFVofPrems,insVal)\r\n        SumOfSquresDiff += Math.pow(dataFVofPrems[i] - insVal, 2);\r\n      }\r\n      SumOfSquresDiff = Math.round(SumOfSquresDiff / (1000000 * this.lifeExp));\r\n      //console.log(SumOfSquresDiff)\r\n    } else if (e === 2) {\r\n      this.bestPremiumDur = 100;\r\n      let dataFutureINA = this.getDataFutureINA();\r\n\r\n      this.bestFitEquiBuild = true;\r\n      await this.getMCCQuoteOutputManu();\r\n\r\n      let dataFVofPrems = this.getDataFVofPrems(dataFutureINA);\r\n    }\r\n    // await this.getMCCQuoteOutput();\r\n\r\n    let b = !this.state.loadingMCC;\r\n    await this.setState({ loadingMCC: b });\r\n  };\r\n\r\n  selectMultiButtonINAorTax = (e) => {\r\n    if (e === DISPLAY_TAXLIAB_CLIENT) {\r\n      this.INAEstateOption = DISPLAY_TAXLIAB_CLIENT;\r\n    } else if (e === DISPLAY_TAXLIAB_JLTD) {\r\n      this.INAEstateOption = DISPLAY_TAXLIAB_JLTD;\r\n    }\r\n\r\n    //let dataFutureEstateLiab = this.getDataFutureEstateLiability();\r\n    this.insuranceAmtInitial =\r\n      this.props.INAOption === DISPLAY_INCOME\r\n        ? this.props.insuranceNeed\r\n        : this.props.dataEstateLiability[0];\r\n    //this.insuranceAmtInitial =parseInt(cleanFormat(this.insuranceAmtInitial))*(1 + this.insMultiple / 100);\r\n    this.getMCCQuoteOutput();\r\n\r\n    \r\n\r\n    let b = !this.state.loadingMCC;\r\n    this.setState({ loadingMCC: b });\r\n    this.minPrem = 1;\r\n    //this.setState({ loading: false });\r\n  };\r\n\r\n\r\n\r\ngetEstateLiabPieCharts= async () => {\r\n     \r\n    const totalLiabProjections = getProjectedLiabilities(\r\n      this.props.input.dataInput,\r\n      this.props.projectEnd,\r\n      this.props.language\r\n    );\r\n\r\n\r\n\r\n    // console.log(this.state.estateLiab,this.state.estateLiabLE)\r\n\r\n    let dataNA = setUIDataToAPI(this.props.input, 0);\r\n\r\n    let estateLiab2=[]\r\n    estateLiab2.push(totalLiabProjections[0])\r\n    const l1= await getTaxLiabCategoryTotal(this.props.input.dataInput,ASSET_TAX.REGISTERED.Key,dataNA, 0);\r\n    this.setState({taxL: l1})\r\n    estateLiab2.push(l1)\r\n    const l2=await getTaxLiabCategoryTotal(this.props.input.dataInput,ASSET_TAX.CAPITAL_GAINS_ANNUAL.Key,dataNA, 0)\r\n    const l3=await getTaxLiabCategoryTotal(this.props.input.dataInput,ASSET_TAX.CAPITAL_GAINS_DEFERRED.Key,dataNA, 0)\r\n    estateLiab2.push(l2+l3)\r\n    estateLiab2.push(await getTaxLiabCategoryTotal(this.props.input.dataInput,ASSET_TAX.FULLY_TAXABLE.Key,dataNA, 0))\r\n    estateLiab2.push(await getTaxLiabCategoryTotal(this.props.input.dataInput,ASSET_TAX.DIVIDEND.Key,dataNA, 0));\r\n\r\n\r\n    this.setState({estateLiab: estateLiab2});\r\n\r\n    let estateLiab3=[]\r\n    estateLiab3.push(totalLiabProjections[this.lifeExp])\r\n    estateLiab3.push(await getTaxLiabCategoryTotal(this.props.input.dataInput,ASSET_TAX.REGISTERED.Key,dataNA, this.lifeExp))\r\n    const l2LE=await getTaxLiabCategoryTotal(this.props.input.dataInput,ASSET_TAX.CAPITAL_GAINS_ANNUAL.Key,dataNA, this.lifeExp)\r\n    const l3LE=await getTaxLiabCategoryTotal(this.props.input.dataInput,ASSET_TAX.CAPITAL_GAINS_DEFERRED.Key,dataNA, this.lifeExp)\r\n    estateLiab3.push(l2LE+l3LE)\r\n    estateLiab3.push(await getTaxLiabCategoryTotal(this.props.input.dataInput,ASSET_TAX.FULLY_TAXABLE.Key,dataNA, this.lifeExp))\r\n    estateLiab3.push(await getTaxLiabCategoryTotal(this.props.input.dataInput,ASSET_TAX.DIVIDEND.Key,dataNA, this.lifeExp));\r\n    this.setState({estateLiabLE: estateLiab3});\r\n\r\n    // console.log(this.state.estateLiab,this.state.estateLiabLE)\r\n// console.log(estateLiab2,estateLiab3)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  getDataFutureINA = () => {\r\n    let dataFutureINA = [];\r\n    let i;\r\n    let j;\r\n    var pv;\r\n    var totalLiab = 0;\r\n    var totalLiabProjections = [];\r\n    // project liabs\r\n\r\n    totalLiabProjections = getProjectedLiabilities(\r\n      this.props.input.dataInput,\r\n      this.props.projectEnd,\r\n      this.props.language\r\n    );\r\n\r\n    \r\n\r\n    const currINA = parseFloat(cleanFormat(this.props.insuranceNeed));\r\n    const intRate = parseFloat(\r\n      this.props.input.dataInput.Presentations[0].invRate / 100\r\n    );\r\n    const inflation = parseFloat(\r\n      this.props.input.dataInput.Presentations[0].inflation / 100\r\n    );\r\n    dataFutureINA.push(currINA);\r\n    //console.log(this.props.insuranceNeed)\r\n    for (i = 1; i < this.props.projectEnd; ++i) {\r\n      pv =\r\n        (dataFutureINA[i - 1] - this.props.dataShortfall[i - 1]) *\r\n        (1 + intRate);\r\n      //   console.log(pv)\r\n      dataFutureINA.push(Math.round(Math.max(0, pv)));\r\n    }\r\n    // add liab\r\n    for (i = 1; i < this.props.projectEnd; ++i) {\r\n      dataFutureINA[i] += totalLiabProjections[i];\r\n    }\r\n    return dataFutureINA;\r\n  };\r\n\r\n  /* getDataFutureEstateLiability = () => {\r\n    let i;\r\n    var totalLiabProjections = [];\r\n    \r\n    // project liabs\r\n    totalLiabProjections=getProjectedLiabilities(this.props.input.dataInput, this.props.projectEnd, this.props.language) \r\n\r\n    const currEstateLiability=parseFloat(cleanFormat(this.props.insuranceNeed));\r\n    const intRate=parseFloat(this.props.input.dataInput.Presentations[0].invRate/100);            \r\n    const inflation=parseFloat(this.props.input.dataInput.Presentations[0].inflation/100);\r\n    let dataFutureEstateLiability=[]\r\n    \r\n    for (i = 1; i < this.props.projectEnd; ++i) {\r\n        dataFutureEstateLiability.push(this.props.dataTaxLiability[i]);\r\n    }\r\n    // add liab\r\n    for (i = 1; i < this.props.projectEnd; ++i) {\r\n        dataFutureEstateLiability[i]+=totalLiabProjections[i];\r\n    }\r\n    return dataFutureEstateLiability;\r\n  };\r\n */\r\n\r\nhandleFocus = (event) => {\r\n  event.target.select();\r\n};\r\n\r\n  getDataFVofPrems = dataFuture => {\r\n    let dataFVofPrems = [];\r\n    let i;\r\n    let fv = 0;\r\n\r\n    for (i = 0; i < this.dataPremiums.length; ++i) {\r\n      let shortfall = dataFuture[i] - this.dataDB[i];\r\n      fv = (fv + this.dataPremiums[i]) * 1.0375;\r\n      dataFVofPrems.push(fv + shortfall);\r\n    }\r\n    for (i = this.dataPremiums.length; i < this.props.projectEnd; ++i) {\r\n      let shortfall = dataFuture[i] - this.dataDB[i];\r\n      fv = fv * 1.0375;\r\n      dataFVofPrems.push(fv + shortfall);\r\n    }\r\n\r\n    return dataFVofPrems;\r\n  };\r\n\r\n  render() {\r\n    let dtaAgesAll = [];\r\n    let k;\r\n    let lifeExp = this.props.lifeExp;\r\n    let age = this.props.input.dataInput.Clients[1].Age;\r\n\r\n    if (this.INAEstateOption === DISPLAY_TAXLIAB_CLIENT) {\r\n      lifeExp = this.props.lifeExpClient;\r\n      age = this.props.input.dataInput.Clients[0].Age;\r\n    } else if (this.INAEstateOption === DISPLAY_TAXLIAB_JLTD) {\r\n      lifeExp = this.props.lifeExpJLTD;\r\n      if (age > this.props.input.dataInput.Clients[1].Age)\r\n        age = this.props.input.dataInput.Clients[1].Age;\r\n    }\r\n\r\n    for (k = 0; k < lifeExp + 3; ++k) {\r\n      dtaAgesAll.push(age + k);\r\n    }\r\n\r\n    //if (this.props.INAOption !== DISPLAY_INCOME) {\r\n    var dataFutureINA = this.getDataFutureINA();\r\n    const dataShortfallFV = {\r\n      labels: dtaAgesAll, // this.dataAges,\r\n      datasets: [\r\n        {\r\n          label:\r\n            this.props.language === \"en\"\r\n              ? \"Future insurance needs\"\r\n              : \"Besoins d’assurance futurs\", //Income Shortfall',\r\n          data: dataFutureINA,\r\n\r\n          fill: true, // Don't fill area under the line\r\n          borderColor: \"darkred\", // Line color\r\n          backgroundColor: \"rgba(244, 144, 128, 0.8)\"\r\n        }\r\n      ]\r\n    };\r\n    //} else {\r\n    let dataTaxLiabLifeExp = [];\r\n    let dataTaxLiab = []; // this.props.dataEstateLiability;\r\n\r\n    for (k = 0; k < lifeExp + 3; ++k) {\r\n      dataTaxLiabLifeExp.push(0);\r\n      dataTaxLiab.push(this.props.dataEstateLiability[k]);\r\n    }\r\n    dataTaxLiabLifeExp[lifeExp] = dataTaxLiab[lifeExp];\r\n    dataTaxLiab[lifeExp] = 0;\r\n\r\n    // console.log(this.INAEstateOption, age, dtaAgesAll, lifeExp);\r\n    const dataTaxLiability = {\r\n      labels: dtaAgesAll,\r\n      datasets: [\r\n        {\r\n          label:\r\n            this.props.language === \"en\"\r\n              ? \"Future insurance Needs\"\r\n              : \"Future insurance Needs ^F\", //Income Shortfall',\r\n          //type: \"line\",\r\n          data: dataTaxLiab,\r\n\r\n          fill: true, // Don't fill area under the line\r\n          borderColor: \"darkGrey\", // Line color\r\n          backgroundColor: \"#607d8b\"\r\n        },\r\n        {\r\n          label:\r\n            this.props.language === \"en\"\r\n              ? \"Life Expectancy \"\r\n              : \"Espérance de vie\", //Income Shortfall',\r\n          //type: \"line\",\r\n          data: dataTaxLiabLifeExp,\r\n          fill: true, // Don't fill area under the line\r\n          borderColor: \"#6AAd8b\",\r\n          backgroundColor: \"rgb(106,173,139,.5)\"// \"rgba(96, 125, 139, .7)\"\r\n        }\r\n      ]\r\n    };\r\n\r\n  const dataPieAssets = {\r\n  labels: [\r\n    \"Cash/TFSA/Insurance\", \"RRSP/RRIF\", \"Public/Private shares\", \"Real Estate\", \"Other\"\r\n  ],\r\n  datasets: [\r\n    {\r\n         data: [\r\n        getAssetsCategoryTotal(this.props.input.dataInput,ASSETS.CASH.Key)+\r\n        getAssetsCategoryTotal(this.props.input.dataInput,ASSETS.LIFE_INSURANCE.Key)+\r\n        getAssetsCategoryTotal(this.props.input.dataInput,ASSETS.CHARITABLE_GIFTS_TAX_CREDIT.Key)\r\n        , \r\n        getAssetsCategoryTotal(this.props.input.dataInput,ASSETS.RRSP_RRIF.Key), \r\n        getAssetsCategoryTotal(this.props.input.dataInput,ASSETS.SMALL_BUSINESS_SHARES.Key)+\r\n        getAssetsCategoryTotal(this.props.input.dataInput,ASSETS.STOCKS_BONDS.Key),\r\n        getAssetsCategoryTotal(this.props.input.dataInput,ASSETS.REAL_ESTATE.Key)+\r\n        getAssetsCategoryTotal(this.props.input.dataInput,ASSETS.PERSONAL_RESIDENCE.Key),\r\n        getAssetsCategoryTotal(this.props.input.dataInput,ASSETS.OTHER_ASSETS.Key)\r\n      ],\r\n      backgroundColor: [\"#F7464A\", \"#46BFBD\", \"#FDB45C\", \"#949FB1\", \"#4D5360\"]\r\n    }\r\n  ]\r\n}\r\nconst dataPieTax = {\r\n  labels: [\r\n    \"Non-Taxable\", \"RRSP/RRIF\", \"Capital Gains\", \"Taxed As Income\", \"Dividend\"\r\n  ],\r\n  datasets: [\r\n    {\r\n         data: [\r\n        getAssetsTaxCategoryTotal(this.props.input.dataInput,ASSET_TAX.NON_TAXABLE.Key), \r\n        getAssetsTaxCategoryTotal(this.props.input.dataInput,ASSET_TAX.REGISTERED.Key), \r\n        getAssetsTaxCategoryTotal(this.props.input.dataInput,ASSET_TAX.CAPITAL_GAINS_ANNUAL.Key)+\r\n        getAssetsTaxCategoryTotal(this.props.input.dataInput,ASSET_TAX.CAPITAL_GAINS_DEFERRED.Key),\r\n        getAssetsTaxCategoryTotal(this.props.input.dataInput,ASSET_TAX.FULLY_TAXABLE.Key), \r\n        getAssetsTaxCategoryTotal(this.props.input.dataInput,ASSET_TAX.DIVIDEND.Key)\r\n      ],\r\n      backgroundColor: [\"#F7464A\", \"#46BFBD\", \"#FDB45C\", \"#949FB1\", \"#4D5360\"]\r\n    }\r\n  ]\r\n}\r\n\r\nconst dataPieLiabs = {\r\n  labels: [\r\n    \"Loans\", \"Taxes\", \"Emergency Fund\", \"Other\"\r\n  ],\r\n  datasets: [\r\n    {\r\n         data: [\r\n        getLiabsCategoryTotal(this.props.input.dataInput,LIABILITIES.OUTSTANDING_LOANS.Key)+\r\n        getLiabsCategoryTotal(this.props.input.dataInput,LIABILITIES.MORTGAGE_REDEMPTION.Key)+\r\n        getLiabsCategoryTotal(this.props.input.dataInput,LIABILITIES.CREDIT_CARDS.Key)+\r\n        getLiabsCategoryTotal(this.props.input.dataInput,LIABILITIES.CLIENT_TAX_LIABILITY.Key)\r\n        , \r\n        getLiabsCategoryTotal(this.props.input.dataInput,LIABILITIES.INCOME_TAXES.Key), \r\n        getLiabsCategoryTotal(this.props.input.dataInput,LIABILITIES.EMERGENCY_FUND.Key),\r\n        getLiabsCategoryTotal(this.props.input.dataInput,LIABILITIES.OTHER.Key)+\r\n        getLiabsCategoryTotal(this.props.input.dataInput,LIABILITIES.CHILD_HOME_CARE.Key)\r\n      ],\r\n      backgroundColor: [\"#F7464A\", \"#46BFBD\", \"#FDB45C\", \"#949FB1\"]\r\n    }\r\n  ]\r\n}\r\nconst dataPieLiabsAtDeath = {\r\n  labels: [\r\n    \"Last Expenses\", \"Legal and Executor Fees\", \"Future Commitments\"\r\n  ],\r\n  datasets: [\r\n    {\r\n         data: [\r\n           getLiabsCategoryTotal(this.props.input.dataInput,LIABILITIES.LAST_EXPENSES.Key),\r\n        getLiabsCategoryTotal(this.props.input.dataInput,LIABILITIES.LEGAL_AND_EXECUTOR_FEES.Key), \r\n        getLiabsCategoryTotal(this.props.input.dataInput,LIABILITIES.LEGACY_FOR_CHILDREN.Key)+\r\n        getLiabsCategoryTotal(this.props.input.dataInput,LIABILITIES.CHARITABLE_GIFTS.Key)\r\n      ],\r\n      backgroundColor: [\"#F7464A\", \"#46BFBD\", \"#FDB45C\"]\r\n    }\r\n  ]\r\n}\r\n\r\n\r\n\r\n\r\n//options\r\n  var optionsPie = {\r\n    responsive: true,\r\n    title: {\r\n      display: true,\r\n      position: \"top\",\r\n      text: \"Assets Breakdown Today\",\r\n      fontSize: 14,//8,\r\n      fontColor: \"#111\"\r\n    },\r\n    legend: {\r\n      display: true,\r\n      position: \"right\",\r\n      labels: {\r\n        fontColor: \"#333\",\r\n        fontSize: 12//16\r\n      }\r\n    }\r\n  };\r\n   \r\n   \r\n   let optionsPieTax = JSON.parse(JSON.stringify(optionsPie));\r\n   optionsPieTax.title.text=\"Tax Treatment of Assets\"\r\n\r\nlet optionsPieLiabsAtDeath = JSON.parse(JSON.stringify(optionsPie));\r\n   optionsPieLiabsAtDeath.title.text=\"Liabilities At Death\"\r\n\r\nlet optionsPieLiabs = JSON.parse(JSON.stringify(optionsPie));\r\n   optionsPieLiabs.title.text=\"Liabilities Breakdown\"\r\n\r\n\r\n\r\n\r\nconst dataPieEstateLiabNow = {\r\n  labels: [\r\n    \"Liabilities\", \"Taxes: RRSP/RRIF\", \"Taxes: Capital Gains\", \"Taxes: As Income\", \"Taxes: Dividend\"\r\n  ],\r\n  datasets: [\r\n    {\r\n         data: this.state.estateLiab,\r\n      backgroundColor: [\"#F7464A\", \"#46BFBD\", \"#FDB45C\", \"#949FB1\", \"#4D5360\"]\r\n    }\r\n  ]\r\n}\r\nconst dataPieEstateLiabLE = {\r\n  labels: [\r\n    \"Liabilities\", \"Taxes: RRSP/RRIF\", \"Taxes: Capital Gains\", \"Taxes: As Income\", \"Taxes: Dividend\"\r\n  ],\r\n  datasets: [\r\n    {\r\n         data: this.state.estateLiabLE,\r\n      backgroundColor: [\"#F7464A\", \"#46BFBD\", \"#FDB45C\", \"#949FB1\", \"#4D5360\"]\r\n    }\r\n  ]\r\n}\r\n let optionsPieEstateLiab= JSON.parse(JSON.stringify(optionsPie));\r\n   optionsPieEstateLiab.title.text=\"Estate Liability Today\"\r\n\r\nlet optionsPieEstateLiabLE= JSON.parse(JSON.stringify(optionsPie));\r\n   optionsPieEstateLiabLE.title.text=\"Estate Liability at Life Expectancy +3\"\r\n\r\n\r\n\r\n\r\n\r\n    /* var ctx = document.getElementById('myChart3');\r\n\r\n    var myChart3=new Chart(ctx, {\r\n      type: \"bar\", // override the default type\r\n\r\n      data: {\r\n        labels: dtaAgesAll,\r\n        datasets: [\r\n          {\r\n            label:\r\n              this.props.language === \"en\"\r\n                ? \"Life Expectancy\"\r\n                : \"Life Expectancy ^F\", //Income Shortfall',\r\n            data: dataTaxLiabLifeExp,\r\n            borderColor: \"#6AAd8b\",\r\n            backgroundColor: \"rgb(106,173,139,.5)\"\r\n          },\r\n          {\r\n            type: \"line\", // set the default type\r\n            label:\r\n              this.props.language === \"en\"\r\n                ? \"Future insurance Needs\"\r\n                : \"Future insurance Needs ^F\", //Income Shortfall',\r\n            //type: \"line\",\r\n            data: this.props.dataEstateLiability,\r\n            fill: true, // Don't fill area under the line\r\n            borderColor: \"darkGrey\", // Line color\r\n            backgroundColor: \"#607d8b\"\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        //Customize chart options\r\n      }\r\n    });\r\n */\r\n    \r\n    //this.taxLiabChartRef = this.chartRef.current.getContext(\"2d\");\r\n    /* new Chart(this.taxLiabChartRef, {\r\n      type: \"bar\", // override the default type\r\n\r\n      data: {\r\n        labels: dtaAgesAll,\r\n        datasets: [\r\n          {\r\n            label:\r\n              this.props.language === \"en\"\r\n                ? \"Life Expectancy\"\r\n                : \"Life Expectancy ^F\", //Income Shortfall',\r\n            data: dataTaxLiabLifeExp,\r\n            borderColor: \"#6AAd8b\",\r\n            backgroundColor: \"rgb(106,173,139,.5)\"\r\n          },\r\n          {\r\n            type: \"line\", // set the default type\r\n            label:\r\n              this.props.language === \"en\"\r\n                ? \"Future insurance Needs\"\r\n                : \"Future insurance Needs ^F\", //Income Shortfall',\r\n            //type: \"line\",\r\n            data: this.props.dataEstateLiability,\r\n            fill: true, // Don't fill area under the line\r\n            borderColor: \"darkGrey\", // Line color\r\n            backgroundColor: \"#607d8b\"\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        //Customize chart options\r\n      }\r\n    }); */\r\n\r\n    // FV of prems\r\n    let dataFVofPrems = this.getDataFVofPrems(dataFutureINA);\r\n\r\n    // console.log(this.props.dataEstateLiability);\r\n\r\n    const dataMCCpremFV = {\r\n      labels: dtaAgesAll, // this.dataAges,\r\n      datasets: [\r\n        {\r\n          label:\r\n            this.props.language === \"en\"\r\n              ? \"Future Value of premiums paid      vs \"\r\n              : \"EquiBuild quote ^F\", //Income Shortfall',\r\n          data: dataFVofPrems,\r\n          fill: true,\r\n          borderColor: \"darkgreen\", // Line color\r\n          backgroundColor: \"rgba(144, 244, 88, .2)\"\r\n        },\r\n        {\r\n          label:\r\n            this.props.language === \"en\"\r\n              ? \"Raise cash to pay for shortfall \"\r\n              : \"Future insurance needs ^F\", //Income Shortfall',\r\n          data:\r\n            this.props.INAOption === DISPLAY_INCOME\r\n              ? dataFutureINA\r\n              : this.props.dataEstateLiability,\r\n          //[10964, 13734, 14008, 14288, 14574, 14866, 15163, 15466, 15776, 16091, 16413, 16741, 17076, 17417, 17766, 18121, 18484, 18853, 19230, 19615, 20007, 20407, 20815, 21232, 21656, 22090, 27632, 28184, 28748, 29323, 29910, 30508, 31118, 31740, 32375, 33023, 33683, 34357, 35044, 35745, 36460, 37189, 37933, 38691, 39465, 40254],\r\n          fill: true, // Don't fill area under the line\r\n          borderColor:\r\n            this.props.INAOption === DISPLAY_INCOME ? \"darkred\" : \"darkGrey\",\r\n          backgroundColor:\r\n            this.props.INAOption === DISPLAY_INCOME\r\n              ? \"rgba(244, 144, 128, 0.9)\"\r\n              : \"#607D8B\"\r\n        }\r\n      ]\r\n    };\r\n\r\n    let SumOfSquresDiff = 0;\r\n    let i;\r\n    for (i = 0; i < this.lifeExp; ++i) {\r\n      let insVal = DISPLAY_INCOME\r\n        ? dataFutureINA[i]\r\n        : this.props.dataEstateLiability[i];\r\n      //console.log(SumOfSquresDiff,dataFVofPrems,insVal)\r\n      SumOfSquresDiff += Math.pow(dataFVofPrems[i] - insVal, 2);\r\n    }\r\n    SumOfSquresDiff = numFormat(\r\n      Math.round(SumOfSquresDiff / (1000000 * this.lifeExp)),\r\n      false,\r\n      5,\r\n      \",\"\r\n    );\r\n\r\n    const dataMCCQuoteDB = {\r\n      labels: dtaAgesAll, // this.dataAges,\r\n      datasets: [\r\n        {\r\n          label:\r\n            this.props.language === \"en\"\r\n              ? \"EquiBuild quote\"\r\n              : \"EquiBuild quote ^F\", //Income Shortfall',\r\n          data: this.dataDB,\r\n          fill: true,\r\n          borderColor: \"darkblue\", // Line color\r\n          backgroundColor: \"rgba(144, 144, 188, .3)\"\r\n        },\r\n        {\r\n          label:\r\n            this.props.language === \"en\"\r\n              ? \"Future insurance needs\"\r\n              : \"Future insurance needs ^F\", //Income Shortfall',\r\n          data:\r\n            this.props.INAOption === DISPLAY_INCOME\r\n              ? dataFutureINA\r\n              : this.props.dataEstateLiability,\r\n          //[10964, 13734, 14008, 14288, 14574, 14866, 15163, 15466, 15776, 16091, 16413, 16741, 17076, 17417, 17766, 18121, 18484, 18853, 19230, 19615, 20007, 20407, 20815, 21232, 21656, 22090, 27632, 28184, 28748, 29323, 29910, 30508, 31118, 31740, 32375, 33023, 33683, 34357, 35044, 35745, 36460, 37189, 37933, 38691, 39465, 40254],\r\n          fill: true, // Don't fill area under the line\r\n          borderColor:\r\n            this.props.INAOption === DISPLAY_INCOME ? \"darkred\" : \"darkGrey\",\r\n          backgroundColor:\r\n            this.props.INAOption === DISPLAY_INCOME\r\n              ? \"rgba(244, 144, 128, 0.9)\"\r\n              : \"#607D8B\"\r\n        }\r\n      ]\r\n    };\r\n\r\n    const optionsFV = {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            stacked: true,\r\n            ticks: {\r\n              beginAtZero: true\r\n            }\r\n          }\r\n        ],\r\n        yAxes: [\r\n          {\r\n            stacked: false,\r\n            ticks: {\r\n              beginAtZero: true,\r\n              steps: 10,\r\n              stepValue: 5\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    };\r\n\r\n    //let colHeaders=[\"Year\", \"Survivor's Age\", \"Insurance Need\", \"Propsed Plan Death Benefit\", \"Future Value of Premiums\", \"Net Advantage of Insurance\" ];\r\n    let colHeaders = [\r\n      \"Survivor's Age\",\r\n      \"Insurance Need\",\r\n      \"Premiums\",\r\n      \"Propsed Plan Death Benefit\",\r\n      \"Future Value of Premiums\"\r\n    ];\r\n    let dataProjection = [];\r\n    dataProjection.push(this.dataAges);\r\n    dataProjection.push(\r\n      this.props.INAOption === DISPLAY_INCOME\r\n        ? dataFutureINA\r\n        : this.props.dataEstateLiability\r\n    );\r\n    dataProjection.push(this.dataPremiums);\r\n    dataProjection.push(this.dataDB);\r\n    dataProjection.push(dataFVofPrems);\r\n\r\n    let dataProjectionCV = [];\r\n    dataProjectionCV.push(this.dataAges);\r\n    dataProjectionCV.push(this.dataSVEquiBuild);\r\n    dataProjectionCV.push(this.dataSVManulife);\r\n\r\n    let needToE =\r\n      \"Insurance Needs Projections from today to life expectancy plus 3 years (\" +\r\n      lifeExp +\r\n      \" + 3)\";\r\n    let needToF =\r\n      \"Insurance Needs to life expectancy (\" +\r\n      lifeExp +\r\n      \" years) plus 3 years^F\";\r\n    let needTo = this.props.language === \"en\" ? needToE : needToF;\r\n    // needTo += +this.props.projectEnd + \")\";\r\n\r\n    //console.log(this.state.loadingMCC);\r\n    return (\r\n      <div style={{ color: \"darkBlue\", marginTop: \"15px\" }}>\r\n        {this.props.INAOption !== DISPLAY_INCOME && (\r\n          <MultiButtons\r\n            noButtons={2}\r\n            buttonCaption={[\"Estate of Client\", \"Estate of Couple\"]}\r\n            selectMultiButton={this.selectMultiButtonINAorTax}\r\n          />\r\n        )}\r\n        \r\n        <div style={{ width: \"90%\" }}>\r\n        <div style={{ width: \"100%\" }}> \r\n        \r\n           <h3 className=\"ppi1\">\r\n          {this.props.INAOption === DISPLAY_INCOME\r\n            ? \"Your current financial situation is summerized below:\" //this.props.insuranceNeed\r\n            : <div><br/><br/>Estate Liability breakdown Today and at Life Expectancy plus 3 years: <br/></div>\r\n            }\r\n          {/*numFormat(this.props.dataTaxLiability[0], false, 2, \",\")}*/}\r\n        </h3>\r\n\r\n \r\n          <div style={{ width: \"100%\" }}>\r\n            {this.props.INAOption === DISPLAY_INCOME ? (\r\n               <div><article className=\"canvas-container\" style={{height: \"450px\" }}>\r\n                <div style={{overflow:'hidden', float: 'left', width: '50%',height: \"400px\" }}><Pie data={dataPieAssets} options={optionsPie} /></div>\r\n                <div style={{float: 'left',width: '50%',height: \"400px\"}}><Pie data={dataPieTax} options={optionsPieTax} /></div>\r\n              </article>\r\n              <article className=\"canvas-container\" style={{height: \"450px\" }}>\r\n                <div style={{overflow:'hidden', float: 'left', width: '50%',height: \"400px\" }}><Pie data={dataPieLiabs} options={optionsPieLiabs} /></div>\r\n                <div style={{float: 'left',width: '50%',height: \"400px\"}}><Pie data={dataPieLiabsAtDeath} options={optionsPieLiabsAtDeath} /></div>\r\n              </article></div>\r\n         ) : (\r\n           \r\n            <article className=\"canvas-container\" style={{height: \"450px\" }}>\r\n                <div style={{overflow:'hidden', float: 'left', width: '50%',height: \"400px\" }}><Pie data={dataPieEstateLiabNow} options={optionsPieEstateLiab} /></div >\r\n                <div style={{float: 'left',width: '50%',height: \"400px\"}}><Pie data={dataPieEstateLiabLE} options={optionsPieEstateLiabLE} /></div>\r\n              </article>)}\r\n          </div>\r\n\r\n<br/>\r\n           <h3 className=\"ppi1\">\r\n          {this.props.INAOption === DISPLAY_INCOME\r\n            ? <div>\"Net Worth Today:\"<br/> \"Assets:\"<br/> \"Liabilities:\"</div> //this.props.insuranceNeed\r\n            : <br/>\r\n            }\r\n          {/*numFormat(this.props.dataTaxLiability[0], false, 2, \",\")}*/}\r\n        </h3>\r\n\r\n\r\n\r\n        <h3 className=\"ppi1\">\r\n          {needTo} {/*:{\" \"}*/}\r\n          {this.props.INAOption === DISPLAY_INCOME\r\n            ? \"\" //this.props.insuranceNeed\r\n            : \"\"}\r\n          {/*numFormat(this.props.dataTaxLiability[0], false, 2, \",\")}*/}\r\n        </h3>\r\n\r\n             {this.props.INAOption === DISPLAY_INCOME ? (\r\n              <article className=\"canvas-container\" style={{ height: \"200px\" }}>\r\n                <Line data={dataShortfallFV} options={optionsFV} />\r\n              </article>\r\n            ) : (\r\n              <article className=\"canvas-container\" style={{ height: \"200px\" }}>\r\n                <Bar data={dataTaxLiability} options={optionsFV} />\r\n              </article>\r\n            )}\r\n\r\n            {/*  {this.props.INAOption !== DISPLAY_INCOME &&\r\n             <div>\r\n              <canvas id=\"myChart\" ref={this.chartRef} />\r\n            </div>}\r\n             */}\r\n          \r\n            <br /> <br /> <br /> <br />\r\n            <hr />\r\n            <h2>Insurance Quote:</h2>\r\n            <div style={{ width: \"100%\", float: \"left\", clear: \"left\" }}>\r\n              <MultiButtons\r\n                noButtons={1}\r\n                buttonCaption={[\"Optimize\"]}\r\n                selectMultiButton={this.solveForOptimumQuote}\r\n              />\r\n            </div>\r\n            <div style={{ width: \"100%\", float: \"left\", clear: \"left\" }}>\r\n              <MultiButtons\r\n                noButtons={2}\r\n                buttonCaption={[\"Best EquiBuild fit\", \"Manulife UL fit\"]}\r\n                selectMultiButton={this.solveForOptimumEquiBuild}\r\n              />\r\n            </div>\r\n            <InputField\r\n              inputName=\"Insurance Amtount\"\r\n              id={4}\r\n              format={2}\r\n              Count={1}\r\n              language={this.props.language}\r\n              inputValue={this.props.INAOption === DISPLAY_INCOME\r\n        ? this.props.insuranceNeed\r\n        : this.props.dataEstateLiability[0]}\r\n              maxValue={1000}\r\n              handleUpdateInput={this.selectMultiButton}\r\n            />\r\n            <InputField\r\n              inputName=\"No. of deposits\"\r\n              id={1}\r\n              format={1}\r\n              Count={1}\r\n              language={this.props.language}\r\n              inputValue={this.premiumDur}\r\n              handleUpdateInput={this.selectMultiButton}\r\n            />\r\n            <InputField\r\n              inputName=\"Over min. deposit\"\r\n              id={2}\r\n              format={3}\r\n              Count={1}\r\n              maxValue={300}\r\n              language={this.props.language}\r\n              inputValue={this.minMultiple}\r\n              handleUpdateInput={this.selectMultiButton}\r\n            />\r\n            <h3 style={{ marginTop: \"20px\", marginLeft: \"20px\" }}>\r\n              Minimize this measure of goodness of fit: {SumOfSquresDiff}{\" \"}\r\n              <span style={{ leftPadding: \"20px\" }}>\r\n                {\" \"}\r\n                Premium duration: {this.bestPremiumDur}\r\n              </span>{\" \"}\r\n            </h3>\r\n            <article className=\"canvas-container\" style={{ height: \"200px\" }}>\r\n              <Line data={dataMCCQuoteDB} options={optionsFV} />\r\n            </article>\r\n            <br /> <br /> <br /> <br />\r\n            <br /> <br /> <br /> <br />\r\n            <hr />\r\n            <h2>Compare Options</h2>\r\n            <article className=\"canvas-container\" style={{ height: \"200px\" }}>\r\n              <Line data={dataMCCpremFV} options={optionsFV} />\r\n            </article>\r\n            <p />\r\n            <br />\r\n            <p />\r\n            <br />\r\n            <hr />\r\n           \r\n            <div style={{ width: \"60%\" }}>\r\n              <DataTable\r\n                dataColTitles={colHeaders}\r\n                dataProjection={dataProjection}\r\n                gridTitle={\"Compare Options\"}\r\n                language={this.props.language}\r\n              />\r\n            </div>\r\n            <br />\r\n            {this.dataSVManulife.length > 0 && this.dataSVEquiBuild.length > 0 && (\r\n              <div style={{ width: \"60%\" }}>\r\n                <DataTable\r\n                  dataColTitles={[\r\n                    \"Age\",\r\n                    \"EquiBuild Surrnder Value\",\r\n                    \"ManuLife UL Surrnder Value\"\r\n                  ]}\r\n                  dataProjection={dataProjectionCV}\r\n                  gridTitle={\"Compare Surrender Values: EquiBuild vs Manulife UL\"}\r\n                  language={this.props.language}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}