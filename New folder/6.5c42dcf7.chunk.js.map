{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/OutputPDFINAAppendix.js","components/OutputGraphs.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","props","a","pdf","PDF","Create","paraY","lang","dataInput","Presentations","language","setFontForTitle","paragraph","OUTPUTTEXT","pgAppendix","pgAppendixT","insertPara","setFontForParas","pgAppendixP1","paraWidth","h","document","getElementById","clientHeight","w","clientWidth","hFinal","wFinal","AddChart","InToPt","paraLeft","pgAppendixP2","graphWidth","pgAppendixP3","Footer","pgFooter","LE","lastRow","aggregateGrid","dataProjection","length","insertGrid","data","showOnPage","Save","size","SetFont","HELVETICA","NORMAL","undefined","SetFontSize","PxToPt","BOLD","SetTextColor","TIMES","para","left","MultilineText","insertTableRow","values","height","paraWidths","bold","fillColor","align","fill","tableRow","grid","wrappedTitleBar","orientation","startYr","mode","titleY","title1","title2","para1","para2","i","cols","dataColTitles","max","decimalChar","thousands","Widths","AddPage","push","totalGridWidth","goodWidth","textWidth","widthTotal","goodWidthMultiLine","addMore","textWidthMultiLine","gridTitle","height2","insertTableTitle","rows","FooterLandscape","String","parseFloat","toString","formatMoney","cleanFormat","OutputGraphs","doPDF","doSavePdfINAAppendixAction","j","pv","this","negNeed","dataCashFlowNeeds","map","x","mobile","window","innerWidth","innerHeight","maxYScale","Math","ceil","dataCashFlowGov","dataShortfall","dataCashFlowPersonal","options","responsive","maintainAspectRatio","legend","display","labels","fontColor","fontSize","scales","xAxes","stacked","ticks","beginAtZero","yAxes","value","index","Intl","NumberFormat","format","replace","labelsBilingual","GRAPHS_LABLES","clients","Clients","PDFTopMargin","isSingleFamily","dataNAAges","datasets","label","persCF","borderColor","backgroundColor","govCF","incomeNeeds","dataFutureINA","totalLiab","Liabilitys","currValue","shortfallNeg","pow","shortfall","optionsPie","title","position","text","assetsBrk","optionsPieLiabs","JSON","parse","stringify","liabsBrk","dataPieAssets","cashLike","RRSP","shares","realEstate","otherAssets","getAssetsCategoryTotal","ASSETS","CASH","Key","LIFE_INSURANCE","CHARITABLE_GIFTS_TAX_CREDIT","TFSA","RRSP_RRIF","SMALL_BUSINESS_SHARES","STOCKS_BONDS","REAL_ESTATE","PERSONAL_RESIDENCE","OTHER_ASSETS","dataPieLiabs","loans","taxes","emergency","otherLiabs","atDeath","getLiabsCategoryTotal","LIABILITIES","OUTSTANDING_LOANS","MORTGAGE_REDEMPTION","CREDIT_CARDS","CLIENT_TAX_LIABILITY","INCOME_TAXES","EMERGENCY_FUND","OTHER","CHILD_HOME_CARE","LAST_EXPENSES","LEGAL_AND_EXECUTOR_FEES","LEGACY_FOR_CHILDREN","CHARITABLE_GIFTS","PROBATE","needTo","insNeedLine","assetsPie","Assets","id","className","liabsPie","versionDetails","versionNumeric","style","width","float","clear","marginTop","marginRight","paddingRight","onClick","type","CONTROLTITLE","pdfINAAppendix","Info","infoIcon","getInfoINA","currFins","React","Component"],"mappings":"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","file":"static/js/6.5c42dcf7.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import {\r\n    TITLES,\r\n    ASSETS,\r\n    IMAGE_LOGO,\r\n    IMAGE_LOGO_OTHERPAGES,\r\n    IMAGE_APPLET_EP,\r\n  } from \"../definitions/generalDefinitions\";\r\n  import { OUTPUTTEXT} from \"../definitions/outputDefinitions\";\r\n  import { OUTPUTTEXTEP  } from \"../definitions/outputDefinitionsEP\";\r\n  import { formatMoney, formatMoney2, cleanFormat } from \"../utils/helper\";\r\n  import { getOutputValues } from \"../data/dataExchange\";\r\n  //import {insertGrid} from \"./OutputPDFEP\"\r\n\r\n  import {\r\n    PDF,\r\n    InToPt,\r\n    PxToPt,\r\n    HELVETICA,\r\n    TIMES,\r\n    NORMAL,\r\n    BOLD,\r\n    HEADER_RECT_IN_W,\r\n  } from \"./PDF\";\r\n  import {\r\n    ASSET_TAX_TYPE_PRINCIPAL_RES,\r\n    ASSET_TAX_TYPE_REAL_ESTATE,\r\n    ASSET_TAX_TYPE_STOCKS,\r\n    ASSET_TAX_TYPE_SMALL_BUS,\r\n    ASSET_TAX_TYPE_RRSP,\r\n    ASSET_TAX_TYPE_INTEREST,\r\n    ASSET_TAX_TYPE_OTHER,\r\n    ASSET_TAX_TYPE_COUNT,\r\n  } from \"../definitions/outputDefinitionsEP\";\r\n  \r\n  const DISPLAY_INCOME = 1;\r\n  \r\n  const BULLET_FONT_SIZE = 24;\r\n  const NUMBER_BULLET_FONT_SIZE = 11;\r\n  const GRID_AGGREGATE = 0;\r\n  const GRID_INDIVIDUAL = 1;\r\n  \r\n  const LINES_PER_PAGE_LANDSCAPE = 27;\r\n  const LINES_PER_PAGE_PORTRAIT = 37;\r\n  \r\n\r\n\r\nexport async function doSavePdfINAAppendixAction(props) {\r\n  //  try \r\n  {\r\n        let pdf = new PDF();\r\n        pdf.Create();\r\n    \r\n       // var paragraph;\r\n        let height = 0.2;\r\n        let Widths = [1.2, 0.6, 1.8, 1.4];\r\n        let values;\r\n        const paraWidth = 6;\r\n        const paraLeft = 1.2;\r\n        const lineHeight = 0.196;\r\n        const indent = 0.15;\r\n        let paraY = 1;// 2.2 * lineHeight;\r\n    \r\n        // pdf output shared with presentation\r\n      //  let output = getOutputValues(props);\r\n    \r\n        const lang = props.dataInput.Presentations[0].language;\r\n        const pg1TitleY = 4.2;\r\n    \r\n    //  pdf.Header(OUTPUTTEXT[lang].pg1T);\r\n\r\n// Appendix title\r\n      setFontForTitle(pdf, lang, 16);\r\n      let paragraph = OUTPUTTEXT[lang].pgAppendix + \": \" + OUTPUTTEXT[lang].pgAppendixT;\r\n      insertPara(pdf, paragraph, paraLeft-.4, paraY, paraWidth);\r\n    \r\n      setFontForParas(pdf);\r\n      paragraph = OUTPUTTEXT[lang].pgAppendixP1;\r\n      paraY = paraY + 4 *lineHeight;\r\n    insertPara(pdf, paragraph, paraLeft, paraY, paraWidth);\r\n     \r\n    paraY = paraY + 1.5* lineHeight;\r\n     \r\n      const graphWidth=paraWidth+1\r\n      let h= document.getElementById(\"barNeeds\").clientHeight\r\n      let w= document.getElementById(\"barNeeds\").clientWidth\r\n      const maxH=2;\r\n      const maxH2=2.5\r\n      let hFinal=graphWidth*h/w>maxH?maxH:graphWidth*h/w\r\n      let wFinal=graphWidth*h/w>maxH?maxH*w/h:graphWidth\r\n      \r\n      pdf.AddChart(\r\n        \"barNeeds\",\r\n        InToPt(paraLeft-.5),\r\n        InToPt(paraY),\r\n        InToPt(wFinal),\r\n        InToPt(hFinal)\r\n        //InToPt(graphWidth),\r\n        //InToPt(graphWidth*h/w)\r\n      );\r\n      // paraY = paraY + 5*lineHeight;\r\n      \r\n      paraY = paraY + 12* lineHeight;\r\n      paragraph = OUTPUTTEXT[lang].pgAppendixP2;\r\n      insertPara(pdf, paragraph, paraLeft, paraY, paraWidth);\r\n      paraY = paraY + 1.5* lineHeight;\r\n     \r\n      h= document.getElementById(\"barShortfall\").clientHeight\r\n      w= document.getElementById(\"barShortfall\").clientWidth\r\n      hFinal=graphWidth*h/w>maxH?maxH:graphWidth*h/w\r\n      wFinal=graphWidth*h/w>maxH?maxH*w/h:graphWidth\r\n      pdf.AddChart(\r\n        \"barShortfall\",\r\n        InToPt(paraLeft-.5),\r\n        InToPt(paraY),\r\n        InToPt(wFinal),\r\n        InToPt(hFinal)\r\n      );\r\n      \r\n      h= document.getElementById(\"pieAssets\").clientHeight\r\n      w= document.getElementById(\"pieAssets\").clientWidth\r\n      hFinal=graphWidth*h/w>maxH2?maxH2:graphWidth*h/w\r\n      wFinal=graphWidth*h/w>maxH2?2*maxH2*w/h:graphWidth/2\r\n      \r\n      paraY = paraY + 13 * lineHeight;\r\n      paragraph = OUTPUTTEXT[lang].pgAppendixP3;\r\n      insertPara(pdf, paragraph, paraLeft, paraY, paraWidth);\r\n      paraY = paraY + 1.5* lineHeight;\r\n      pdf.AddChart(\r\n        \"pieAssets\",\r\n        InToPt(paraLeft-1),\r\n        InToPt(paraY),\r\n        /* InToPt(wFinal),\r\n        InToPt(.8*hFinal) */\r\n        InToPt(graphWidth/2),\r\n        InToPt(graphWidth*h/w)\r\n      );\r\n     // paraY = paraY + 10 * lineHeight;\r\n     h= document.getElementById(\"pieLiabs\").clientHeight\r\n     w= document.getElementById(\"pieLiabs\").clientWidth\r\n     hFinal=graphWidth*h/w>maxH2?maxH2:graphWidth*h/w\r\n     wFinal=graphWidth*h/w>maxH2?2*maxH2*w/h:graphWidth/2\r\n      pdf.AddChart(\r\n        \"pieLiabs\",\r\n        InToPt(paraLeft+graphWidth/2-.5),\r\n        InToPt(paraY),\r\n        /* InToPt(wFinal),\r\n        InToPt(.8*hFinal) */\r\n        InToPt(graphWidth/2),\r\n        InToPt(graphWidth*h/w)\r\n      );\r\n\r\n      pdf.Footer(OUTPUTTEXT[lang].pgFooter);\r\n\r\n      const LE = props.LE; //- props.assetProjections[0].grid.dataProjection[1][0];\r\n      const lastRow=props.aggregateGrid.dataProjection[0].length\r\n      paragraph = OUTPUTTEXT[lang].pgAppendix + \": \" + OUTPUTTEXT[lang].pgAppendixT;\r\n    /* \r\n      insertGrid2(\r\n        pdf,\r\n        props.aggregateGrid,\r\n        LE,\r\n        paraLeft - 0.2,\r\n        1.65 * paraWidth,\r\n        lang,\r\n        true,\r\n        \"landscape\",\r\n        0,\r\n        GRID_AGGREGATE,\r\n        lastRow\r\n      ); */\r\n      insertGrid(\r\n        pdf,\r\n        props.aggregateGrid,\r\n        LE,\r\n        paraLeft - 0.2,\r\n        1.65 * paraWidth,\r\n        lang,\r\n        true,\r\n        \"landscape\",\r\n        0,\r\n        lastRow,        \r\n        GRID_AGGREGATE,\r\n        .65,\r\n        paragraph, \"\", \"\", \"\", OUTPUTTEXT[lang].pgFooter\r\n      )  \r\n\r\n      // if too long add another page\r\n      if (\r\n        lastRow > LINES_PER_PAGE_LANDSCAPE &&\r\n        lastRow < 2 * LINES_PER_PAGE_LANDSCAPE\r\n      )\r\n        insertGrid(\r\n          pdf,\r\n          props.aggregateGrid,\r\n          LE,\r\n          paraLeft - 0.2,\r\n          1.65 * paraWidth,\r\n          lang,\r\n          true,\r\n          \"landscape\",\r\n          LINES_PER_PAGE_LANDSCAPE,\r\n          lastRow,\r\n          GRID_AGGREGATE,.65,\r\n          paragraph, \"\", \"\", \"\", OUTPUTTEXT[lang].pgFooter\r\n          );\r\n      else if (lastRow > 2 * LINES_PER_PAGE_LANDSCAPE) {\r\n        insertGrid(\r\n          pdf,\r\n          props.aggregateGrid,\r\n          LE,\r\n          paraLeft - 0.2,\r\n          1.65 * paraWidth,\r\n          lang,\r\n          true,\r\n          \"landscape\",\r\n          LINES_PER_PAGE_LANDSCAPE,\r\n          lastRow,  \r\n          GRID_AGGREGATE,.65,\r\n          paragraph, \"\", \"\", \"\", OUTPUTTEXT[lang].pgFooter\r\n        );\r\n        insertGrid(\r\n          pdf,\r\n          props.aggregateGrid,\r\n          LE,\r\n          paraLeft - 0.2,\r\n          1.65 * paraWidth,\r\n          lang,\r\n          true,\r\n          \"landscape\",\r\n          2 * LINES_PER_PAGE_LANDSCAPE,\r\n          lastRow,  \r\n          GRID_AGGREGATE,.65,\r\n          paragraph, \"\", \"\", \"\", OUTPUTTEXT[lang].pgFooter\r\n        );\r\n      }\r\n\r\n      pdf.Footer(OUTPUTTEXT[lang].pgFooter);\r\n    \r\n          /*/*-Appendix\t\tgrids // Page 8*/\r\n    \r\n          // add a landscape page for aggregate grid\r\n    \r\n/*           const LE = props.LE; //- props.assetProjections[0].grid.dataProjection[1][0];\r\n          insertGrid2(\r\n            pdf,\r\n            props.aggregateGrid,\r\n            LE,\r\n            paraLeft - 0.2,\r\n            1.65 * paraWidth,\r\n            lang,\r\n            true,\r\n            \"landscape\",\r\n            0,\r\n            GRID_AGGREGATE\r\n          );\r\n          // if too long add another page\r\n          if (\r\n            LE + 3 > LINES_PER_PAGE_LANDSCAPE &&\r\n            LE + 3 < 2 * LINES_PER_PAGE_LANDSCAPE\r\n          )\r\n            insertGrid2(\r\n              pdf,\r\n              props.aggregateGrid,\r\n              LE,\r\n              paraLeft - 0.2,\r\n              1.65 * paraWidth,\r\n              lang,\r\n              true,\r\n              \"landscape\",\r\n              LINES_PER_PAGE_LANDSCAPE,\r\n              GRID_AGGREGATE\r\n            );\r\n          else if (LE + 3 > 2 * LINES_PER_PAGE_LANDSCAPE) {\r\n            insertGrid2(\r\n              pdf,\r\n              props.aggregateGrid,\r\n              LE,\r\n              paraLeft - 0.2,\r\n              1.65 * paraWidth,\r\n              lang,\r\n              true,\r\n              \"landscape\",\r\n              LINES_PER_PAGE_LANDSCAPE,\r\n              GRID_AGGREGATE\r\n            );\r\n            insertGrid2(\r\n              pdf,\r\n              props.aggregateGrid,\r\n              LE,\r\n              paraLeft - 0.2,\r\n              1.65 * paraWidth,\r\n              lang,\r\n              true,\r\n              \"landscape\",\r\n              2 * LINES_PER_PAGE_LANDSCAPE,\r\n              GRID_AGGREGATE\r\n            );\r\n          }\r\n          for (let j = 0; j < props.assetProjections.length; ++j)\r\n            insertGrid2(\r\n              pdf,\r\n              props.assetProjections[j].grid,\r\n              LE,\r\n              paraLeft,\r\n              paraWidth,\r\n              lang,\r\n              true,\r\n              \"portrait\",\r\n              0,\r\n              GRID_INDIVIDUAL\r\n            );\r\n    \r\n          //end ofPage 8\r\n          pdf.addFooterAndHeader(headerOffset, footerText, headerText);\r\n    \r\n          //-Using Life Insurance to Preserve Your Estate\t\t// Page 6\r\n          // logo if asked for\r\n          //    pdf.addCustomImage(\"EPOtherPagesLogo\", pg1TitleY, image);\r\n          result =\r\n            result &&\r\n            pdf.addCustomImage(IMAGE_LOGO_OTHERPAGES, pg1TitleY, image, false, top);\r\n    \r\n          paraY = 8 * lineHeight;\r\n          setFontForTitle(pdf, lang);\r\n          pdf.Text(OUTPUTTEXTEP[lang].pg9T, InToPt(paraLeft), InToPt(paraY));\r\n          setFontForParas(pdf);\r\n    \r\n          paraY = paraY + 2 * lineHeight;\r\n          insertPara(pdf, OUTPUTTEXTEP[lang].pg9P1, paraLeft, paraY, paraWidth);\r\n          paraY = paraY + (lang === \"fr\" ? 7 : 6) * lineHeight;\r\n          insertPara(pdf, OUTPUTTEXTEP[lang].pg9P2, paraLeft, paraY, paraWidth);\r\n    \r\n          //pdf.Footer(OUTPUTTEXTEP[lang].pgFooter);\r\n          // pdf.showOnPage();\r\n*/\r\n          var data = pdf.showOnPage();\r\n    \r\n//        // Done\r\n          pdf.Save(\"INA_Appendix_PDF.pdf\");\r\n          return data;\r\n        }\r\n    \r\n  \r\n}\r\n\r\n    function setFontForTitle(pdf, lang, size) {\r\n      pdf.SetFont(HELVETICA, NORMAL);\r\n      if (size === undefined) {\r\n        if (lang === \"en\") pdf.SetFontSize(PxToPt(25));\r\n        else pdf.SetFontSize(PxToPt(20));\r\n      } else {\r\n        pdf.SetFont(HELVETICA, BOLD);\r\n        if (lang === \"en\") pdf.SetFontSize(PxToPt(size));\r\n        else pdf.SetFontSize(PxToPt(size - 1));\r\n      }\r\n    \r\n      pdf.SetTextColor(0x45, 0x55, 0x60);\r\n    }\r\n    \r\n    function addNote(pdf, para, left, paraY, paraWidth) {\r\n      setFontForParas(pdf);\r\n      pdf.SetTextColor(150, 150, 150);\r\n      pdf.SetFontSize(PxToPt(12));\r\n      insertPara(pdf, para, left, paraY, paraWidth);\r\n      setFontForParas(pdf);\r\n    }\r\n    \r\n    function setFontForParas(pdf) {\r\n      pdf.SetFont(TIMES, NORMAL);\r\n      pdf.SetFontSize(PxToPt(16));\r\n      pdf.SetTextColor(0x45, 0x55, 0x60);\r\n    }\r\n    \r\n    function insertBullet(pdf, bullet, left, y, size) {\r\n      pdf.SetTextColor(115, 153, 198);\r\n      pdf.SetFontSize(PxToPt(size));\r\n      pdf.SetFont(TIMES, BOLD);\r\n      pdf.Text(\r\n        bullet,\r\n        InToPt(left + (size === BULLET_FONT_SIZE ? 0.02 : 0)),\r\n        InToPt(y - (size === BULLET_FONT_SIZE ? 0.03 : 0))\r\n      );\r\n      pdf.SetFont(TIMES, NORMAL);\r\n      pdf.SetFontSize(PxToPt(16));\r\n      pdf.SetTextColor(0x45, 0x55, 0x60);\r\n    }\r\n    \r\n    function insertPara(pdf, para, left, paraY, paraWidth) {\r\n      pdf.MultilineText(para, InToPt(left), InToPt(paraY), InToPt(paraWidth));\r\n    }\r\n    \r\n    function insertTableTitle(\r\n      pdf,\r\n      paraLeft,\r\n      paraY,\r\n      values,\r\n      height,\r\n      paraWidths,\r\n      fillColor\r\n    ) {\r\n      pdf.SetFontSize(PxToPt(12));\r\n      const fill = fillColor === undefined ? [115, 153, 198] : fillColor;\r\n      const textColor = [255, 255, 255];\r\n      pdf.SetFont(TIMES, BOLD);\r\n      const h = pdf.tableRow(\r\n        fill,\r\n        textColor,\r\n        paraLeft,\r\n        paraY,\r\n        values,\r\n        height,\r\n        paraWidths,\r\n        false,\r\n        false,\r\n        true\r\n      );\r\n      return h;\r\n    }\r\n    \r\n    function insertTableRow(\r\n      pdf,\r\n      paraLeft,\r\n      paraY,\r\n      values,\r\n      height,\r\n      paraWidths,\r\n      bold,\r\n      fillColor,\r\n      align\r\n    ) {\r\n      pdf.SetTextColor(0x45, 0x55, 0x60);\r\n      const fill = fillColor === undefined ? [249, 249, 249] : fillColor;\r\n      const textColor = [0x45, 0x55, 0x60];\r\n      pdf.SetFont(TIMES, bold ? BOLD : NORMAL);\r\n      pdf.tableRow(\r\n        fill,\r\n        textColor,\r\n        paraLeft,\r\n        paraY,\r\n        values,\r\n        height,\r\n        paraWidths,\r\n        true,\r\n        align\r\n      );\r\n    }\r\n    /* function insertTableRowBold(pdf, paraLeft, paraY, values, height, paraWidths,align) {\r\n      pdf.SetTextColor(0x45, 0x55, 0x60);\r\n      const fill = [235, 235, 235];\r\n      const textColor = [0x45, 0x55, 0x60];\r\n      pdf.SetFont(TIMES, BOLD);\r\n      pdf.tableRow(\r\n        fill,\r\n        textColor,\r\n        paraLeft,\r\n        paraY,\r\n        values,\r\n        height,\r\n        paraWidths,\r\n        true,\r\n        align\r\n      );\r\n    }\r\n     */\r\n    \r\n    /* function pdf.addCustomImage( id,pg1TitleY,image,firstPage){\r\n     \r\n    pdf.AddImageFitWidthOnly(\r\n      id,\r\n      InToPt(pg1TitleY - 3 + image.left*HEADER_RECT_IN_W/100), //1.51),\r\n      InToPt(firstPage?1.06:.29),\r\n      InToPt(6.04*image.size/100),\r\n      InToPt(firstPage?2.76:.38) // max height\r\n    );\r\n    } */\r\n\r\n\r\n    \r\n\r\nexport function insertGrid (\r\n  pdf,\r\n  grid,\r\n  LE,\r\n  paraLeft,\r\n  paraWidth,\r\n  lang,\r\n  wrappedTitleBar,\r\n  orientation,\r\n  startYr,\r\n  lastRow,\r\n  mode,\r\n  titleY,\r\n  title1,title2,para1,para2,pgFooter\r\n){\r\n  let i;\r\n  let j;\r\n  let cols = grid.dataColTitles.length;\r\n  const height = 0.2;\r\n  let paraY =titleY;// 2.2 * height;\r\n  let max =\r\n    orientation === \"landscape\"\r\n      ? startYr === 0\r\n        ? LINES_PER_PAGE_LANDSCAPE\r\n        : 2 * LINES_PER_PAGE_LANDSCAPE\r\n      : LINES_PER_PAGE_PORTRAIT;\r\n  const decimalChar = lang === \"en\" ? \".\" : \",\";\r\n  const thousands = lang === \"en\" ? \",\" : \" \";\r\n // const formatFr = lang === \"fr\" ? true : false;\r\n  let Widths = [];\r\n\r\n  pdf.AddPage(orientation);\r\n\r\n  // Appendix title\r\n  setFontForTitle(pdf, lang, 16);\r\n  let paragraph = title1 + \": \" + para1;\r\n  insertPara(pdf, paragraph, paraLeft, paraY, paraWidth);\r\n\r\n  // Appendix para\r\n  setFontForParas(pdf);\r\n  paraY = paraY + 1.6 * height;\r\n  paragraph =\r\n    (mode === GRID_AGGREGATE\r\n      ? title2\r\n      : para2) +\r\n    (mode === GRID_AGGREGATE ? (startYr === 0 ? \"\" : \"\") : \"\");\r\n  insertPara(pdf, paragraph, paraLeft, paraY, paraWidth);\r\n\r\n  paraY = paraY + 0.5 * height;\r\n\r\n  // grid name and title\r\n  // grid col widths\r\n  Widths.push(paraWidth / (cols + 5)); // year\r\n  Widths.push(paraWidth / (cols + 5)); // age\r\n  for (i = 2; i < cols; ++i) {\r\n    Widths.push((paraWidth - (2 * paraWidth) / (cols + 4)) / (cols - 2));\r\n  }\r\n\r\n  // max of 8 columns in portrait\r\n  let totalGridWidth = paraWidth;\r\n  if (mode === GRID_INDIVIDUAL) totalGridWidth = (cols * paraWidth) / 8;\r\n\r\n  let values = grid.dataColTitles;\r\n  let goodWidth = [];\r\n  let totalGoodWidth = 0;\r\n  for (i = 0; i < cols; ++i) {\r\n    goodWidth.push(pdf.textWidth(values[i]));\r\n    totalGoodWidth += goodWidth[i];\r\n  }\r\n  // aportion grid title\r\n  for (i = 0; i < cols; ++i) {\r\n    Widths[i] = goodWidth[i] + 0.15;\r\n  }\r\n  let widthTotal = 0;\r\n  for (i = 2; i < cols; ++i) widthTotal += Widths[i];\r\n\r\n  // now check multilines\r\n  let goodWidthMultiLine = [];\r\n  let totalGoodWidthMultiLine = 0;\r\n\r\n  let addMore =\r\n    (totalGridWidth - widthTotal - Widths[0] - Widths[1]) / (cols - 2);\r\n  if (mode === GRID_INDIVIDUAL) {\r\n    for (i = 2; i < cols; ++i) Widths[i] += addMore;\r\n  } else if (mode === GRID_AGGREGATE) {\r\n    addMore =\r\n      (totalGridWidth - widthTotal - Widths[0] - Widths[1]) / (cols - 3);\r\n    for (i = 2; i < cols; ++i) if (i !== 4) Widths[i] += addMore;\r\n  }\r\n\r\n  for (i = 0; i < cols; ++i) {\r\n    goodWidthMultiLine.push(pdf.textWidthMultiLine(values[i], Widths[i]));\r\n    totalGoodWidthMultiLine += goodWidthMultiLine[i];\r\n  }\r\n  // aportion grid title\r\n\r\n  /*  for (i = 0; i < cols; ++i)\r\n  if(Widths[i]<.9*goodWidthMultiLine[i])\r\n      Widths[i]=goodWidthMultiLine[i]/.9\r\n*/\r\n  //for (i = 0; i < cols; ++i)\r\n  //console.log(values[i],goodWidth[i],goodWidthMultiLine[i],Widths[i])\r\n  // for (i = 0; i < cols; ++i)\r\n  //  Widths[i]=goodWidthMultiLine[i]/.9*totalGridWidth/totalGoodWidthMultiLine\r\n\r\n  // if(mode===GRID_AGGREGATE)\r\n  {\r\n    paraY = paraY + 0.8 * height;\r\n    paragraph = grid.gridTitle;\r\n    pdf.SetFontSize(PxToPt(12));\r\n    pdf.SetTextColor(0x45, 0x55, 0x60);\r\n    insertPara(pdf, paragraph, paraLeft, paraY, paraWidth);\r\n    paraY = paraY + 0.4 * height;\r\n  }\r\n\r\n  // headers\r\n  //console.log(values)\r\n  const height2 = insertTableTitle(\r\n    pdf,\r\n    paraLeft,\r\n    paraY,\r\n    values,\r\n    height,\r\n    Widths,\r\n    [51, 77, 124]\r\n  );\r\n\r\n  // grid rows\r\n  let rows = startYr;\r\n  let fillColor;\r\n  if (wrappedTitleBar) paraY = paraY + height2;\r\n  // 40 rows per page\r\n  while (rows < lastRow) {\r\n    //grid.dataProjection[0].length) {\r\n\r\n    if (\r\n      rows === max &&\r\n      ((startYr === 0 && lastRow - rows > 6) ||\r\n        (startYr === LINES_PER_PAGE_LANDSCAPE &&\r\n          lastRow + LINES_PER_PAGE_LANDSCAPE - rows > 6))\r\n    ) {\r\n      if (mode === GRID_AGGREGATE) {\r\n        insertPara(\r\n          pdf,\r\n          \"\",\r\n          paraLeft,\r\n          paraY + (3 * height) / 2 + 0.1,\r\n          paraWidth\r\n        );\r\n        pdf.FooterLandscape(pgFooter);\r\n        return rows;\r\n      }\r\n\r\n      rows = lastRow - 6;\r\n      paraY = paraY + height;\r\n      pdf.SetFont(TIMES, BOLD);\r\n      insertPara(pdf, \"......\", paraLeft, paraY + height / 2, paraWidth);\r\n      pdf.SetFont(TIMES, NORMAL);\r\n    }\r\n    values = [];\r\n\r\n    let align = [];\r\n    for (i = 0; i < cols; ++i) {\r\n      //if(i===0) console.log(grid.dataProjection[i][rows])\r\n      values.push(\r\n        (i === 0 && rows === 0) || i === 1\r\n          ? String(grid.dataProjection[i][rows])\r\n          :(i === 11?\r\n          parseFloat(grid.dataProjection[i][rows], lang).toString()\r\n          : formatMoney(\r\n              parseFloat(cleanFormat(grid.dataProjection[i][rows], lang)),\r\n              0,\r\n              decimalChar,\r\n              thousands\r\n            ).toString())\r\n      );\r\n      align.push(2);\r\n    }\r\n    paraY = paraY + height;\r\n    fillColor = rows % 2 ? [249, 249, 249] : [228, 229, 230];\r\n    if (rows == LE) {\r\n      fillColor = [208, 215, 230];\r\n      insertPara(\r\n        pdf,\r\n        lang === \"en\" ? \"LE\" : \"EV\",\r\n        paraLeft + totalGridWidth + 0.15,\r\n        paraY + height / 2 + 0.01,\r\n        paraWidth\r\n      );\r\n    }\r\n    //console.log(values)\r\n    insertTableRow(\r\n      pdf,\r\n      paraLeft,\r\n      paraY,\r\n      values,\r\n      height,\r\n      Widths,\r\n      false,\r\n      fillColor,\r\n      align\r\n    );\r\n\r\n    rows++;\r\n  }\r\n\r\n  if (orientation === \"landscape\")\r\n    pdf.FooterLandscape(pgFooter);\r\n  else pdf.Footer(pgFooter);\r\n}\r\n","import React from \"react\";\r\nimport { Pie, Bar } from \"react-chartjs-2\";\r\n//import \"./Output.css\";\r\nimport \"./Output.css\";\r\nimport {\r\n  getAssetsCategoryTotal,\r\n  getLiabsCategoryTotal,\r\n  cleanFormat, formatMoney,\r\n  familyProjectionYears,\r\n  getInsNeedLine,\r\n  isSingleFamily,\r\n} from \"../utils/helper\";\r\nimport {\r\n  ASSETS,\r\n  LIABILITIES,\r\n  CONTROLTITLE,\r\n  DISPLAY_RETIREMENT,\r\nDISPLAY_LIFEEXP,\r\nDISPLAY_ENDAGE,\r\nDISPLAY_LIFEEXP_PLUS_3\r\n} from \"../definitions/generalDefinitions\";\r\nimport {GRAPHS_LABLES \r\n} from \"../definitions/outputDefinitions\";\r\nimport {\r\n  getInfoINA,\r\n} from \"../definitions/infoIconsDefinitions\";\r\nimport { Info } from \"./Info\";\r\nimport { doSavePdfINAAppendixAction } from \"./OutputPDFINAAppendix\";\r\nimport { versionDetails } from \"../utils/helper\";\r\n\r\nexport default class OutputGraphs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n\r\n\r\n  doPDF = () => {\r\n    doSavePdfINAAppendixAction(this.props);\r\n  };\r\n  \r\n\r\n  render() {\r\n    //if (this.props.dataCashFlowGov !== undefined)\r\n    const lang=this.props.dataInput.Presentations[0].language\r\n    const negNeed = this.props.dataCashFlowNeeds.map(x => -x);\r\n\r\n  const mobile=  ( window.innerWidth <= 840 ) && ( window.innerHeight <= 840 );\r\n // console.log(window.innerWidth, window.innerHeight)\r\n    const maxYScale =\r\n      10000 *\r\n      Math.ceil(\r\n        1 +\r\n          Math.max(\r\n            Math.max(...this.props.dataCashFlowGov),\r\n            Math.max(...this.props.dataCashFlowNeeds),\r\n            Math.max(...this.props.dataShortfall),\r\n            Math.max(...this.props.dataCashFlowPersonal)\r\n          ) /\r\n            10000\r\n      );\r\n    //\tconst negNeedMax = negNeed.map(x => -maxYScale*1.05);\r\n    //\tnegNeedMax.push(- maxYScale * 1.05);\r\n    //\tnegNeedMax.push(- maxYScale * 1.05)\r\n \r\n    const options = {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      legend: {\r\n        display: true,\r\n        labels: {\r\n          fontColor: \"#333\",\r\n          fontSize: mobile?10:14//16\r\n        }\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            stacked: true,\r\n            ticks: {\r\n              fontSize:  mobile?10:14,\r\n              beginAtZero: true\r\n            }\r\n          }\r\n        ],\r\n        yAxes: [\r\n          {\r\n            stacked: true,\r\n            ticks: {\r\n              fontSize:  mobile?10:14,\r\n              beginAtZero: true,\r\n                beginAtZero: true,\r\n                steps: 10,\r\n                stepValue: 5,\r\n                max: maxYScale,\r\n    callback: function (value, index, values) {\r\n                  let result =\r\n                    value < 1000 && value > -1000\r\n                      ? value\r\n                      : lang === \"en\"\r\n                      ? Intl.NumberFormat().format(value / 1000) + \"K\"\r\n                      : (Intl.NumberFormat().format(value / 1000) + \"K\").replace(\r\n                          \",\",\r\n                          \" \"\r\n                        );\r\n                  return result;\r\n                },\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    };\r\n    const labelsBilingual=GRAPHS_LABLES[lang]\r\n    const decimalChar = lang === \"en\" ? \".\" : \",\"\r\n    const thousands = lang === \"en\" ? \",\" : \" \"\r\n    const formatFr=lang===\"fr\"? true:false\r\n    \r\n    const clients=this.props.dataInput.Clients\r\n    const singleFamily = isSingleFamily(clients);\r\n    const PDFTopMargin=singleFamily?0:-37  \r\n\r\n    const data = {\r\n      labels: this.props.dataNAAges,\r\n      datasets: [\r\n        {\r\n          label: labelsBilingual.persCF,\r\n          data: this.props.dataCashFlowPersonal,\r\n          fill: false,\r\n          borderColor: \"LightSteelBlue\", // Line color\r\n          backgroundColor: \"LightSteelBlue\"\r\n        },\r\n        {\r\n          label:\r\n          labelsBilingual.govCF,\r\n          data: this.props.dataCashFlowGov,\r\n          fill: false, // Don't fill area under the line\r\n          borderColor: \"#FAD7A0\", // Line color\r\n          backgroundColor: \"#FAD7A0\"\r\n        },\r\n        {\r\n          label:\r\n          labelsBilingual.incomeNeeds,\r\n          data: negNeed,\r\n          fill: false, // Don't fill area under the line\r\n          borderColor: \"#2B3856\", // Line color\r\n          backgroundColor: \"#2B3856\"\r\n        }\r\n        \r\n      ]\r\n    };\r\n\r\n    var dataFutureINA = [];\r\n    let i;\r\n    let j;\r\n    var pv;\r\n    var totalLiab = 0;\r\n    for (i = 0; i < this.props.dataInput.Liabilitys.length; i++) {\r\n      totalLiab += this.props.dataInput.Liabilitys[i].currValue;\r\n    }\r\n\r\n    let shortfallNeg=[]\r\n     \r\n    for (i = 0; i < this.props.dataShortfall.length; ++i) {\r\n      shortfallNeg.push(-this.props.dataShortfall[i])\r\n      pv = 0;\r\n      for (j = i; j < this.props.dataShortfall.length; ++j)\r\n        pv += this.props.dataShortfall[j] / Math.pow(1.03, j - i);\r\n\r\n      if (i > 0 && i < 20) pv += totalLiab * Math.pow(1.02, i);\r\n      dataFutureINA.push(pv);\r\n    }\r\n    // console.log(totalLiab, dataFutureINA);\r\n\r\n/*     let dataPositiveShortfall = [];\r\n    for (j = 0; j < this.props.dataShortfall.length; ++j)\r\n        dataPositiveShortfall[j]= this.props.dataShortfall[j]>0?this.props.dataShortfall[j]:0;\r\n     \r\n\r\n\r\n\r\n */   \r\n      \r\n      const dataShortfall = {\r\n      labels: this.props.dataNAAges, // [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84],\r\n      datasets: [\r\n        {\r\n          label: labelsBilingual.shortfall,\r\n          data: shortfallNeg,//this.props.dataShortfall,\r\n          //[10964, 13734, 14008, 14288, 14574, 14866, 15163, 15466, 15776, 16091, 16413, 16741, 17076, 17417, 17766, 18121, 18484, 18853, 19230, 19615, 20007, 20407, 20815, 21232, 21656, 22090, 27632, 28184, 28748, 29323, 29910, 30508, 31118, 31740, 32375, 33023, 33683, 34357, 35044, 35745, 36460, 37189, 37933, 38691, 39465, 40254],\r\n          fill: false, // Don't fill area under the line\r\n          borderColor: \"darkred\", // Line color\r\n          backgroundColor: \"darkred\"\r\n        }\r\n      ]\r\n    };\r\n\r\n    var optionsPie = {\r\n      responsive: true,\r\n      title: {\r\n        display: true,\r\n        position: \"top\",\r\n        text: labelsBilingual.assetsBrk,//\"Assets Breakdown Today\",\r\n        fontSize:  mobile?10:14,//8,\r\n        fontColor: \"#111\"\r\n      },\r\n      legend: {\r\n        display: true,\r\n        position: \"right\",\r\n        labels: {\r\n          fontColor: \"#333\",\r\n          fontSize: mobile?10:12//16\r\n        }\r\n      }\r\n    };\r\n     \r\n    let optionsPieLiabs = JSON.parse(JSON.stringify(optionsPie));\r\n\r\n    \r\n    optionsPieLiabs.title.text= labelsBilingual.liabsBrk//\"Liabilities Breakdown\" \r\n     \r\n    const dataPieAssets = {\r\n      labels: [\r\n        labelsBilingual.cashLike,labelsBilingual.RRSP,labelsBilingual.shares,labelsBilingual.realEstate,labelsBilingual.otherAssets\r\n      ],\r\n      datasets: [\r\n        {\r\n             data: [\r\n            getAssetsCategoryTotal(this.props.dataInput,ASSETS.CASH.Key)+\r\n            getAssetsCategoryTotal(this.props.dataInput,ASSETS.LIFE_INSURANCE.Key)+\r\n            getAssetsCategoryTotal(this.props.dataInput,ASSETS.CHARITABLE_GIFTS_TAX_CREDIT.Key)\r\n            +getAssetsCategoryTotal(this.props.dataInput,ASSETS.TFSA.Key)\r\n            , \r\n            getAssetsCategoryTotal(this.props.dataInput,ASSETS.RRSP_RRIF.Key), \r\n            getAssetsCategoryTotal(this.props.dataInput,ASSETS.SMALL_BUSINESS_SHARES.Key)+\r\n            getAssetsCategoryTotal(this.props.dataInput,ASSETS.STOCKS_BONDS.Key),\r\n            getAssetsCategoryTotal(this.props.dataInput,ASSETS.REAL_ESTATE.Key)+\r\n            getAssetsCategoryTotal(this.props.dataInput,ASSETS.PERSONAL_RESIDENCE.Key),\r\n            getAssetsCategoryTotal(this.props.dataInput,ASSETS.OTHER_ASSETS.Key)\r\n          ],\r\n          backgroundColor: [\"#F7464A\", \"#46BFBD\", \"#FDB45C\", \"#949FB1\", \"#4D5360\"]\r\n        }\r\n      ]\r\n    }\r\n\r\n    const dataPieLiabs = {\r\n      labels: [\r\n        labelsBilingual.loans, labelsBilingual.taxes, labelsBilingual.emergency, labelsBilingual.otherLiabs,labelsBilingual.atDeath\r\n        \r\n      ],\r\n      datasets: [\r\n        {\r\n             data: [\r\n            getLiabsCategoryTotal(this.props.dataInput,LIABILITIES.OUTSTANDING_LOANS.Key)+\r\n            getLiabsCategoryTotal(this.props.dataInput,LIABILITIES.MORTGAGE_REDEMPTION.Key)+\r\n            getLiabsCategoryTotal(this.props.dataInput,LIABILITIES.CREDIT_CARDS.Key)+\r\n            getLiabsCategoryTotal(this.props.dataInput,LIABILITIES.CLIENT_TAX_LIABILITY.Key)\r\n            , \r\n            getLiabsCategoryTotal(this.props.dataInput,LIABILITIES.INCOME_TAXES.Key), \r\n            getLiabsCategoryTotal(this.props.dataInput,LIABILITIES.EMERGENCY_FUND.Key),\r\n            getLiabsCategoryTotal(this.props.dataInput,LIABILITIES.OTHER.Key)+\r\n            getLiabsCategoryTotal(this.props.dataInput,LIABILITIES.CHILD_HOME_CARE.Key),\r\n            getLiabsCategoryTotal(this.props.dataInput,LIABILITIES.LAST_EXPENSES.Key)+\r\n        getLiabsCategoryTotal(this.props.dataInput,LIABILITIES.LEGAL_AND_EXECUTOR_FEES.Key)+\r\n        getLiabsCategoryTotal(this.props.dataInput,LIABILITIES.LEGACY_FOR_CHILDREN.Key)+\r\n        getLiabsCategoryTotal(this.props.dataInput,LIABILITIES.CHARITABLE_GIFTS.Key)+\r\n        getLiabsCategoryTotal(this.props.dataInput,LIABILITIES.PROBATE.Key)\r\n          ],\r\n          backgroundColor: [\"#F7464A\", \"#46BFBD\", \"#FDB45C\", \"#949FB1\", \"#4D5360\"]\r\n        }\r\n      ]\r\n    }\r\n/* \r\n    let needToE =\r\n      this.props.periodOption === 0 ? labels.insNeedsRet: labels.insNeedsRetLE\r\n      /*   ? \"Insurance Needs to retirement (age \"\r\n        : \"Insurance Needs to life expectancy (age \";\r\n    let needToF =\r\n      this.props.periodOption === 0\r\n        ? \"Besoins en assurance jusqu'à la retraite(âge \"\r\n        : \"Besoins en assurance jusqu'à l'espérance de vie (âge \"; \r\n    let needTo = lang === \"en\" ? needToE : needToF;\r\n */\r\n    /* let needTo =\r\n      this.props.periodOption ===DISPLAY_RETIREMENT ? labelsBilingual.insNeedsRet: (this.props.periodOption === DISPLAY_ENDAGE?labelsBilingual.insNeeds100:labelsBilingual.insNeedsRetLE)\r\n    if(this.props.periodOption !== DISPLAY_ENDAGE)\r\n      needTo += +this.props.projectEnd + \")\";\r\n */\r\n/* \r\n      const clients=this.props.dataInput.Clients\r\n      const projYears = familyProjectionYears(\r\n        clients,\r\n        this.props.dataInput.Presentations[0].periodOption,\r\n        this.props.LE,\r\n        this.props.LE\r\n      );\r\n      //const projectEnd = projYears.projectionEnd;\r\n      const protectionPeriod = projYears.noProjectionYrs;\r\n     // const minAge = projYears.survivorAge;\r\n      const singleFamily = isSingleFamily(clients);\r\n      const noSurvivor = clients.length===1;  \r\n      const insNeedLine= getInsNeedLine(this.props.dataInput.Presentations[0], this.props.projectEnd, lang,noSurvivor,singleFamily,protectionPeriod)\r\n     */const needTo=this.props.insNeedLine\r\n\r\n    \r\n/*     const assetsPie= this.props.dataInput.Assets.length>0 &&\r\n    <article className=\"canvas-container\" style={{height: \"450px\" }}>\r\n     <div style={{overflow:'hidden', float: 'left', width: '50%',height: \"400px\" }}><Pie data={dataPieAssets} options={optionsPie} /></div>\r\n    </article>\r\n */\r\n\r\nconst assetsPie= this.props.dataInput.Assets.length>0 &&\r\n    <article id=\"pieAssets\" \r\n\r\n/* style={{ position: \"relative\", left: \"20px\", height: \"400px\"}} */\r\n>\r\n\r\n<div className=\"INAPie\">\r\n<Pie  data={dataPieAssets} options={optionsPie}  />\r\n</div>\r\n</article>\r\n\r\n\r\n/* \r\nconst liabsPie= this.props.dataInput.Liabilitys.length>0 &&\r\n   <article className=\"canvas-container\" style={{height: \"450px\" }}>\r\n   <div style={{overflow:'hidden', float: 'left', width: '50%',height: \"400px\" }}><Pie data={dataPieLiabs} options={optionsPieLiabs} /></div>\r\n </article>\r\n */\r\nconst liabsPie= this.props.dataInput.Liabilitys.length>0 &&\r\n    <article   id=\"pieLiabs\" \r\n/* style={{ position: \"relative\", height: \"400px\"}} */\r\n>\r\n\r\n<div className=\"INAPie\">\r\n<Pie data={dataPieLiabs} options={optionsPieLiabs} />\r\n</div>\r\n</article>\r\n\r\nconst singlePerson = this.props.dataInput.Clients.length === 1 ? true : false;\r\nconst noSurvivor = singlePerson && versionDetails().versionNumeric<=10014\r\n\r\nif (noSurvivor) {\r\n  return (\r\n    <div>\r\n      <h3 className=\"ppi1\">{needTo}</h3>\r\n    </div>\r\n  );\r\n}else {\r\n    return (\r\n      <div>\r\n        \r\n        <div style={{ width: \"100%\", float: \"left\", clear: \"left\" }}>\r\n            \r\n            <input\r\n              className=\"roundedCornerCmd\"\r\n              style={{\r\n             //   width: \"80px\",\r\n                marginTop: PDFTopMargin +\"px\",\r\n                marginRight: \"0px\",\r\n                paddingRight: \"8px\",\r\n                float: \"right\",\r\n              }}\r\n              onClick={this.doPDF}\r\n              type=\"button\"\r\n              value={CONTROLTITLE[lang].pdfINAAppendix}\r\n            />\r\n          </div>\r\n        <h3 className=\"ppi1\">\r\n          {needTo}{/* : ${formatMoney(cleanFormat(this.props.insuranceNeed,formatFr), 0, decimalChar, thousands)} */} \r\n          <Info\r\n              infoIcon={getInfoINA(lang)}\r\n          />\r\n        </h3>\r\n\r\n        <br />\r\n        <div style={{ width: \"90%\" }}>\r\n          <div style={{ width: \"100%\" }}>\r\n          <article  id=\"barNeeds\" className=\"canvas-containerINAGraphs\">\r\n              <Bar data={data} options={options} />\r\n            </article>\r\n            <article  id=\"barShortfall\" className=\"canvas-containerINAGraphs\">\r\n              <Bar  data={dataShortfall} options={options} />\r\n            </article>\r\n            <br />\r\n            <h3 className=\"ppi1\">\r\n                {labelsBilingual.currFins}\r\n                \r\n            </h3>\r\n            {\r\n               <div>\r\n                 {assetsPie}<br/><br/>{liabsPie}\r\n              </div> \r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n}\r\n"],"sourceRoot":""}