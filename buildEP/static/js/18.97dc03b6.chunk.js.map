{"version":3,"sources":["components/Source.js"],"names":["Source","props","i","displayName","name","handleDoRemove","id","disableAddRemove","handleRemoveSource","isSourceGovNonOrphanBenefit","key","INCOMESOURCES","GOV_SURVIVORS_PENSION","Key","GOV_DEATH_BENEFIT","isDividendIncome","DIVIDEND_INCOME","isSourceGovOrphansBenefit","GOV_ORPHANS_BENEFIT","handleDoAdd","sourceNo","sourcesNo","dataValues","DD","Values","length","sourceNextKey","getListItemKeyFromName","label","includeGovOrphanBenefit","sourceCurr","sourceTypeKey","OTHER","source","amount","startYear","taxRate","DEFAULT_DIVIDEND_TAX_RATE","handleAddSource","updateDDown","selection","duration","annualGrowth","ownerID","handleUpdate","handleUpdateInput","value","s1","changed","lang","language","valueClean","cleanFormat","valueCleanInt","parseInt","setState","loading","typeValues","listSourcesToShow","getListToShowByOrder","push","state","Title","CONTROLTITLE","type","defValue","getListItemNameFromKey","disableOptionValue","getDisableValues","ID","nextProps","this","unlistedGreyedOption","gov","govOrphan","dividend","RRIF","className","map","dd","Count","width","DROPDOWN_WIDE","disableOption","format","inputName","amountGross","readOnly","infoIcon","getInfoIconSourcesGov","undefined","maxValue","maxOrphan","inputValue","inputTitle","RRIFAge","getInfoIconAssetsYr0","dur","maxOrphanDur","dividendTaxRate","currentID","numberComps","disabled","disabledRemove","Component"],"mappings":"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","file":"static/js/18.97dc03b6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { DropDown } from \"./DropDown\";\r\nimport { AddRemove } from \"./AddRemove\";\r\nimport { cleanFormat, getListToShowByOrder, getDisableValues } from \"../utils/helper\";\r\n\r\nimport { copyFromAnotherObject }  from \"../data/createDefaults\";\r\nimport {\r\n  CONTROLTITLE,\r\n  INCOMESOURCES,\r\n  DEFAULT_DIVIDEND_TAX_RATE,\r\n} from \"../definitions/generalDefinitions\";\r\n//import { InputField4 } from './inputField4';\r\nimport { InputField } from \"./inputField\";\r\nimport {\r\n  isMobileDevice,\r\n  getListItemNameFromKey,\r\n  getListItemKeyFromName,\r\n} from \"../utils/helper\";\r\nimport { DROPDOWN_WIDE } from \"../definitions/generalDefinitions\";\r\nimport {\r\n  getInfoIconSourcesGov,\r\n  getInfoIconAssetsYr0,\r\n  getInfoIconInflationGrowth\r\n} from \"../definitions/infoIconsDefinitions\";\r\n\r\nexport default class Source extends Component {\r\n  displayName = Source.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    let i;\r\n    let typeValues = [];\r\n    const listSourcesToShow = getListToShowByOrder(INCOMESOURCES);\r\n    for (i = 0; i < listSourcesToShow.length; ++i) {\r\n      {\r\n        typeValues.push({\r\n          label: listSourcesToShow[i].value[this.props.language],\r\n          value: i + 1,\r\n        });\r\n      }\r\n    }\r\n\r\n    /* \r\n    for (i = 0; i <= 5; ++i) {\r\n      typeValues.push({\r\n        label: INCOMESOURCES[this.props.language].Values[i],\r\n        value: i + 1\r\n      });\r\n    }\r\n */\r\n    // console.log(this.props.sourceCurr)\r\n    this.state = {};\r\n    this.dataValues = {\r\n      DD: [\r\n        {\r\n          id: 1,\r\n          Title: CONTROLTITLE[this.props.language].type,\r\n          defValue: getListItemNameFromKey(\r\n            INCOMESOURCES,\r\n            this.props.sourceCurr.sourceTypeKey,\r\n            this.props.language\r\n          ),\r\n          disableOptionValue: getDisableValues(INCOMESOURCES),\r\n          Values: typeValues,\r\n        },\r\n      ],\r\n    };\r\n    this.dataValues.DD[0].disableOptionValue[INCOMESOURCES.GOV_DEATH_BENEFIT.ID]=true;\r\n    this.dataValues.DD[0].disableOptionValue[INCOMESOURCES.GOV_SURVIVORS_PENSION.ID]=true;\r\n    this.dataValues.DD[0].disableOptionValue[INCOMESOURCES.GOV_ORPHANS_BENEFIT.ID]=true;\r\n\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (\r\n      nextProps.sourceCurr !== this.props.sourceCurr ||\r\n      nextProps.id !== this.props.id ||\r\n      nextProps.sourcesNo !== this.props.sourcesNo\r\n    ) {\r\n      // console.log(nextProps.sourceCurr.sourceTypeKey)\r\n      this.dataValues.DD[0].defValue = getListItemNameFromKey(\r\n        INCOMESOURCES,\r\n        nextProps.sourceCurr.sourceTypeKey,\r\n        this.props.language\r\n      );\r\n    }\r\n  }\r\n\r\n  handleDoRemove = (id) => {\r\n    if (this.props.disableAddRemove === false) {\r\n      this.props.handleRemoveSource(id);\r\n    }  \r\n  };\r\n\r\n  isSourceGovNonOrphanBenefit = (key) => {\r\n    if (\r\n      key === INCOMESOURCES.GOV_SURVIVORS_PENSION.Key ||\r\n      key === INCOMESOURCES.GOV_DEATH_BENEFIT.Key\r\n    )\r\n      return true;\r\n    else return false;\r\n  };\r\n\r\n  isDividendIncome = (key) => {\r\n    if (key === INCOMESOURCES.DIVIDEND_INCOME.Key) return true;\r\n    else return false;\r\n  };\r\n  isSourceGovOrphansBenefit = (key) => {\r\n    if (key === INCOMESOURCES.GOV_ORPHANS_BENEFIT.Key) return true;\r\n    else return false;\r\n  };\r\n\r\n  handleDoAdd = () => {\r\n    // no gov stuff\r\n    if (this.props.disableAddRemove === false) {\r\n    \r\n    var sourceNo =\r\n      this.props.sourcesNo > this.dataValues.DD[0].Values.length - 1\r\n        ? this.dataValues.DD[0].Values.length - 1\r\n        : this.props.sourcesNo;\r\n    //if(this.props.includeGovOrphanBenefit===false)\r\n    //  sourceNo +=1;\r\n    if (sourceNo > this.dataValues.DD[0].Values.length - 1) sourceNo -= 1;\r\n\r\n    let sourceNextKey = getListItemKeyFromName(\r\n      INCOMESOURCES,\r\n      this.dataValues.DD[0].Values[sourceNo].label\r\n    );\r\n\r\n    // dont add gov stuff unless has child && orphanben\r\n    while (\r\n      sourceNextKey === INCOMESOURCES.GOV_DEATH_BENEFIT.Key ||\r\n      sourceNextKey === INCOMESOURCES.GOV_SURVIVORS_PENSION.Key ||\r\n      (sourceNextKey === INCOMESOURCES.GOV_ORPHANS_BENEFIT.Key &&\r\n        this.props.includeGovOrphanBenefit === false)\r\n    ) {\r\n      sourceNo += 1;\r\n      sourceNextKey = getListItemKeyFromName(\r\n        INCOMESOURCES,\r\n        this.dataValues.DD[0].Values[sourceNo].label\r\n      );\r\n    }\r\n\r\n    // dont repeat\r\n    while (\r\n      sourceNextKey === this.props.sourceCurr.sourceTypeKey &&\r\n      this.props.sourceCurr.sourceTypeKey !== INCOMESOURCES.OTHER.Key\r\n    ) {\r\n      sourceNo += 1;\r\n      sourceNextKey = getListItemKeyFromName(\r\n        INCOMESOURCES,\r\n        this.dataValues.DD[0].Values[sourceNo].label\r\n      );\r\n    }\r\n\r\n    const source = {\r\n      id: this.props.sourcesNo + 1,\r\n      sourceTypeKey: sourceNextKey,\r\n      amount: 0,\r\n      startYear: 0,\r\n      // set others based on INA other values tax infl\r\n      // duration, growthRate,ownerID,taxRate depends on clients\r\n\r\n    };\r\n    if (sourceNextKey === INCOMESOURCES.DIVIDEND_INCOME.Key)\r\n      source.taxRate = DEFAULT_DIVIDEND_TAX_RATE;\r\n    // console.log(source)\r\n    this.props.handleAddSource(source);\r\n  }\r\n  };\r\n\r\n  updateDDown = (id, selection) => {\r\n    let source = {\r\n      id: this.props.sourceCurr.id,\r\n      //Type: this.props.Type,\r\n      sourceTypeKey: this.props.sourceCurr.sourceTypeKey,\r\n      amount: this.props.sourceCurr.amount,\r\n      startYear: this.props.sourceCurr.startYear,\r\n      duration: this.props.sourceCurr.duration,\r\n      taxRate: this.props.sourceCurr.taxRate,\r\n      annualGrowth: this.props.sourceCurr.annualGrowth,\r\n    };\r\n\r\n    if (id === 1)\r\n      source.sourceTypeKey = getListItemKeyFromName(INCOMESOURCES, selection);\r\n    else if (id === 2) source.ownerID = selection;\r\n    this.props.handleUpdate(source);\r\n  };\r\n\r\n  handleUpdateInput = (id, value) => {\r\n    let  s1 = {\r\n      id: this.props.sourceCurr.id,\r\n      //Type: this.props.Type,\r\n      sourceTypeKey: this.props.sourceCurr.sourceTypeKey,\r\n      amount: this.props.sourceCurr.amount,\r\n      startYear: this.props.sourceCurr.startYear,\r\n      duration: this.props.sourceCurr.duration,\r\n      ownerID: this.props.sourceCurr.ownerID,\r\n      taxRate: this.props.sourceCurr.taxRate,\r\n      annualGrowth: this.props.sourceCurr.annualGrowth,\r\n    };\r\n\r\n//    s1 =copyFromAnotherObject(this.props.sourceCurr)\r\n\r\n    let changed = false;\r\n    const lang = this.props.language;\r\n    const valueClean = cleanFormat(value,lang);\r\n    const valueCleanInt = parseInt(valueClean);\r\n\r\n    if (id === 1) {\r\n      changed = s1.amount !== valueCleanInt ? true : false;\r\n      s1.amount = valueCleanInt;\r\n    } else if (id === 2) {\r\n      changed = s1.startYear !== value ? true : false;\r\n      s1.startYear = value;\r\n    } else if (id === 3) {\r\n      changed = s1.duration !== value ? true : false;\r\n      s1.duration = value;\r\n    } else if (id === 4) {\r\n      changed =\r\n        s1.taxRate !==\r\n        parseInt(100 * valueClean) / 100\r\n          ? true\r\n          : false;\r\n      s1.taxRate =\r\n        parseInt(100 * valueClean) / 100;\r\n    } else if (id === 5) {\r\n      changed =\r\n        s1.annualGrowth !==\r\n        parseInt(100 * valueClean) / 100\r\n          ? true\r\n          : false;\r\n      s1.annualGrowth =\r\n        parseInt(100 * valueClean) / 100;\r\n    }\r\n    if (changed){\r\n       this.props.handleUpdate(s1);\r\n       this.setState({ loading: this.props.disableAddRemove });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const gov = this.isSourceGovNonOrphanBenefit(\r\n      this.props.sourceCurr.sourceTypeKey\r\n    );\r\n    const govOrphan = this.isSourceGovOrphansBenefit(\r\n      this.props.sourceCurr.sourceTypeKey\r\n    );\r\n    const dividend = this.isDividendIncome(this.props.sourceCurr.sourceTypeKey);\r\n    const RRIF = this.props.sourceCurr.sourceTypeKey === INCOMESOURCES.RRIF.Key;\r\n    // console.log(this.props.sourceCurr,govOrphan,this.props.sourceCurr.maxOrphan)\r\n    \r\n    \r\n    let unlistedGreyedOption;\r\n    if (RRIF) {\r\n      unlistedGreyedOption = [];\r\n      unlistedGreyedOption.push({\r\n        label: INCOMESOURCES.RRIF.value[this.props.language],\r\n        value: 1,\r\n      });\r\n    }\r\n\r\n    if (this.state.loading === true && this.props.disableAddRemove=== true) {\r\n      return (\r\n       \"\"\r\n      );\r\n    } else {\r\n      return (\r\n      <div className=\"inputRow\">\r\n        {this.dataValues.DD.map((dd) => (\r\n          <DropDown\r\n            key={dd.id}\r\n            id={dd.id}\r\n            Count={this.props.sourcesNo}\r\n            Title={dd.Title}\r\n            // infoIcon={gov && !govOrphan ? getInfoIconSourcesGov(this.props.language): undefined}\r\n            width={DROPDOWN_WIDE}\r\n            language={this.props.language}\r\n            defValue={dd.defValue}\r\n            Values={dd.Values}\r\n            disableOption={dd.disableOptionValue}\r\n            unlistedGreyedOption={unlistedGreyedOption}\r\n            updateDDown={this.updateDDown}\r\n          />\r\n        ))}\r\n        {!RRIF && (\r\n          <InputField\r\n            format={2}\r\n            id={1}\r\n            key=\"amt\"\r\n            inputName={CONTROLTITLE[this.props.language].amountGross}\r\n            readOnly={gov}\r\n            Count={this.props.sourcesNo}\r\n            language={this.props.language}\r\n            infoIcon={\r\n              gov || govOrphan// && !govOrphan\r\n                ? getInfoIconSourcesGov(this.props.language)\r\n                : undefined\r\n            }\r\n            maxValue={govOrphan ? this.props.sourceCurr.maxOrphan : undefined}\r\n            inputValue={this.props.sourceCurr.amount}\r\n            inputTitle={this.props.sourceCurr.id}\r\n            handleUpdateInput={this.handleUpdateInput}\r\n          />\r\n        )}\r\n\r\n        {gov || govOrphan ? (\r\n          \"\"\r\n        ) : (\r\n          <InputField\r\n            format={1}\r\n            id={2}\r\n            inputName={\r\n              RRIF\r\n                ? CONTROLTITLE[this.props.language].RRIFAge\r\n                : CONTROLTITLE[this.props.language].startYear\r\n            }\r\n            Count={this.props.sourcesNo}\r\n            language={this.props.language}\r\n            inputValue={this.props.sourceCurr.startYear}\r\n            infoIcon={getInfoIconAssetsYr0(this.props.language)}\r\n            //infoIcon={RRIF ? getInfoIconSourcesRRIF(this.props.language): undefined}\r\n            readOnly={RRIF}\r\n            inputTitle={this.props.sourceCurr.id}\r\n            handleUpdateInput={this.handleUpdateInput}\r\n          />\r\n        )}\r\n        {gov || RRIF ? (\r\n          \"\"\r\n        ) : (\r\n          <InputField\r\n            format={1}\r\n            id={3}\r\n            inputName={CONTROLTITLE[this.props.language].dur}\r\n            Count={this.props.sourcesNo}\r\n            language={this.props.language}\r\n            inputValue={this.props.sourceCurr.duration}\r\n            maxValue={\r\n              govOrphan ? this.props.sourceCurr.maxOrphanDur : undefined\r\n            }\r\n            inputTitle={this.props.sourceCurr.id}\r\n            handleUpdateInput={this.handleUpdateInput}\r\n          />\r\n        )}\r\n\r\n        {dividend && (\r\n          <InputField\r\n            id={4}\r\n            inputName={CONTROLTITLE[this.props.language].dividendTaxRate}\r\n            format={3}\r\n            Count={this.props.sourcesNo}\r\n            language={this.props.language}\r\n            //   infoIcon={getInfoIconDividend(this.props.language)}\r\n            inputValue={this.props.sourceCurr.taxRate}\r\n            inputTitle={this.props.sourceCurr.id}\r\n            handleUpdateInput={this.handleUpdateInput}\r\n          />\r\n        )}\r\n\r\n        <AddRemove\r\n          currentID={this.props.sourceCurr.id}\r\n          numberComps={this.props.sourcesNo}\r\n          handleDoAdd={this.handleDoAdd}\r\n          handleDoRemove={this.handleDoRemove}\r\n          disabled={this.props.disableAddRemove}\r\n          disabledRemove={gov || govOrphan}\r\n        />\r\n        {/* {isMobileDevice() && this.props.sourceCurr.id < this.props.sourcesNo ? (\r\n          <hr className=\"ppi2\" />\r\n        ) : (\r\n          \"\"\r\n        )} */}\r\n      </div>\r\n    );\r\n      }\r\n  }\r\n}\r\n"],"sourceRoot":""}