{"version":3,"sources":["components/Need.js"],"names":["Need","props","i","displayName","name","handleDoRemove","id","handleRemoveNeed","handleDoAdd","needNo","needsNo","dataValues","DD","Values","length","needNext","label","handleAddNeed","getListItemKeyFromName","INCOMENEEDS","updateDDown","selection","need","needTypeKey","needCurr","Percent","amount","startYear","duration","Owner","handleUpdate","handleUpdateInput","value","changed","lang","language","valueClean","cleanFormat","valueCleanInt","parseInt","afterTaxTotalIncome","toFixed","parseFloat","typeValues","listNeedsToShow","getListToShowByOrder","push","state","loading","Title","CONTROLTITLE","type","defValue","getListItemNameFromKey","nextProps","this","PERCET_OF_INCOME","Key","percentN","divStyleClass","disableAddRemove","className","map","dd","key","Count","disable","width","DROPDOWN_WIDE","inputName","percent","format","inputValue","afterTaxAmount","readOnly","infoIcon","getInfoSalaryPercent","getInfoIconAssetsYr0","dur","isDisabled","MESSAGES","ever","currentID","minComps","numberComps","disabled","Component"],"mappings":"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","file":"static/js/17.3982ae70.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { DropDown } from \"./DropDown\";\r\nimport { AddRemove } from \"./AddRemove\";\r\nimport { cleanFormat, getListItemKeyFromName } from \"../utils/helper\";\r\nimport {\r\n  MESSAGES,\r\n  CONTROLTITLE,\r\n  INCOMENEEDS,\r\n  DROPDOWN_WIDE,\r\n} from \"../definitions/generalDefinitions\";\r\n//import { InputField4 } from './inputField4';\r\nimport { InputField } from \"./inputField\";\r\nimport {\r\n  isMobileDevice,\r\n  getListToShowByOrder,\r\n  getListItemNameFromKey,\r\n} from \"../utils/helper\";\r\nimport {\r\n  getInfoSalaryPercent,\r\n  getInfoIconAssetsYr0,\r\n} from \"../definitions/infoIconsDefinitions\";\r\n\r\nexport default class Need extends Component {\r\n  displayName = Need.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    let i;\r\n    let typeValues = [];\r\n    const listNeedsToShow = getListToShowByOrder(INCOMENEEDS);\r\n    for (i = 0; i < listNeedsToShow.length; ++i) {\r\n      typeValues.push({\r\n        label: listNeedsToShow[i].value[this.props.language],\r\n        value: i + 1,\r\n      });\r\n    }\r\n    this.state = {\r\n      loading: false,\r\n    };\r\n    this.dataValues = {\r\n      DD: [\r\n        {\r\n          id: 1,\r\n          Title: CONTROLTITLE[this.props.language].type,\r\n          defValue: getListItemNameFromKey(\r\n            INCOMENEEDS,\r\n            this.props.needCurr.needTypeKey,\r\n            this.props.language\r\n          ),\r\n          Values: typeValues,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (\r\n      nextProps.needCurr !== this.props.needCurr ||\r\n      nextProps.id !== this.props.id ||\r\n      nextProps.needsNo !== this.props.needsNo\r\n    ) {\r\n      this.dataValues.DD[0].defValue = getListItemNameFromKey(\r\n        INCOMENEEDS,\r\n        nextProps.needCurr.needTypeKey,\r\n        this.props.language\r\n      );\r\n    }\r\n  }\r\n\r\n  handleDoRemove = (id) => {\r\n//    if (this.props.disableAddRemove === false) {\r\n      this.props.handleRemoveNeed(id);\r\n //   }\r\n  };\r\n\r\n  handleDoAdd = () => {\r\n //   if (this.props.disableAddRemove === false) {\r\n\r\n      let needNo =\r\n      this.props.needsNo > this.dataValues.DD[0].Values.length - 1\r\n        ? this.dataValues.DD[0].Values.length - 1\r\n        : this.props.needsNo-1; // e % of income by default start from there\r\n\r\n    if (needNo > this.dataValues.DD[0].Values.length - 1) needNo -= 1\r\n    let needNext = this.dataValues.DD[0].Values[needNo].label;\r\n\r\n    const startYear = 0; //this.props.startYear\r\n    const dur = 1; //this.props.duration;\r\n\r\n    this.props.handleAddNeed(\r\n      getListItemKeyFromName(INCOMENEEDS, needNext),\r\n      startYear,\r\n      dur\r\n    );\r\n//    }\r\n  };\r\n\r\n\r\n\r\n  updateDDown = (id, selection) => {\r\n    let need = {\r\n      id: this.props.id,\r\n      needTypeKey: this.props.needCurr.needTypeKey,\r\n\r\n      Percent: this.props.needCurr.Percent,\r\n      amount: this.props.needCurr.amount,\r\n      startYear: this.props.needCurr.startYear,\r\n      duration: this.props.needCurr.duration,\r\n    };\r\n\r\n    if (id === 1)\r\n      need.needTypeKey = getListItemKeyFromName(INCOMENEEDS, selection);\r\n    else if (id === 2) need.Owner = selection;\r\n    // console.log(need)\r\n    this.props.handleUpdate(need);\r\n  };\r\n\r\n  handleUpdateInput = (id, value) => {\r\n    \r\n    let need = {\r\n      id: this.props.id,\r\n      needTypeKey: this.props.needCurr.needTypeKey,\r\n      Percent: this.props.needCurr.Percent,\r\n      amount: this.props.needCurr.amount,\r\n      startYear: this.props.needCurr.startYear,\r\n      duration: this.props.needCurr.duration,\r\n    };\r\n\r\n    let changed = false;\r\n    const lang = this.props.language;\r\n    const valueClean = cleanFormat(value,lang);\r\n    const valueCleanInt = parseInt(valueClean);\r\n   \r\n    if (id === 1) {\r\n      changed = need.amount !== valueCleanInt ? true : false;\r\n      need.amount = valueCleanInt;\r\n      need.Percent = //100*need.amount/this.props.afterTaxTotalIncome\r\n        (parseInt(1000000*need.amount / this.props.afterTaxTotalIncome)/10000).toFixed(2);\r\n     } else if (id === 2) {\r\n      changed = need.startYear !== value ? true : false;\r\n      need.startYear = value;\r\n    } else if (id === 3) {\r\n      changed = need.duration !== value ? true : false;\r\n      need.duration = value;\r\n    } else if (id === 4) {\r\n      changed =\r\n        need.Percent !==\r\n        parseInt(100 * valueClean) / 100\r\n          ? true\r\n          : false;\r\n      need.Percent = parseFloat(valueClean);\r\n    }\r\n     if (changed) {\r\n       this.props.handleUpdate(need);\r\n       //this.setState({ loading: this.props.disableAddRemove });\r\n     }\r\n  };\r\n\r\n  render() {\r\n    let rOnly =\r\n      this.props.needCurr.needTypeKey === INCOMENEEDS.PERCET_OF_INCOME.Key;\r\n    rOnly = false;\r\n    const percentN =\r\n      this.props.needCurr.needTypeKey === INCOMENEEDS.PERCET_OF_INCOME.Key;\r\n    let divStyleClass = \"dropDown inputDiv\";\r\n    divStyleClass += this.props.language === \"fr\" ? \" inputDivFrench\" : \"\";\r\n\r\n     if (this.state.loading === true && this.props.disableAddRemove=== true) {\r\n      return (\r\n       \"\"\r\n      );\r\n    } else {\r\n    return (\r\n      <div className=\"inputRow\">\r\n        {this.dataValues.DD.map((dd) => (\r\n          <DropDown\r\n            key={dd.id}\r\n            id={dd.id}\r\n            Count={this.props.needsNo}\r\n            disable={this.props.needCurr.duration === 100}\r\n            Title={dd.Title}\r\n            defValue={dd.defValue}\r\n            width={DROPDOWN_WIDE}\r\n            Values={dd.Values}\r\n            updateDDown={this.updateDDown}\r\n          />\r\n        ))}\r\n        {percentN ? (\r\n          <InputField\r\n            inputName={CONTROLTITLE[this.props.language].percent}\r\n            format={3}\r\n            id={4}\r\n            Count={this.props.needsNo}\r\n            language={this.props.language}\r\n            inputValue={this.props.needCurr.Percent}\r\n            handleUpdateInput={this.handleUpdateInput}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <InputField\r\n          inputName={CONTROLTITLE[this.props.language].afterTaxAmount}\r\n          format={2}\r\n          id={1}\r\n          key={\"am1\"}\r\n          readOnly={rOnly}\r\n          Count={this.props.needsNo}\r\n          language={this.props.language}\r\n          infoIcon={getInfoSalaryPercent(this.props.language)}\r\n          inputValue={this.props.needCurr.amount}\r\n          handleUpdateInput={this.handleUpdateInput}\r\n        />\r\n        <InputField\r\n          format={1}\r\n          id={2}\r\n          inputName={CONTROLTITLE[this.props.language].startYear}\r\n          Count={this.props.needsNo}\r\n          language={this.props.language}\r\n          infoIcon={getInfoIconAssetsYr0(this.props.language)}\r\n          inputValue={this.props.needCurr.startYear}\r\n          handleUpdateInput={this.handleUpdateInput}\r\n        />\r\n        {this.props.needCurr.duration === 100 ? (\r\n          <div className={divStyleClass}>\r\n            <div className=\"controlTitle\">\r\n              {CONTROLTITLE[this.props.language].dur}\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"inputField inputFieldDisabled\"\r\n              isDisabled={true}\r\n              value={MESSAGES[this.props.language].ever}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <InputField\r\n            format={1}\r\n            id={3}\r\n            inputName={CONTROLTITLE[this.props.language].dur}\r\n            Count={this.props.needsNo}\r\n            language={this.props.language}\r\n            inputValue={this.props.needCurr.duration}\r\n            handleUpdateInput={this.handleUpdateInput}\r\n          />\r\n        )}\r\n\r\n        <AddRemove\r\n          currentID={this.props.needCurr.id}\r\n          minComps={0}\r\n          id={this.props.needCurr.needTypeKey}\r\n          numberComps={this.props.needsNo}\r\n          handleDoAdd={this.handleDoAdd}\r\n          handleDoRemove={this.handleDoRemove}\r\n          disabled={this.props.disableAddRemove}\r\n        />\r\n        {/* {isMobileDevice() && this.props.id < this.props.needsNo ? (\r\n          <hr className=\"ppi2\" />\r\n        ) : (\r\n          \"\"\r\n        )} */}\r\n      </div>\r\n    );\r\n      }\r\n  }\r\n}\r\n"],"sourceRoot":""}