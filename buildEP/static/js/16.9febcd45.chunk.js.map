{"version":3,"sources":["components/Presentation.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/IconButton/IconButton.js","../node_modules/@material-ui/core/esm/Switch/Switch.js"],"names":["Presentation","props","i","displayName","name","componentDidMount","setState","designedFor","presentationCurr","designedBy","notes","getNewPresentation","id","provinceKey","invRate","inflation","taxRate","periodOption","language","resultsOption","adviserLogo","appletImage","overwriteProbate","contribsGrowByInflation","state","withdsGrowByInflation","updateDDown","selection","pres","getListItemKeyFromName","PROVINCE","handleUpdate","handleUpdateInput","value","lang","changed","valueClean","cleanFormat","parseInt","toggleCheckboxC","element","contrib","toggleCheckboxW","withd","handleFilterAppletChange","byAppletchecked","updateCollapsibles","typeValues","listProvincesToShow","getListToShowByOrder","length","push","label","showSaved","dataValues","DD","Title","CONTROLTITLE","province","defValue","getListItemNameFromKey","Values","nextProps","this","evt","target","infoIcon","getInfoIconNotes","classes","className","map","dd","key","Count","width","DROPDOWN_WIDE","inputName","format","inputValue","Math","round","inputTitle","onFocus","handleFocus","onClick","select","type","onBlur","updateInputValue","onChange","style","marginBottom","whiteSpace","focusVisibleClassName","focusVisible","disableRipple","root","switchBase","thumb","track","checked","contribsGrow","withdsGrow","Component","withStyles","theme","color","backgroundColor","withTheme","SwitchBase","React","ref","autoFocus","checkedProp","checkedIcon","defaultChecked","disabledProp","disabled","icon","inputProps","inputRef","readOnly","required","tabIndex","other","_objectWithoutProperties","_useControlled","useControlled","controlled","default","Boolean","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","_extends","component","clsx","role","undefined","event","input","newChecked","padding","cursor","position","opacity","height","top","left","margin","zIndex","_props$edge","edge","children","_props$color","_props$disabled","_props$disableFocusRi","disableFocusRipple","_props$size","size","ButtonBase","concat","capitalize","edgeStart","edgeEnd","centerRipple","focusRipple","textAlign","flex","fontSize","typography","pxToRem","borderRadius","overflow","palette","action","active","transition","transitions","create","duration","shortest","fade","hoverOpacity","marginLeft","marginRight","colorInherit","colorPrimary","primary","main","colorSecondary","secondary","sizeSmall","display","alignItems","justifyContent","Switch","boxSizing","flexShrink","verticalAlign","colorAdjust","grey","transform","common","black","white","boxShadow","shadows"],"mappings":"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","file":"static/js/16.9febcd45.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { DropDown } from \"./DropDown\";\r\n//import { InputField4 } from './inputField4';\r\nimport { InputField } from \"./inputField\";\r\nimport { cleanFormat, getListItemKeyFromName } from \"../utils/helper\";\r\nimport { CONTROLTITLE, PROVINCE } from \"../definitions/generalDefinitions\";\r\nimport { DROPDOWN_WIDE } from \"../definitions/generalDefinitions\";\r\nimport { getListItemNameFromKey, getListToShowByOrder } from \"../utils/helper\";\r\nimport { getInfoIconNotes } from \"../definitions/infoIconsDefinitions\";\r\nimport { Info } from \"./Info\";\r\nimport { Switch } from '@material-ui/core';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  switchBase: {\r\n    color: \"rgb(235,235,235)\",\r\n    \"&$checked\": {\r\n      color:\"#4775ae\" \r\n    },\r\n    \"&$checked + $track\": {\r\n      backgroundColor:\"rgb(117, 134, 145)\"\r\n    }\r\n  },\r\n  checked: {},\r\n  track: {\r\n    backgroundColor: \"rgb(117, 134, 145)\",\r\n  }\r\n});\r\n\r\nconst ID_CONTRIBS=6\r\nconst ID_WITHDS=7\r\n\r\n\r\nclass Presentation extends Component {\r\n  displayName = Presentation.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    /*     this.state = {\r\n      image: this.props.presentationCurr.adviserLogo\r\n    };\r\n */\r\n\r\n    let i;\r\n    /* let typeValues = [];\r\n    for (i = 0; i <= 9; ++i) {\r\n      typeValues.push({\r\n        label: PROVINCE[this.props.language].Values[i],\r\n        value: i + 1\r\n      });\r\n    } */\r\n\r\n    let typeValues = [];\r\n    const listProvincesToShow = getListToShowByOrder(PROVINCE);\r\n    // console.log(listProvincesToShow)\r\n    for (i = 0; i < listProvincesToShow.length; ++i) {\r\n      typeValues.push({\r\n        label: listProvincesToShow[i].value[this.props.language],\r\n        value: i + 1,\r\n      });\r\n    }\r\n\r\n    this.state = {\r\n      designedFor: \"\",\r\n      designedBy: \"\",\r\n      notes: \"\",\r\n      showSaved:false,\r\n      contribsGrowByInflation:this.props.presentationCurr.contribsGrowByInflation,\r\n    withdsGrowByInflation:this.props.presentationCurr.withdsGrowByInflation\r\n \r\n      \r\n    };\r\n     /* this.contribsGrowByInflation=this.props.presentationCurr.contribsGrowByInflation;\r\n    this.withdsGrowByInflation=this.props.presentationCurr.withdsGrowByInflation;\r\n  */\r\n    this.dataValues = {\r\n      DD: [\r\n        {\r\n          id: 1,\r\n          Title: CONTROLTITLE[this.props.language].province,\r\n          defValue: getListItemNameFromKey(\r\n            PROVINCE,\r\n            this.props.presentationCurr.provinceKey,\r\n            this.props.language\r\n          ),\r\n          Values: typeValues,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  // unsafe use getDerivedStateFromProps TBD\r\n\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      designedFor: this.props.presentationCurr.designedFor,\r\n      designedBy: this.props.presentationCurr.designedBy,\r\n      notes: this.props.presentationCurr.notes,\r\n    });\r\n  };\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.presentationCurr !== this.props.presentationCurr) {\r\n      this.dataValues.DD[0].defValue = getListItemNameFromKey(\r\n        PROVINCE,\r\n        nextProps.presentationCurr.provinceKey,\r\n        this.props.language\r\n      );\r\n    \r\n    \r\n      /* this.contribsGrowByInflation=this.props.presentationCurr.contribsGrowByInflation;\r\n      this.withdsGrowByInflation=this.props.presentationCurr.withdsGrowByInflation;\r\n    */\r\n      //\t\tthis.dataValues.DD[0].Title = CONTROLTITLE[this.props.language].province;\r\n     }\r\n  }\r\n\r\n  /* static getDerivedStateFromProps(nextProps, prevState){\r\n    \r\n    if(nextProps.presentationCurr!==prevState.presentationCurr){\r\n      return {presentationCurr : nextProps.presentationCurr};\r\n    }\r\n    else return null;\r\n  }\r\n\r\n */\r\n\r\n  getNewPresentation = () => {\r\n    return {\r\n      id: this.props.id,\r\n      provinceKey: this.props.presentationCurr.provinceKey,\r\n      invRate: this.props.presentationCurr.invRate,\r\n      inflation: this.props.presentationCurr.inflation,\r\n      taxRate: this.props.presentationCurr.taxRate,\r\n      designedFor: this.props.presentationCurr.designedFor,\r\n      designedBy: this.props.presentationCurr.designedBy,\r\n      notes: this.props.presentationCurr.notes,\r\n      periodOption: this.props.presentationCurr.periodOption,\r\n      language: this.props.presentationCurr.language,\r\n      resultsOption: this.props.presentationCurr.resultsOption,\r\n      adviserLogo: this.props.presentationCurr.adviserLogo,\r\n      appletImage: this.props.presentationCurr.appletImage,\r\n      overwriteProbate: this.props.presentationCurr.overwriteProbate,\r\n      contribsGrowByInflation: this.state.contribsGrowByInflation,\r\n      withdsGrowByInflation: this.state.withdsGrowByInflation,\r\n    };\r\n  };\r\n\r\n  updateDDown = (id, selection) => {\r\n    let pres = this.getNewPresentation();\r\n\r\n    if (id === 1)\r\n      pres.provinceKey = getListItemKeyFromName(PROVINCE, selection);\r\n    this.props.handleUpdate(pres);\r\n  };\r\n\r\n  handleUpdateInput = (id, value) => {\r\n    let pres = this.getNewPresentation();\r\n    if (id === ID_CONTRIBS)\r\n      pres.contribsGrowByInflation=value\r\n    if (id === ID_WITHDS)\r\n      pres.withdsGrowByInflation=value\r\n    \r\n\r\n    const lang=this.props.language;\r\n    let changed = false;\r\n    const valueClean = cleanFormat(value,lang);\r\n   \r\n    if (id === 1) {\r\n      changed =\r\n        pres.invRate !==\r\n        parseInt(10000 * valueClean) / 10000\r\n          ? true\r\n          : false;\r\n      pres.invRate =\r\n        parseInt(10000 * valueClean) / 10000;\r\n    } else if (id === 2) {\r\n      changed =\r\n        pres.inflation !==\r\n        parseInt(10000 * valueClean) / 10000\r\n          ? true\r\n          : false;\r\n\r\n      pres.inflation =\r\n        parseInt(10000 * valueClean) / 10000;\r\n    } else if (id === 3) {\r\n       changed =\r\n        pres.taxRate !==\r\n        parseInt(10000 * valueClean) / 10000\r\n          ? true\r\n          : false;\r\n\r\n      pres.taxRate =\r\n        parseInt(10000 * valueClean) / 10000;\r\n    }\r\n    else if (id === ID_CONTRIBS || id === ID_WITHDS) {\r\n      changed = true\r\n    }\r\n    //changed = pres.adviserLogo !== this.state.image ? true : false;\r\n\r\n    \r\n    if (changed) this.props.handleUpdate(pres);\r\n  };\r\n\r\n  updateInputValue(id, evt) {\r\n     let pres = this.getNewPresentation();\r\n    let changed = false;\r\n    if (id === 3) {\r\n      changed = pres.designedFor !== evt.target.value;\r\n      pres.designedFor = evt.target.value;\r\n    } else if (id === 4) {\r\n      changed = pres.designedBy !== evt.target.value;\r\n      pres.designedBy = evt.target.value;\r\n    } else if (id === 5) {\r\n      changed = pres.notes !== evt.target.value;\r\n      pres.notes = evt.target.value;\r\n    }\r\n    if (changed) this.props.handleUpdate(pres);\r\n  }\r\n\r\n  toggleCheckboxC=(element)=>\r\n  {\r\n    const contrib=!this.state.contribsGrowByInflation;\r\n    this.setState(\r\n      { contribsGrowByInflation: contrib }, () => {this.handleUpdateInput(ID_CONTRIBS, contrib);})\r\n    \r\n    /* element.checked = !element.checked;\r\n    this.contribsGrowByInflation=element.checked\r\n */\r\n    \r\n    \r\n//     this.handleUpdateInput(ID_CONTRIBS, this.contribsGrowByInflation)\r\n  }\r\n\r\n  toggleCheckboxW=(element)=>\r\n  {\r\n    const withd=!this.state.withdsGrowByInflation;\r\n    this.setState(\r\n      { withdsGrowByInflation: withd }, () => {this.handleUpdateInput(ID_WITHDS, withd);})\r\n    \r\n    /* element.checked = !element.checked;\r\n    this.withdsGrowByInflation=element.checked */\r\n    \r\n    \r\n  }\r\n\r\n  handleFilterAppletChange = () => {\r\n    this.setState(\r\n      { byAppletchecked: !this.state.byAppletchecked },\r\n      this.updateCollapsibles\r\n    );\r\n  };\r\n\r\n\r\n  render() {\r\n     const infoIcon = getInfoIconNotes(this.props.language);\r\n     \r\n     const { classes } = this.props;\r\n    return (\r\n      <div className=\"inputRow\">\r\n        {this.dataValues.DD.map((dd) => (\r\n          <DropDown\r\n            key={dd.id}\r\n            id={dd.id}\r\n            Count={1}\r\n            Title={dd.Title}\r\n            width={DROPDOWN_WIDE}\r\n            defValue={dd.defValue}\r\n            Values={dd.Values}\r\n            updateDDown={this.updateDDown}\r\n          />\r\n        ))}\r\n        <InputField\r\n          inputName={CONTROLTITLE[this.props.language].taxRate}\r\n          format={3}\r\n          id={3}\r\n          Count={1}\r\n          language={this.props.language}\r\n          inputValue={Math.round(10000*this.props.presentationCurr.taxRate)/10000}\r\n          inputTitle={this.props.id}\r\n          handleUpdateInput={this.handleUpdateInput}\r\n        />\r\n        <InputField\r\n          inputName={CONTROLTITLE[this.props.language].invRate}\r\n          format={3}\r\n          id={1}\r\n          Count={1}\r\n          language={this.props.language}\r\n          inputValue={Math.round(10000*this.props.presentationCurr.invRate)/10000}\r\n          inputTitle={this.props.id}\r\n          handleUpdateInput={this.handleUpdateInput}\r\n        />\r\n        <InputField\r\n          inputName={CONTROLTITLE[this.props.language].inflation}\r\n          format={3}\r\n          id={2}\r\n          Count={1}\r\n          language={this.props.language}\r\n          inputValue={Math.round(10000*this.props.presentationCurr.inflation)/10000}\r\n          inputTitle={this.props.id}\r\n          handleUpdateInput={this.handleUpdateInput}\r\n        />\r\n        <div className=\"dropDown inputText\">\r\n          <span className=\"controlTitle\">\r\n            {CONTROLTITLE[this.props.language].designedFor}\r\n          </span>\r\n          <input\r\n            id={3}\r\n            className=\"inputField Text\"\r\n            value={this.state.designedFor}\r\n            onFocus={this.handleFocus}\r\n            onClick={this.select}\r\n            type=\"text\"\r\n            onBlur={(evt) => this.updateInputValue(3, evt)}\r\n            onChange={(evt) => this.setState({ designedFor: evt.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"dropDown inputText\">\r\n          <span className=\"controlTitle\">\r\n            {CONTROLTITLE[this.props.language].designedBy}\r\n          </span>\r\n          <input\r\n            id={4}\r\n            className=\"inputField Text\"\r\n            onFocus={this.handleFocus}\r\n            onClick={this.select}\r\n            type=\"text\"\r\n            value={this.state.designedBy}\r\n            onBlur={(evt) => this.updateInputValue(4, evt)}\r\n            onChange={(evt) => this.setState({ designedBy: evt.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"dropDown  inputTextNotes\" style={{marginBottom:\"0px\"}}>\r\n          \r\n            <span className=\"controlTitle\" style={{whiteSpace: \"nowrap\"}}>\r\n          <Switch \r\n          focusVisibleClassName={classes.focusVisible}\r\n          disableRipple\r\n          classes={{\r\n            root: classes.root,\r\n            switchBase: classes.switchBase,\r\n            thumb: classes.thumb,\r\n            track: classes.track,\r\n            checked: classes.checked\r\n          }}\r\n\r\n                  checked={this.state.contribsGrowByInflation}\r\n                  onChange={this.toggleCheckboxC}\r\n            \r\n        />\r\n           {CONTROLTITLE[this.props.language].contribsGrow}     \r\n           \r\n           </span>\r\n        \r\n\r\n           <span className=\"controlTitle\" style={{whiteSpace: \"nowrap\"}}>\r\n          <Switch \r\n          focusVisibleClassName={classes.focusVisible}\r\n          disableRipple\r\n          classes={{\r\n            root: classes.root,\r\n            switchBase: classes.switchBase,\r\n            thumb: classes.thumb,\r\n            track: classes.track,\r\n            checked: classes.checked\r\n          }}\r\n\r\n          checked={this.state.withdsGrowByInflation}\r\n          onChange={this.toggleCheckboxW}\r\n          \r\n        />\r\n           {CONTROLTITLE[this.props.language].withdsGrow}\r\n        \r\n        </span>\r\n\r\n       \r\n       \r\n        </div>\r\n  \r\n        <div className=\"dropDown inputTextNotes\">\r\n          <span className=\"controlTitle\" >\r\n            {CONTROLTITLE[this.props.language].notes}\r\n          </span>\r\n          <Info infoIcon={infoIcon} />{\" \"}\r\n          <textarea\r\n            id={5}\r\n            className=\"inputField textarea\"\r\n            onFocus={this.handleFocus}\r\n            onClick={this.select}\r\n            type=\"text\"\r\n            value={this.state.notes}\r\n            onBlur={(evt) => this.updateInputValue(5, evt)}\r\n            onChange={(evt) => this.setState({ notes: evt.target.value })}\r\n          />\r\n        </div>\r\n      {/*   <div>  \r\n         <span  style={{display:\"block\", whiteSpace: \"nowrap\", marginLeft:\"15px\"}}><label className=\"controlTitle\" for=\"contrib\"> Contributions to Assets grow with inflation</label>\r\n        <input id={6} style={{marginTop: \"30px\"}} type=\"checkbox\" width=\"16px\" heigth=\"16px\" defaultChecked={this.contribsGrowByInflation} onChange={this.toggleCheckboxC} /></span>\r\n        <span style={{display:\"block\", whiteSpace: \"nowrap\", marginLeft:\"15px\"}}><label className=\"controlTitle\" for=\"withd\"> Withdrawals from Assets grow with inflation</label>\r\n        <input  id={7} style={{marginTop: \"30px\"}} type=\"checkbox\" width=\"16px\" heigth=\"16px\" defaultChecked={this.withdsGrowByInflation} onChange={this.toggleCheckboxW} /></span>\r\n        </div>\r\n       */}  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Presentation);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      textAlign: 'center',\n      flex: '0 0 auto',\n      fontSize: theme.typography.pxToRem(24),\n      padding: 12,\n      borderRadius: '50%',\n      overflow: 'visible',\n      // Explicitly set the default value to solve a bug on IE 11.\n      color: theme.palette.action.active,\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.action.active, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: 'transparent',\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -12,\n      '$sizeSmall&': {\n        marginLeft: -3\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -12,\n      '$sizeSmall&': {\n        marginRight: -3\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: 3,\n      fontSize: theme.typography.pxToRem(18)\n    },\n\n    /* Styles applied to the children container element. */\n    label: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    }\n  };\n};\n/**\n * Refer to the [Icons](/components/icons/) section of the documentation\n * regarding the available icon options.\n */\n\nvar IconButton = /*#__PURE__*/React.forwardRef(function IconButton(props, ref) {\n  var _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"edge\", \"children\", \"classes\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], disabled && classes.disabled, size === \"small\" && classes[\"size\".concat(capitalize(size))], {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge]),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes = {\n  /**\n   * The icon element.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var found = React.Children.toArray(props.children).some(function (child) {\n      return /*#__PURE__*/React.isValidElement(child) && child.props.onClick;\n    });\n\n    if (found) {\n      return new Error(['Material-UI: You are providing an onClick event listener ' + 'to a child of a button element.', 'Firefox will never trigger the event.', 'You should move the onClick listener to the parent button element.', 'https://github.com/mui-org/material-ui/issues/13957'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiIconButton'\n})(IconButton);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);"],"sourceRoot":""}