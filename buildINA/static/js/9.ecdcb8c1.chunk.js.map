{"version":3,"sources":["components/AnalysisGraph.js","components/GridExcelComponent/DownloadExcel.js","components/GridExcelComponent/ExcelToolbar.js","components/GridExcelComponent/DataTable.js"],"names":["AnalysisGraphs","props","getMCCQuoteOutput","Promise","all","getMCCQuoteOutput1","getMCCQuoteOutput4","quoteClient","INAEstateOption","QUOTE_JOINT","QUOTE_CLIENT","FA","INAOption","insuranceNeed","dataEstateLiability","FAClean","parseFloat","cleanFormat","dataMCC","readMCCData","input","fetchMCCData","dataAPISite","then","data","undefined","minPrem","parseInt","Values","lifeExp","a","age","insured","lives","lifeStatus","years","projectEnd","policy","objPremium","PremSet","bestFitEquiBuild","faceAmount","objRider","ICO20","T20Amt","objCustomDB","solveForPremium_On","customDB","getDataFutureINA","PremSetAmt","Prem","PremSetDur","premiumDur","PremSolve","i","console","log","dataAges","slice","map","x","dataPremiums","dataDB","dataSVEquiBuild","unshift","length","pop","getMCCQuoteOutputManu","PremSolveDur","intRate","province","dataSVManulife","selectMultiButton","id","value","minMultiple","insMultiple","insuranceAmtInitial","b","state","loadingMCC","setState","solveForOptimumQuote","min","bestPremiumDur","dataFutureINA","ratio","k","dataFVofPrems","getDataFVofPrems","SumOfSquresDiff","insVal","Math","pow","round","bestMinMultiple","gotHereInInnerLoop","solveForOptimumEquiBuild","e","selectMultiButtonINAorTax","getEstateLiabPieCharts","totalLiabProjections","getProjectedLiabilities","dataInput","language","dataNA","setUIDataToAPI","estateLiab2","push","getTaxLiabCategoryTotal","ASSET_TAX","REGISTERED","Key","l1","taxL","CAPITAL_GAINS_ANNUAL","l2","CAPITAL_GAINS_DEFERRED","l3","FULLY_TAXABLE","DIVIDEND","estateLiab","estateLiab3","l2LE","l3LE","estateLiabLE","pv","currINA","Presentations","invRate","inflation","dataShortfall","max","handleFocus","event","target","select","dataFuture","fv","shortfall","chartRef","React","createRef","taxLiabChartRef","this","nextProps","nextState","prevState","dtaAgesAll","Clients","Age","lifeExpClient","lifeExpJLTD","dataShortfallFV","labels","datasets","label","fill","borderColor","backgroundColor","dataTaxLiabLifeExp","dataTaxLiab","dataTaxLiability","dataPieAssets","getAssetsCategoryTotal","ASSETS","CASH","LIFE_INSURANCE","CHARITABLE_GIFTS_TAX_CREDIT","RRSP_RRIF","SMALL_BUSINESS_SHARES","STOCKS_BONDS","REAL_ESTATE","PERSONAL_RESIDENCE","OTHER_ASSETS","dataPieTax","getAssetsTaxCategoryTotal","NON_TAXABLE","dataPieLiabs","getLiabsCategoryTotal","LIABILITIES","OUTSTANDING_LOANS","MORTGAGE_REDEMPTION","CREDIT_CARDS","CLIENT_TAX_LIABILITY","INCOME_TAXES","EMERGENCY_FUND","OTHER","CHILD_HOME_CARE","dataPieLiabsAtDeath","LAST_EXPENSES","LEGAL_AND_EXECUTOR_FEES","LEGACY_FOR_CHILDREN","CHARITABLE_GIFTS","optionsPie","responsive","title","display","position","text","fontSize","fontColor","legend","optionsPieTax","JSON","parse","stringify","optionsPieLiabsAtDeath","optionsPieLiabs","dataPieEstateLiabNow","dataPieEstateLiabLE","optionsPieEstateLiab","optionsPieEstateLiabLE","dataMCCpremFV","numFormat","dataMCCQuoteDB","optionsFV","maintainAspectRatio","scales","xAxes","stacked","ticks","beginAtZero","yAxes","steps","stepValue","dataProjection","dataProjectionCV","needToE","needToF","needTo","style","color","marginTop","MultiButtons","noButtons","buttonCaption","width","className","height","overflow","float","options","clear","inputName","format","Count","inputValue","maxValue","handleUpdateInput","marginLeft","leftPadding","DataTable","dataColTitles","gridTitle","Component","ExcelFile","ReactExport","ExcelSheet","DownloadExcel","j","dataCell","styleCell","alignment","horizontal","font","name","numFmt","styleCellCol1","styleCellAlt","patternType","fgColor","rgb","styleCellAltCol1","styleTitleRowInfo","bold","wrapText","border","top","bottom","right","left","styleCellLeftAllign","styleTitleRow","excelColumnsDataInfoSection","dataBodyTitles","dataBody","dataRow","lang","toString","indexOf","isNaN","excelColumnsHeaders","sz","wpx","excelColumnsDataMain","multiDataSet","columns","xSteps","ySteps","tempDate","Date","date","getDate","toLocaleString","month","getFullYear","downloadNow","hideElement","filename","APPLET_INA","dataSet","ExcelToolbar","handleClick","setExcel","classes","marginBottom","margin","padding","excelToolbarText","Fragment","Tooltip","placement","IconButton","onClick","xmlns","viewBox","d","Datatable","getMuiTheme","createMuiTheme","typography","fontFamily","fontWeight","overrides","MUIDataTable","tableRoot","paper","boxShadow","borderBottom","borderRight","MuiTableRow","root","head","footer","MuiTableCell","sizeSmall","MUIDataTableToolbar","paddingLeft","titleRoot","icon","MUIDataTableBodyCell","MUITypography","body2","MUITablePagination","caption","downloadExcelNow","unit","divStyle","window","innerWidth","styleHeader","textAlign","zIndex","customHeader","index","column","TableCell","key","gridIcons","Info","infoIcon","filter","customHeadRender","captions","GRID_INTERNAL_CAPTIONS","excel","filterType","selectableRows","resizableColumns","selectableRowsHeader","viewColumns","search","download","print","textLabels","pagination","rowsPerPage","rows","displayRows","of","setTableProps","size","downloadOptions","separator","onDownload","buildHead","buildBody","customRowRender","dataIndex","rowIndex","dataI","Typography","TableRow","specialRow","customToolbar","theme","gridColumnsDataExcelInfoSection"],"mappings":"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","file":"static/js/9.ecdcb8c1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Bar, Line, Chart, Pie } from \"react-chartjs-2\";\r\n//import \"./Output.css\";\r\nimport \"./Output.css\";\r\nimport { readMCCData } from \"../data/dataExchangeMCC\";\r\nimport { fetchMCCData } from \"../utils/FetchAPIs\";\r\nimport { setUIDataToAPI } from \"../data/dataExchange\";\r\nimport {\r\n  getProjectedLiabilities,\r\n  cleanFormat,\r\n  numFormat,\r\n  getAssetsTaxCategoryTotal,\r\n  getAssetsCategoryTotal,\r\n  getTaxLiabCategoryTotal,\r\n  getLiabsCategoryTotal,\r\n} from \"../utils/helper\";\r\nimport {\r\n  GROWTHDIR,\r\n  QUOTE_CLIENT,\r\n  QUOTE_SPOUSE,\r\n  QUOTE_JOINT,\r\n  ASSET_TAX,\r\n  ASSETS,\r\n  LIABILITIES,\r\n} from \"../definitions/generalDefinitions\";\r\nimport MCCGraph from \"./MCCGraph\";\r\nimport { MultiButtons } from \"./MultiButtons\";\r\nimport { InputField } from \"./inputField\";\r\nimport DataTable from \"./GridExcelComponent/DataTable\";\r\n\r\n// props option\r\nconst DISPLAY_INCOME = 1;\r\n\r\n// for Estate\r\nconst DISPLAY_TAXLIAB_CLIENT = 1;\r\nconst DISPLAY_TAXLIAB_JLTD = 2;\r\n\r\nexport default class AnalysisGraphs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loadingMCC: true,\r\n      estateLiab: [],\r\n      estateLiabLE: [],\r\n      taxL: 0,\r\n    };\r\n    this.dataAges = [];\r\n    this.dataPremiums = [];\r\n    this.dataDB = [];\r\n    this.dataSVEquiBuild = [];\r\n    this.dataSVManulife = [];\r\n    this.Prem = 0;\r\n    this.bestPremiumDur = 100;\r\n    this.bestMinMultiple = 0;\r\n    this.premiumDur = 10;\r\n    this.lifeExp = 0;\r\n    this.minMultiple = 0;\r\n    this.insMultiple = 0;\r\n    this.bestFitEquiBuild = false;\r\n    this.INAEstateOption = DISPLAY_TAXLIAB_CLIENT;\r\n    this.insuranceAmtInitial =\r\n      this.props.INAOption === DISPLAY_INCOME\r\n        ? this.props.insuranceNeed\r\n        : this.props.dataEstateLiability[0];\r\n    this.chartRef = React.createRef();\r\n    this.taxLiabChartRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getEstateLiabPieCharts();\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState, prevState) {\r\n    if (\r\n      this.props.projectEnd !== nextProps.projectEnd ||\r\n      this.state.loadingMCC !== prevState.loadingMCC ||\r\n      this.props.INAOption !== nextProps.INAOption\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  getMCCQuoteOutput = () => {\r\n    return Promise.all([this.getMCCQuoteOutput1(), this.getMCCQuoteOutput4()]);\r\n  };\r\n\r\n  getMCCQuoteOutput1 = () => {\r\n    let quotePlanID = 48;\r\n    let quoteClient =\r\n      this.INAEstateOption === DISPLAY_TAXLIAB_JLTD\r\n        ? QUOTE_JOINT\r\n        : QUOTE_CLIENT;\r\n    let FA =\r\n      this.props.INAOption === DISPLAY_INCOME\r\n        ? this.props.insuranceNeed\r\n        : this.props.dataEstateLiability[0];\r\n    const FAClean = parseFloat(cleanFormat(FA));\r\n    let dataMCC = readMCCData(\r\n      this.props.input,\r\n      quotePlanID,\r\n      quoteClient,\r\n      FAClean\r\n    );\r\n\r\n    // console.log(this.props.dataAPISite, dataMCC, FA);\r\n    if (FA > 0) {\r\n      fetchMCCData(this.props.dataAPISite, dataMCC, FAClean)\r\n        .then((data) => {\r\n          // console.log(data[0]);\r\n          if (data[0] !== undefined) {\r\n            //  console.log(\"POST: MCC_OutputArrays success\");\r\n            this.minPrem = parseInt(cleanFormat(data[0][2].Values[0]));\r\n            //this.dataDB = data[0][3].Values.map(x=>parseInt(cleanFormat(x)));\r\n            this.lifeExp = this.props.lifeExp; // Math.round(parseInt(data[0][4].Values[0]));\r\n\r\n            //console.log(this.lifeExp,data[0][4].Values)\r\n            // make render\r\n          }\r\n        })\r\n        .then((data) => {\r\n          this.getMCCQuoteOutput4();\r\n        });\r\n    }\r\n  };\r\n\r\n  getMCCQuoteOutput4 = async () => {\r\n    let quotePlanID = 48;\r\n    let quoteClient =\r\n      this.INAEstateOption === DISPLAY_TAXLIAB_JLTD\r\n        ? QUOTE_JOINT\r\n        : QUOTE_CLIENT;\r\n    let FA =\r\n      this.props.INAOption === DISPLAY_INCOME\r\n        ? this.props.insuranceNeed\r\n        : this.props.dataEstateLiability[0];\r\n    const FAClean = parseFloat(cleanFormat(FA));\r\n    let dataMCC = readMCCData(\r\n      this.props.input,\r\n      quotePlanID,\r\n      quoteClient,\r\n      FAClean\r\n    );\r\n    let age = dataMCC.insured.lives[0].age;\r\n    if (dataMCC.insured.lifeStatus > 0 && age > dataMCC.insured.lives[1].age)\r\n      age = dataMCC.insured.lives[1].age;\r\n    let years = this.props.projectEnd;\r\n    dataMCC.policy.objPremium.PremSet = true;\r\n    if (this.bestFitEquiBuild === true) {\r\n      dataMCC.policy.faceAmount = FAClean / 2;\r\n      dataMCC.policy.objRider.ICO20 = true;\r\n      dataMCC.policy.objRider.T20Amt = FAClean / 2;\r\n      dataMCC.policy.objCustomDB.solveForPremium_On = true;\r\n      dataMCC.policy.objCustomDB.customDB =\r\n        this.props.INAOption === DISPLAY_INCOME\r\n          ? this.getDataFutureINA()\r\n          : this.props.dataEstateLiability;\r\n    } else {\r\n      dataMCC.policy.objCustomDB.customDB = [];\r\n      dataMCC.policy.objCustomDB.solveForPremium_On = false;\r\n      dataMCC.policy.objPremium.PremSetAmt = this.Prem;\r\n      dataMCC.policy.objPremium.PremSetDur = parseInt(this.premiumDur);\r\n    }\r\n    dataMCC.policy.objPremium.PremSolve = false;\r\n    fetchMCCData(this.props.dataAPISite, dataMCC, FAClean).then((data) => {\r\n      if (data[0][1] !== undefined) {\r\n        console.log(\"POST: MCC_OutputArrays success\");\r\n        this.dataAges = data[0][1].Values.slice(0, years).map((x) =>\r\n          parseInt(cleanFormat(x))\r\n        );\r\n        this.dataPremiums = data[0][2].Values.map((x) =>\r\n          parseInt(cleanFormat(x))\r\n        );\r\n        this.dataDB = data[0][3].Values.slice(0, years).map((x) =>\r\n          parseInt(cleanFormat(x))\r\n        );\r\n        this.dataSVEquiBuild = data[0][4].Values.slice(0, years).map((x) =>\r\n          parseInt(cleanFormat(x))\r\n        );\r\n        this.dataDB.unshift(FAClean);\r\n        let i;\r\n\r\n        for (\r\n          i = 0;\r\n          i < this.dataDB.length + age - this.props.projectEnd + 3;\r\n          ++i\r\n        ) {\r\n          this.dataAges.pop();\r\n          this.dataDB.pop();\r\n          this.dataPremiums.pop();\r\n          this.dataSVEquiBuild.pop();\r\n        }\r\n        //console.log(this.dataDB);\r\n        /* let l = this.state.loadingMCC;\r\n        l = false;\r\n        this.setState({ l }); */\r\n      }\r\n    });\r\n  };\r\n\r\n  getMCCQuoteOutputManu = async () => {\r\n    let quotePlanID = 47; //MANU_UL_CLIENT_INVSEL = 47\r\n    let quoteClient =\r\n      this.INAEstateOption === DISPLAY_TAXLIAB_JLTD\r\n        ? QUOTE_JOINT\r\n        : QUOTE_CLIENT;\r\n    let FA =\r\n      this.props.INAOption === DISPLAY_INCOME\r\n        ? this.props.insuranceNeed\r\n        : this.props.dataEstateLiability[0];\r\n    const FAClean = parseFloat(cleanFormat(FA));\r\n    let dataMCC = readMCCData(\r\n      this.props.input,\r\n      quotePlanID,\r\n      quoteClient,\r\n      FAClean\r\n    );\r\n    //console.log(dataMCC);\r\n    let age = dataMCC.insured.lives[0].age;\r\n    if (dataMCC.insured.lifeStatus > 0 && age > dataMCC.insured.lives[1].age)\r\n      age = dataMCC.insured.lives[1].age;\r\n    let years = this.props.projectEnd;\r\n    dataMCC.policy.objPremium.PremSet = false;\r\n    dataMCC.policy.objPremium.PremSolve = true;\r\n    dataMCC.policy.objPremium.PremSolveDur = 99; //years-age;\r\n    dataMCC.policy.objCustomDB.customDB = [];\r\n    dataMCC.policy.objCustomDB.solveForPremium_On = false;\r\n    dataMCC.policy.intRate = 0.035;\r\n    dataMCC.policy.province = \"AB\"; // data.dataInput.Presentations[0].Province,\r\n    fetchMCCData(this.props.dataAPISite, dataMCC, FAClean).then((data) => {\r\n      if (data[0][1] !== undefined) {\r\n        console.log(\"POST: MCC_OutputArrays success\");\r\n        this.dataAges = data[0][1].Values.slice(0, years).map((x) =>\r\n          parseInt(cleanFormat(x))\r\n        );\r\n        this.dataPremiums = data[0][2].Values.map((x) =>\r\n          parseInt(cleanFormat(x))\r\n        );\r\n        this.dataDB = data[0][3].Values.slice(0, years).map((x) =>\r\n          parseInt(cleanFormat(x))\r\n        );\r\n        this.dataSVManulife = data[0][4].Values.slice(0, years).map((x) =>\r\n          parseInt(cleanFormat(x))\r\n        );\r\n\r\n        this.dataDB.unshift(FAClean);\r\n        let i;\r\n\r\n        for (\r\n          i = 0;\r\n          i < this.dataDB.length + age - this.props.projectEnd + 8;\r\n          ++i\r\n        ) {\r\n          this.dataAges.pop();\r\n          this.dataDB.pop();\r\n          this.dataPremiums.pop();\r\n          this.dataSVManulife.pop();\r\n        }\r\n        //console.log(this.dataDB);\r\n        /* let l = this.state.loadingMCC;\r\n        l = false;\r\n        this.setState({ l }); */\r\n      }\r\n    });\r\n  };\r\n\r\n  selectMultiButton = (id, value) => {\r\n    if (value !== undefined) {\r\n      if (id === 1) this.premiumDur = value;\r\n      else if (id === 2) this.minMultiple = value;\r\n      else if (id === 3) this.insMultiple = value;\r\n      else if (id === 4) this.insuranceAmtInitial = value;\r\n    }\r\n    this.getMCCQuoteOutput();\r\n    //console.log(value);\r\n\r\n    let b = !this.state.loadingMCC;\r\n    this.setState({ loadingMCC: b });\r\n    this.minPrem = 1;\r\n  };\r\n\r\n  solveForOptimumQuote = async () => {\r\n    let min = 0;\r\n    this.bestPremiumDur = 100;\r\n    let k;\r\n    let ratio;\r\n    let dataFutureINA = this.getDataFutureINA();\r\n    //let dataFutureEstateLiab = this.getDataFutureEstateLiability();\r\n    this.bestFitEquiBuild = false;\r\n\r\n    if (false) {\r\n      let gotHereInInnerLoop = false;\r\n      for (ratio = 0; ratio <= 40; ratio++) {\r\n        for (k = 5; k < this.lifeExp + 1; k++) {\r\n          this.premiumDur = k;\r\n          this.Prem = (1 + ratio / 20) * this.minPrem;\r\n\r\n          let dataFVofPrems = this.getDataFVofPrems(\r\n            (this.props.INAOption = DISPLAY_INCOME\r\n              ? dataFutureINA\r\n              : this.props.dataEstateLiability)\r\n          );\r\n\r\n          await this.getMCCQuoteOutput4();\r\n          let SumOfSquresDiff = 0;\r\n          let i;\r\n          for (i = 0; i < this.lifeExp; ++i) {\r\n            let insVal = DISPLAY_INCOME\r\n              ? dataFutureINA[i]\r\n              : this.props.dataEstateLiability[i];\r\n            //console.log(SumOfSquresDiff,dataFVofPrems,insVal)\r\n            SumOfSquresDiff += Math.pow(dataFVofPrems[i] - insVal, 2);\r\n          }\r\n          SumOfSquresDiff = Math.round(\r\n            SumOfSquresDiff / (1000000 * this.lifeExp)\r\n          );\r\n\r\n          if (min === 0) min = SumOfSquresDiff;\r\n          else if (min > SumOfSquresDiff) {\r\n            //console.log(\"k, min, SumOfSquresDiff\");\r\n            min = SumOfSquresDiff;\r\n            this.bestPremiumDur = k;\r\n            this.bestMinMultiple = 5 * ratio;\r\n            gotHereInInnerLoop = true;\r\n          } else if (gotHereInInnerLoop === true) k = this.lifeExp + 1; //get out\r\n          //console.log(k, min, SumOfSquresDiff, ratio);\r\n          //let b = !this.state.loadingMCC;\r\n          //await this.setState({ loadingMCC: b });\r\n        }\r\n        gotHereInInnerLoop = false;\r\n      }\r\n      this.premiumDur = this.bestPremiumDur;\r\n      this.minMultiple = this.bestMinMultiple;\r\n      //await this.getMCCQuoteOutput();\r\n    } else {\r\n      //this.premiumDur = this.bestPremiumDur;\r\n      //this.minMultiple =  this.bestMinMultiple;\r\n      //this.premiumDur = k;\r\n      this.Prem = (1 + this.bestMinMultiple) * this.minPrem;\r\n\r\n      await this.getMCCQuoteOutput();\r\n    }\r\n    let b = !this.state.loadingMCC;\r\n    await this.setState({ loadingMCC: b });\r\n  };\r\n\r\n  solveForOptimumEquiBuild = async (e) => {\r\n    if (e === 1) {\r\n      this.bestPremiumDur = 100;\r\n      let dataFutureINA = this.getDataFutureINA();\r\n      //let dataFutureEstateLiab = this.getDataFutureEstateLiability();\r\n\r\n      this.bestFitEquiBuild = true;\r\n      await this.getMCCQuoteOutput4();\r\n\r\n      let dataFVofPrems = this.getDataFVofPrems(dataFutureINA);\r\n      let SumOfSquresDiff = 0;\r\n      let i;\r\n      for (i = 0; i < this.lifeExp; ++i) {\r\n        let insVal = DISPLAY_INCOME\r\n          ? dataFutureINA[i]\r\n          : this.props.dataEstateLiability[i];\r\n        //console.log(SumOfSquresDiff,dataFVofPrems,insVal)\r\n        SumOfSquresDiff += Math.pow(dataFVofPrems[i] - insVal, 2);\r\n      }\r\n      SumOfSquresDiff = Math.round(SumOfSquresDiff / (1000000 * this.lifeExp));\r\n      //console.log(SumOfSquresDiff)\r\n    } else if (e === 2) {\r\n      this.bestPremiumDur = 100;\r\n      let dataFutureINA = this.getDataFutureINA();\r\n\r\n      this.bestFitEquiBuild = true;\r\n      await this.getMCCQuoteOutputManu();\r\n\r\n      let dataFVofPrems = this.getDataFVofPrems(dataFutureINA);\r\n    }\r\n    // await this.getMCCQuoteOutput();\r\n\r\n    let b = !this.state.loadingMCC;\r\n    await this.setState({ loadingMCC: b });\r\n  };\r\n\r\n  selectMultiButtonINAorTax = (e) => {\r\n    if (e === DISPLAY_TAXLIAB_CLIENT) {\r\n      this.INAEstateOption = DISPLAY_TAXLIAB_CLIENT;\r\n    } else if (e === DISPLAY_TAXLIAB_JLTD) {\r\n      this.INAEstateOption = DISPLAY_TAXLIAB_JLTD;\r\n    }\r\n\r\n    //let dataFutureEstateLiab = this.getDataFutureEstateLiability();\r\n    this.insuranceAmtInitial =\r\n      this.props.INAOption === DISPLAY_INCOME\r\n        ? this.props.insuranceNeed\r\n        : this.props.dataEstateLiability[0];\r\n    //this.insuranceAmtInitial =parseInt(cleanFormat(this.insuranceAmtInitial))*(1 + this.insMultiple / 100);\r\n    this.getMCCQuoteOutput();\r\n\r\n    let b = !this.state.loadingMCC;\r\n    this.setState({ loadingMCC: b });\r\n    this.minPrem = 1;\r\n    //this.setState({ loading: false });\r\n  };\r\n\r\n  getEstateLiabPieCharts = async () => {\r\n    const totalLiabProjections = getProjectedLiabilities(\r\n      this.props.input.dataInput,\r\n      this.props.projectEnd,\r\n      this.props.language\r\n    );\r\n\r\n    // console.log(this.state.estateLiab,this.state.estateLiabLE)\r\n\r\n    let dataNA = setUIDataToAPI(this.props.input, 0);\r\n\r\n    let estateLiab2 = [];\r\n    estateLiab2.push(totalLiabProjections[0]);\r\n    const l1 = await getTaxLiabCategoryTotal(\r\n      this.props.input.dataInput,\r\n      ASSET_TAX.REGISTERED.Key,\r\n      dataNA,\r\n      0\r\n    );\r\n    this.setState({ taxL: l1 });\r\n    estateLiab2.push(l1);\r\n    const l2 = await getTaxLiabCategoryTotal(\r\n      this.props.input.dataInput,\r\n      ASSET_TAX.CAPITAL_GAINS_ANNUAL.Key,\r\n      dataNA,\r\n      0\r\n    );\r\n    const l3 = await getTaxLiabCategoryTotal(\r\n      this.props.input.dataInput,\r\n      ASSET_TAX.CAPITAL_GAINS_DEFERRED.Key,\r\n      dataNA,\r\n      0\r\n    );\r\n    estateLiab2.push(l2 + l3);\r\n    estateLiab2.push(\r\n      await getTaxLiabCategoryTotal(\r\n        this.props.input.dataInput,\r\n        ASSET_TAX.FULLY_TAXABLE.Key,\r\n        dataNA,\r\n        0\r\n      )\r\n    );\r\n    estateLiab2.push(\r\n      await getTaxLiabCategoryTotal(\r\n        this.props.input.dataInput,\r\n        ASSET_TAX.DIVIDEND.Key,\r\n        dataNA,\r\n        0\r\n      )\r\n    );\r\n\r\n    this.setState({ estateLiab: estateLiab2 });\r\n\r\n    let estateLiab3 = [];\r\n    estateLiab3.push(totalLiabProjections[this.lifeExp]);\r\n    estateLiab3.push(\r\n      await getTaxLiabCategoryTotal(\r\n        this.props.input.dataInput,\r\n        ASSET_TAX.REGISTERED.Key,\r\n        dataNA,\r\n        this.lifeExp\r\n      )\r\n    );\r\n    const l2LE = await getTaxLiabCategoryTotal(\r\n      this.props.input.dataInput,\r\n      ASSET_TAX.CAPITAL_GAINS_ANNUAL.Key,\r\n      dataNA,\r\n      this.lifeExp\r\n    );\r\n    const l3LE = await getTaxLiabCategoryTotal(\r\n      this.props.input.dataInput,\r\n      ASSET_TAX.CAPITAL_GAINS_DEFERRED.Key,\r\n      dataNA,\r\n      this.lifeExp\r\n    );\r\n    estateLiab3.push(l2LE + l3LE);\r\n    estateLiab3.push(\r\n      await getTaxLiabCategoryTotal(\r\n        this.props.input.dataInput,\r\n        ASSET_TAX.FULLY_TAXABLE.Key,\r\n        dataNA,\r\n        this.lifeExp\r\n      )\r\n    );\r\n    estateLiab3.push(\r\n      await getTaxLiabCategoryTotal(\r\n        this.props.input.dataInput,\r\n        ASSET_TAX.DIVIDEND.Key,\r\n        dataNA,\r\n        this.lifeExp\r\n      )\r\n    );\r\n    this.setState({ estateLiabLE: estateLiab3 });\r\n\r\n    // console.log(this.state.estateLiab,this.state.estateLiabLE)\r\n    // console.log(estateLiab2,estateLiab3)\r\n  };\r\n\r\n  getDataFutureINA = () => {\r\n    let dataFutureINA = [];\r\n    let i;\r\n    let j;\r\n    var pv;\r\n    var totalLiab = 0;\r\n    var totalLiabProjections = [];\r\n    // project liabs\r\n\r\n    totalLiabProjections = getProjectedLiabilities(\r\n      this.props.input.dataInput,\r\n      this.props.projectEnd,\r\n      this.props.language\r\n    );\r\n\r\n    const currINA = parseFloat(cleanFormat(this.props.insuranceNeed));\r\n    const intRate = parseFloat(\r\n      this.props.input.dataInput.Presentations[0].invRate / 100\r\n    );\r\n    const inflation = parseFloat(\r\n      this.props.input.dataInput.Presentations[0].inflation / 100\r\n    );\r\n    dataFutureINA.push(currINA);\r\n    //console.log(this.props.insuranceNeed)\r\n    for (i = 1; i < this.props.projectEnd; ++i) {\r\n      pv =\r\n        (dataFutureINA[i - 1] - this.props.dataShortfall[i - 1]) *\r\n        (1 + intRate);\r\n      //   console.log(pv)\r\n      dataFutureINA.push(Math.round(Math.max(0, pv)));\r\n    }\r\n    // add liab\r\n    for (i = 1; i < this.props.projectEnd; ++i) {\r\n      dataFutureINA[i] += totalLiabProjections[i];\r\n    }\r\n    return dataFutureINA;\r\n  };\r\n\r\n  /* getDataFutureEstateLiability = () => {\r\n    let i;\r\n    var totalLiabProjections = [];\r\n    \r\n    // project liabs\r\n    totalLiabProjections=getProjectedLiabilities(this.props.input.dataInput, this.props.projectEnd, this.props.language) \r\n\r\n    const currEstateLiability=parseFloat(cleanFormat(this.props.insuranceNeed));\r\n    const intRate=parseFloat(this.props.input.dataInput.Presentations[0].invRate/100);            \r\n    const inflation=parseFloat(this.props.input.dataInput.Presentations[0].inflation/100);\r\n    let dataFutureEstateLiability=[]\r\n    \r\n    for (i = 1; i < this.props.projectEnd; ++i) {\r\n        dataFutureEstateLiability.push(this.props.dataTaxLiability[i]);\r\n    }\r\n    // add liab\r\n    for (i = 1; i < this.props.projectEnd; ++i) {\r\n        dataFutureEstateLiability[i]+=totalLiabProjections[i];\r\n    }\r\n    return dataFutureEstateLiability;\r\n  };\r\n */\r\n\r\n  handleFocus = (event) => {\r\n    event.target.select();\r\n  };\r\n\r\n  getDataFVofPrems = (dataFuture) => {\r\n    let dataFVofPrems = [];\r\n    let i;\r\n    let fv = 0;\r\n\r\n    for (i = 0; i < this.dataPremiums.length; ++i) {\r\n      let shortfall = dataFuture[i] - this.dataDB[i];\r\n      fv = (fv + this.dataPremiums[i]) * 1.0375;\r\n      dataFVofPrems.push(fv + shortfall);\r\n    }\r\n    for (i = this.dataPremiums.length; i < this.props.projectEnd; ++i) {\r\n      let shortfall = dataFuture[i] - this.dataDB[i];\r\n      fv = fv * 1.0375;\r\n      dataFVofPrems.push(fv + shortfall);\r\n    }\r\n\r\n    return dataFVofPrems;\r\n  };\r\n\r\n  render() {\r\n    let dtaAgesAll = [];\r\n    let k;\r\n    let lifeExp = this.props.lifeExp;\r\n    let age = this.props.input.dataInput.Clients[1].Age;\r\n\r\n    if (this.INAEstateOption === DISPLAY_TAXLIAB_CLIENT) {\r\n      lifeExp = this.props.lifeExpClient;\r\n      age = this.props.input.dataInput.Clients[0].Age;\r\n    } else if (this.INAEstateOption === DISPLAY_TAXLIAB_JLTD) {\r\n      lifeExp = this.props.lifeExpJLTD;\r\n      if (age > this.props.input.dataInput.Clients[1].Age)\r\n        age = this.props.input.dataInput.Clients[1].Age;\r\n    }\r\n\r\n    for (k = 0; k < lifeExp + 3; ++k) {\r\n      dtaAgesAll.push(age + k);\r\n    }\r\n\r\n    //if (this.props.INAOption !== DISPLAY_INCOME) {\r\n    var dataFutureINA = this.getDataFutureINA();\r\n    const dataShortfallFV = {\r\n      labels: dtaAgesAll, // this.dataAges,\r\n      datasets: [\r\n        {\r\n          label:\r\n            this.props.language === \"en\"\r\n              ? \"Future insurance needs\"\r\n              : \"Besoins d’assurance futurs\", //Income Shortfall',\r\n          data: dataFutureINA,\r\n\r\n          fill: true, // Don't fill area under the line\r\n          borderColor: \"darkred\", // Line color\r\n          backgroundColor: \"rgba(244, 144, 128, 0.8)\",\r\n        },\r\n      ],\r\n    };\r\n    //} else {\r\n    let dataTaxLiabLifeExp = [];\r\n    let dataTaxLiab = []; // this.props.dataEstateLiability;\r\n\r\n    for (k = 0; k < lifeExp + 3; ++k) {\r\n      dataTaxLiabLifeExp.push(0);\r\n      dataTaxLiab.push(this.props.dataEstateLiability[k]);\r\n    }\r\n    dataTaxLiabLifeExp[lifeExp] = dataTaxLiab[lifeExp];\r\n    dataTaxLiab[lifeExp] = 0;\r\n\r\n    // console.log(this.INAEstateOption, age, dtaAgesAll, lifeExp);\r\n    const dataTaxLiability = {\r\n      labels: dtaAgesAll,\r\n      datasets: [\r\n        {\r\n          label:\r\n            this.props.language === \"en\"\r\n              ? \"Future insurance Needs\"\r\n              : \"Future insurance Needs ^F\", //Income Shortfall',\r\n          //type: \"line\",\r\n          data: dataTaxLiab,\r\n\r\n          fill: true, // Don't fill area under the line\r\n          borderColor: \"darkGrey\", // Line color\r\n          backgroundColor: \"#607d8b\",\r\n        },\r\n        {\r\n          label:\r\n            this.props.language === \"en\"\r\n              ? \"Life Expectancy \"\r\n              : \"Espérance de vie\", //Income Shortfall',\r\n          //type: \"line\",\r\n          data: dataTaxLiabLifeExp,\r\n          fill: true, // Don't fill area under the line\r\n          borderColor: \"#6AAd8b\",\r\n          backgroundColor: \"rgb(106,173,139,.5)\", // \"rgba(96, 125, 139, .7)\"\r\n        },\r\n      ],\r\n    };\r\n\r\n    const dataPieAssets = {\r\n      labels: [\r\n        \"Cash/TFSA/Insurance\",\r\n        \"RRSP/RRIF\",\r\n        \"Public/Private shares\",\r\n        \"Real Estate\",\r\n        \"Other\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          data: [\r\n            getAssetsCategoryTotal(\r\n              this.props.input.dataInput,\r\n              ASSETS.CASH.Key\r\n            ) +\r\n              getAssetsCategoryTotal(\r\n                this.props.input.dataInput,\r\n                ASSETS.LIFE_INSURANCE.Key\r\n              ) +\r\n              getAssetsCategoryTotal(\r\n                this.props.input.dataInput,\r\n                ASSETS.CHARITABLE_GIFTS_TAX_CREDIT.Key\r\n              ),\r\n            getAssetsCategoryTotal(\r\n              this.props.input.dataInput,\r\n              ASSETS.RRSP_RRIF.Key\r\n            ),\r\n            getAssetsCategoryTotal(\r\n              this.props.input.dataInput,\r\n              ASSETS.SMALL_BUSINESS_SHARES.Key\r\n            ) +\r\n              getAssetsCategoryTotal(\r\n                this.props.input.dataInput,\r\n                ASSETS.STOCKS_BONDS.Key\r\n              ),\r\n            getAssetsCategoryTotal(\r\n              this.props.input.dataInput,\r\n              ASSETS.REAL_ESTATE.Key\r\n            ) +\r\n              getAssetsCategoryTotal(\r\n                this.props.input.dataInput,\r\n                ASSETS.PERSONAL_RESIDENCE.Key\r\n              ),\r\n            getAssetsCategoryTotal(\r\n              this.props.input.dataInput,\r\n              ASSETS.OTHER_ASSETS.Key\r\n            ),\r\n          ],\r\n          backgroundColor: [\r\n            \"#F7464A\",\r\n            \"#46BFBD\",\r\n            \"#FDB45C\",\r\n            \"#949FB1\",\r\n            \"#4D5360\",\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n    const dataPieTax = {\r\n      labels: [\r\n        \"Non-Taxable\",\r\n        \"RRSP/RRIF\",\r\n        \"Capital Gains\",\r\n        \"Taxed As Income\",\r\n        \"Dividend\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          data: [\r\n            getAssetsTaxCategoryTotal(\r\n              this.props.input.dataInput,\r\n              ASSET_TAX.NON_TAXABLE.Key\r\n            ),\r\n            getAssetsTaxCategoryTotal(\r\n              this.props.input.dataInput,\r\n              ASSET_TAX.REGISTERED.Key\r\n            ),\r\n            getAssetsTaxCategoryTotal(\r\n              this.props.input.dataInput,\r\n              ASSET_TAX.CAPITAL_GAINS_ANNUAL.Key\r\n            ) +\r\n              getAssetsTaxCategoryTotal(\r\n                this.props.input.dataInput,\r\n                ASSET_TAX.CAPITAL_GAINS_DEFERRED.Key\r\n              ),\r\n            getAssetsTaxCategoryTotal(\r\n              this.props.input.dataInput,\r\n              ASSET_TAX.FULLY_TAXABLE.Key\r\n            ),\r\n            getAssetsTaxCategoryTotal(\r\n              this.props.input.dataInput,\r\n              ASSET_TAX.DIVIDEND.Key\r\n            ),\r\n          ],\r\n          backgroundColor: [\r\n            \"#F7464A\",\r\n            \"#46BFBD\",\r\n            \"#FDB45C\",\r\n            \"#949FB1\",\r\n            \"#4D5360\",\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n    const dataPieLiabs = {\r\n      labels: [\"Loans\", \"Taxes\", \"Emergency Fund\", \"Other\"],\r\n      datasets: [\r\n        {\r\n          data: [\r\n            getLiabsCategoryTotal(\r\n              this.props.input.dataInput,\r\n              LIABILITIES.OUTSTANDING_LOANS.Key\r\n            ) +\r\n              getLiabsCategoryTotal(\r\n                this.props.input.dataInput,\r\n                LIABILITIES.MORTGAGE_REDEMPTION.Key\r\n              ) +\r\n              getLiabsCategoryTotal(\r\n                this.props.input.dataInput,\r\n                LIABILITIES.CREDIT_CARDS.Key\r\n              ) +\r\n              getLiabsCategoryTotal(\r\n                this.props.input.dataInput,\r\n                LIABILITIES.CLIENT_TAX_LIABILITY.Key\r\n              ),\r\n            getLiabsCategoryTotal(\r\n              this.props.input.dataInput,\r\n              LIABILITIES.INCOME_TAXES.Key\r\n            ),\r\n            getLiabsCategoryTotal(\r\n              this.props.input.dataInput,\r\n              LIABILITIES.EMERGENCY_FUND.Key\r\n            ),\r\n            getLiabsCategoryTotal(\r\n              this.props.input.dataInput,\r\n              LIABILITIES.OTHER.Key\r\n            ) +\r\n              getLiabsCategoryTotal(\r\n                this.props.input.dataInput,\r\n                LIABILITIES.CHILD_HOME_CARE.Key\r\n              ),\r\n          ],\r\n          backgroundColor: [\"#F7464A\", \"#46BFBD\", \"#FDB45C\", \"#949FB1\"],\r\n        },\r\n      ],\r\n    };\r\n    const dataPieLiabsAtDeath = {\r\n      labels: [\r\n        \"Last Expenses\",\r\n        \"Legal and Executor Fees\",\r\n        \"Future Commitments\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          data: [\r\n            getLiabsCategoryTotal(\r\n              this.props.input.dataInput,\r\n              LIABILITIES.LAST_EXPENSES.Key\r\n            ),\r\n            getLiabsCategoryTotal(\r\n              this.props.input.dataInput,\r\n              LIABILITIES.LEGAL_AND_EXECUTOR_FEES.Key\r\n            ),\r\n            getLiabsCategoryTotal(\r\n              this.props.input.dataInput,\r\n              LIABILITIES.LEGACY_FOR_CHILDREN.Key\r\n            ) +\r\n              getLiabsCategoryTotal(\r\n                this.props.input.dataInput,\r\n                LIABILITIES.CHARITABLE_GIFTS.Key\r\n              ),\r\n          ],\r\n          backgroundColor: [\"#F7464A\", \"#46BFBD\", \"#FDB45C\"],\r\n        },\r\n      ],\r\n    };\r\n\r\n    //options\r\n    var optionsPie = {\r\n      responsive: true,\r\n      title: {\r\n        display: true,\r\n        position: \"top\",\r\n        text: \"Assets Breakdown Today\",\r\n        fontSize: 14, //8,\r\n        fontColor: \"#111\",\r\n      },\r\n      legend: {\r\n        display: true,\r\n        position: \"right\",\r\n        labels: {\r\n          fontColor: \"#333\",\r\n          fontSize: 12, //16\r\n        },\r\n      },\r\n    };\r\n\r\n    let optionsPieTax = JSON.parse(JSON.stringify(optionsPie));\r\n    optionsPieTax.title.text = \"Tax Treatment of Assets\";\r\n\r\n    let optionsPieLiabsAtDeath = JSON.parse(JSON.stringify(optionsPie));\r\n    optionsPieLiabsAtDeath.title.text = \"Liabilities At Death\";\r\n\r\n    let optionsPieLiabs = JSON.parse(JSON.stringify(optionsPie));\r\n    optionsPieLiabs.title.text = \"Liabilities Breakdown\";\r\n\r\n    const dataPieEstateLiabNow = {\r\n      labels: [\r\n        \"Liabilities\",\r\n        \"Taxes: RRSP/RRIF\",\r\n        \"Taxes: Capital Gains\",\r\n        \"Taxes: As Income\",\r\n        \"Taxes: Dividend\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          data: this.state.estateLiab,\r\n          backgroundColor: [\r\n            \"#F7464A\",\r\n            \"#46BFBD\",\r\n            \"#FDB45C\",\r\n            \"#949FB1\",\r\n            \"#4D5360\",\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n    const dataPieEstateLiabLE = {\r\n      labels: [\r\n        \"Liabilities\",\r\n        \"Taxes: RRSP/RRIF\",\r\n        \"Taxes: Capital Gains\",\r\n        \"Taxes: As Income\",\r\n        \"Taxes: Dividend\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          data: this.state.estateLiabLE,\r\n          backgroundColor: [\r\n            \"#F7464A\",\r\n            \"#46BFBD\",\r\n            \"#FDB45C\",\r\n            \"#949FB1\",\r\n            \"#4D5360\",\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n    let optionsPieEstateLiab = JSON.parse(JSON.stringify(optionsPie));\r\n    optionsPieEstateLiab.title.text = \"Estate Liability Today\";\r\n\r\n    let optionsPieEstateLiabLE = JSON.parse(JSON.stringify(optionsPie));\r\n    optionsPieEstateLiabLE.title.text =\r\n      \"Estate Liability at Life Expectancy +3\";\r\n\r\n    /* var ctx = document.getElementById('myChart3');\r\n\r\n    var myChart3=new Chart(ctx, {\r\n      type: \"bar\", // override the default type\r\n\r\n      data: {\r\n        labels: dtaAgesAll,\r\n        datasets: [\r\n          {\r\n            label:\r\n              this.props.language === \"en\"\r\n                ? \"Life Expectancy\"\r\n                : \"Life Expectancy ^F\", //Income Shortfall',\r\n            data: dataTaxLiabLifeExp,\r\n            borderColor: \"#6AAd8b\",\r\n            backgroundColor: \"rgb(106,173,139,.5)\"\r\n          },\r\n          {\r\n            type: \"line\", // set the default type\r\n            label:\r\n              this.props.language === \"en\"\r\n                ? \"Future insurance Needs\"\r\n                : \"Future insurance Needs ^F\", //Income Shortfall',\r\n            //type: \"line\",\r\n            data: this.props.dataEstateLiability,\r\n            fill: true, // Don't fill area under the line\r\n            borderColor: \"darkGrey\", // Line color\r\n            backgroundColor: \"#607d8b\"\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        //Customize chart options\r\n      }\r\n    });\r\n */\r\n\r\n    //this.taxLiabChartRef = this.chartRef.current.getContext(\"2d\");\r\n    /* new Chart(this.taxLiabChartRef, {\r\n      type: \"bar\", // override the default type\r\n\r\n      data: {\r\n        labels: dtaAgesAll,\r\n        datasets: [\r\n          {\r\n            label:\r\n              this.props.language === \"en\"\r\n                ? \"Life Expectancy\"\r\n                : \"Life Expectancy ^F\", //Income Shortfall',\r\n            data: dataTaxLiabLifeExp,\r\n            borderColor: \"#6AAd8b\",\r\n            backgroundColor: \"rgb(106,173,139,.5)\"\r\n          },\r\n          {\r\n            type: \"line\", // set the default type\r\n            label:\r\n              this.props.language === \"en\"\r\n                ? \"Future insurance Needs\"\r\n                : \"Future insurance Needs ^F\", //Income Shortfall',\r\n            //type: \"line\",\r\n            data: this.props.dataEstateLiability,\r\n            fill: true, // Don't fill area under the line\r\n            borderColor: \"darkGrey\", // Line color\r\n            backgroundColor: \"#607d8b\"\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        //Customize chart options\r\n      }\r\n    }); */\r\n\r\n    // FV of prems\r\n    let dataFVofPrems = this.getDataFVofPrems(dataFutureINA);\r\n\r\n    // console.log(this.props.dataEstateLiability);\r\n\r\n    const dataMCCpremFV = {\r\n      labels: dtaAgesAll, // this.dataAges,\r\n      datasets: [\r\n        {\r\n          label:\r\n            this.props.language === \"en\"\r\n              ? \"Future Value of premiums paid      vs \"\r\n              : \"EquiBuild quote ^F\", //Income Shortfall',\r\n          data: dataFVofPrems,\r\n          fill: true,\r\n          borderColor: \"darkgreen\", // Line color\r\n          backgroundColor: \"rgba(144, 244, 88, .2)\",\r\n        },\r\n        {\r\n          label:\r\n            this.props.language === \"en\"\r\n              ? \"Raise cash to pay for shortfall \"\r\n              : \"Future insurance needs ^F\", //Income Shortfall',\r\n          data:\r\n            this.props.INAOption === DISPLAY_INCOME\r\n              ? dataFutureINA\r\n              : this.props.dataEstateLiability,\r\n          //[10964, 13734, 14008, 14288, 14574, 14866, 15163, 15466, 15776, 16091, 16413, 16741, 17076, 17417, 17766, 18121, 18484, 18853, 19230, 19615, 20007, 20407, 20815, 21232, 21656, 22090, 27632, 28184, 28748, 29323, 29910, 30508, 31118, 31740, 32375, 33023, 33683, 34357, 35044, 35745, 36460, 37189, 37933, 38691, 39465, 40254],\r\n          fill: true, // Don't fill area under the line\r\n          borderColor:\r\n            this.props.INAOption === DISPLAY_INCOME ? \"darkred\" : \"darkGrey\",\r\n          backgroundColor:\r\n            this.props.INAOption === DISPLAY_INCOME\r\n              ? \"rgba(244, 144, 128, 0.9)\"\r\n              : \"#607D8B\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    let SumOfSquresDiff = 0;\r\n    let i;\r\n    for (i = 0; i < this.lifeExp; ++i) {\r\n      let insVal = DISPLAY_INCOME\r\n        ? dataFutureINA[i]\r\n        : this.props.dataEstateLiability[i];\r\n      //console.log(SumOfSquresDiff,dataFVofPrems,insVal)\r\n      SumOfSquresDiff += Math.pow(dataFVofPrems[i] - insVal, 2);\r\n    }\r\n    SumOfSquresDiff = numFormat(\r\n      Math.round(SumOfSquresDiff / (1000000 * this.lifeExp)),\r\n      false,\r\n      5,\r\n      \",\"\r\n    );\r\n\r\n    const dataMCCQuoteDB = {\r\n      labels: dtaAgesAll, // this.dataAges,\r\n      datasets: [\r\n        {\r\n          label:\r\n            this.props.language === \"en\"\r\n              ? \"EquiBuild quote\"\r\n              : \"EquiBuild quote ^F\", //Income Shortfall',\r\n          data: this.dataDB,\r\n          fill: true,\r\n          borderColor: \"darkblue\", // Line color\r\n          backgroundColor: \"rgba(144, 144, 188, .3)\",\r\n        },\r\n        {\r\n          label:\r\n            this.props.language === \"en\"\r\n              ? \"Future insurance needs\"\r\n              : \"Future insurance needs ^F\", //Income Shortfall',\r\n          data:\r\n            this.props.INAOption === DISPLAY_INCOME\r\n              ? dataFutureINA\r\n              : this.props.dataEstateLiability,\r\n          //[10964, 13734, 14008, 14288, 14574, 14866, 15163, 15466, 15776, 16091, 16413, 16741, 17076, 17417, 17766, 18121, 18484, 18853, 19230, 19615, 20007, 20407, 20815, 21232, 21656, 22090, 27632, 28184, 28748, 29323, 29910, 30508, 31118, 31740, 32375, 33023, 33683, 34357, 35044, 35745, 36460, 37189, 37933, 38691, 39465, 40254],\r\n          fill: true, // Don't fill area under the line\r\n          borderColor:\r\n            this.props.INAOption === DISPLAY_INCOME ? \"darkred\" : \"darkGrey\",\r\n          backgroundColor:\r\n            this.props.INAOption === DISPLAY_INCOME\r\n              ? \"rgba(244, 144, 128, 0.9)\"\r\n              : \"#607D8B\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    const optionsFV = {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            stacked: true,\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            stacked: false,\r\n            ticks: {\r\n              beginAtZero: true,\r\n              steps: 10,\r\n              stepValue: 5,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    //let colHeaders=[\"Year\", \"Survivor's Age\", \"Insurance Need\", \"Propsed Plan Death Benefit\", \"Future Value of Premiums\", \"Net Advantage of Insurance\" ];\r\n    let colHeaders = [\r\n      \"Survivor's Age\",\r\n      \"Insurance Need\",\r\n      \"Premiums\",\r\n      \"Propsed Plan Death Benefit\",\r\n      \"Future Value of Premiums\",\r\n    ];\r\n    let dataProjection = [];\r\n    dataProjection.push(this.dataAges);\r\n    dataProjection.push(\r\n      this.props.INAOption === DISPLAY_INCOME\r\n        ? dataFutureINA\r\n        : this.props.dataEstateLiability\r\n    );\r\n    dataProjection.push(this.dataPremiums);\r\n    dataProjection.push(this.dataDB);\r\n    dataProjection.push(dataFVofPrems);\r\n\r\n    let dataProjectionCV = [];\r\n    dataProjectionCV.push(this.dataAges);\r\n    dataProjectionCV.push(this.dataSVEquiBuild);\r\n    dataProjectionCV.push(this.dataSVManulife);\r\n\r\n    let needToE =\r\n      \"Insurance Needs Projections from today to life expectancy plus 3 years (\" +\r\n      lifeExp +\r\n      \" + 3)\";\r\n    let needToF =\r\n      \"Insurance Needs to life expectancy (\" +\r\n      lifeExp +\r\n      \" years) plus 3 years^F\";\r\n    let needTo = this.props.language === \"en\" ? needToE : needToF;\r\n    // needTo += +this.props.projectEnd + \")\";\r\n\r\n    //console.log(this.state.loadingMCC);\r\n    return (\r\n      <div style={{ color: \"darkBlue\", marginTop: \"15px\" }}>\r\n        {this.props.INAOption !== DISPLAY_INCOME && (\r\n          <MultiButtons\r\n            noButtons={2}\r\n            buttonCaption={[\"Estate of Client\", \"Estate of Couple\"]}\r\n            selectMultiButton={this.selectMultiButtonINAorTax}\r\n          />\r\n        )}\r\n\r\n        <div style={{ width: \"90%\" }}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <h3 className=\"ppi1\">\r\n              {this.props.INAOption === DISPLAY_INCOME ? (\r\n                \"Your current financial situation is summerized below:\" //this.props.insuranceNeed\r\n              ) : (\r\n                <div>\r\n                  <br />\r\n                  <br />\r\n                  Estate Liability breakdown Today and at Life Expectancy plus 3\r\n                  years: <br />\r\n                </div>\r\n              )}\r\n              {/*numFormat(this.props.dataTaxLiability[0], false, 2, \",\")}*/}\r\n            </h3>\r\n            <div style={{ width: \"100%\" }}>\r\n              {this.props.INAOption === DISPLAY_INCOME ? (\r\n                <div>\r\n                  <article\r\n                    className=\"canvas-container\"\r\n                    style={{ height: \"450px\" }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        overflow: \"hidden\",\r\n                        float: \"left\",\r\n                        width: \"50%\",\r\n                        height: \"400px\",\r\n                      }}\r\n                    >\r\n                      <Pie data={dataPieAssets} options={optionsPie} />\r\n                    </div>\r\n                    <div\r\n                      style={{ float: \"left\", width: \"50%\", height: \"400px\" }}\r\n                    >\r\n                      <Pie data={dataPieTax} options={optionsPieTax} />\r\n                    </div>\r\n                  </article>\r\n                  <article\r\n                    className=\"canvas-container\"\r\n                    style={{ height: \"450px\" }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        overflow: \"hidden\",\r\n                        float: \"left\",\r\n                        width: \"50%\",\r\n                        height: \"400px\",\r\n                      }}\r\n                    >\r\n                      <Pie data={dataPieLiabs} options={optionsPieLiabs} />\r\n                    </div>\r\n                    <div\r\n                      style={{ float: \"left\", width: \"50%\", height: \"400px\" }}\r\n                    >\r\n                      <Pie\r\n                        data={dataPieLiabsAtDeath}\r\n                        options={optionsPieLiabsAtDeath}\r\n                      />\r\n                    </div>\r\n                  </article>\r\n                </div>\r\n              ) : (\r\n                <article\r\n                  className=\"canvas-container\"\r\n                  style={{ height: \"450px\" }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      overflow: \"hidden\",\r\n                      float: \"left\",\r\n                      width: \"50%\",\r\n                      height: \"400px\",\r\n                    }}\r\n                  >\r\n                    <Pie\r\n                      data={dataPieEstateLiabNow}\r\n                      options={optionsPieEstateLiab}\r\n                    />\r\n                  </div>\r\n                  <div style={{ float: \"left\", width: \"50%\", height: \"400px\" }}>\r\n                    <Pie\r\n                      data={dataPieEstateLiabLE}\r\n                      options={optionsPieEstateLiabLE}\r\n                    />\r\n                  </div>\r\n                </article>\r\n              )}\r\n            </div>\r\n            <br />\r\n            <h3 className=\"ppi1\">\r\n              {this.props.INAOption === DISPLAY_INCOME ? (\r\n                <div>\r\n                  \"Net Worth Today:\"\r\n                  <br /> \"Assets:\"\r\n                  <br /> \"Liabilities:\"\r\n                </div> //this.props.insuranceNeed\r\n              ) : (\r\n                <br />\r\n              )}\r\n              {/*numFormat(this.props.dataTaxLiability[0], false, 2, \",\")}*/}\r\n            </h3>\r\n            <h3 className=\"ppi1\">\r\n              {needTo} {/*:{\" \"}*/}\r\n              {this.props.INAOption === DISPLAY_INCOME\r\n                ? \"\" //this.props.insuranceNeed\r\n                : \"\"}\r\n              {/*numFormat(this.props.dataTaxLiability[0], false, 2, \",\")}*/}\r\n            </h3>\r\n            {this.props.INAOption === DISPLAY_INCOME ? (\r\n              <article className=\"canvas-container\" style={{ height: \"200px\" }}>\r\n                <Line data={dataShortfallFV} options={optionsFV} />\r\n              </article>\r\n            ) : (\r\n              <article className=\"canvas-container\" style={{ height: \"200px\" }}>\r\n                <Bar data={dataTaxLiability} options={optionsFV} />\r\n              </article>\r\n            )}\r\n            {/*  {this.props.INAOption !== DISPLAY_INCOME &&\r\n             <div>\r\n              <canvas id=\"myChart\" ref={this.chartRef} />\r\n            </div>}\r\n             */}\r\n            <br /> <br /> <br /> <br />\r\n            <hr />\r\n            <h2>Insurance Quote:</h2>\r\n            <div style={{ width: \"100%\", float: \"left\", clear: \"left\" }}>\r\n              <MultiButtons\r\n                noButtons={1}\r\n                buttonCaption={[\"Optimize\"]}\r\n                selectMultiButton={this.solveForOptimumQuote}\r\n              />\r\n            </div>\r\n            <div style={{ width: \"100%\", float: \"left\", clear: \"left\" }}>\r\n              <MultiButtons\r\n                noButtons={2}\r\n                buttonCaption={[\"Best EquiBuild fit\", \"Manulife UL fit\"]}\r\n                selectMultiButton={this.solveForOptimumEquiBuild}\r\n              />\r\n            </div>\r\n            <InputField\r\n              inputName=\"Insurance Amtount\"\r\n              id={4}\r\n              format={2}\r\n              Count={1}\r\n              language={this.props.language}\r\n              inputValue={\r\n                this.props.INAOption === DISPLAY_INCOME\r\n                  ? this.props.insuranceNeed\r\n                  : this.props.dataEstateLiability[0]\r\n              }\r\n              maxValue={1000}\r\n              handleUpdateInput={this.selectMultiButton}\r\n            />\r\n            <InputField\r\n              inputName=\"No. of deposits\"\r\n              id={1}\r\n              format={1}\r\n              Count={1}\r\n              language={this.props.language}\r\n              inputValue={this.premiumDur}\r\n              handleUpdateInput={this.selectMultiButton}\r\n            />\r\n            <InputField\r\n              inputName=\"Over min. deposit\"\r\n              id={2}\r\n              format={3}\r\n              Count={1}\r\n              maxValue={300}\r\n              language={this.props.language}\r\n              inputValue={this.minMultiple}\r\n              handleUpdateInput={this.selectMultiButton}\r\n            />\r\n            <h3 style={{ marginTop: \"20px\", marginLeft: \"20px\" }}>\r\n              Minimize this measure of goodness of fit: {SumOfSquresDiff}{\" \"}\r\n              <span style={{ leftPadding: \"20px\" }}>\r\n                {\" \"}\r\n                Premium duration: {this.bestPremiumDur}\r\n              </span>{\" \"}\r\n            </h3>\r\n            <article className=\"canvas-container\" style={{ height: \"200px\" }}>\r\n              <Line data={dataMCCQuoteDB} options={optionsFV} />\r\n            </article>\r\n            <br /> <br /> <br /> <br />\r\n            <br /> <br /> <br /> <br />\r\n            <hr />\r\n            <h2>Compare Options</h2>\r\n            <article className=\"canvas-container\" style={{ height: \"200px\" }}>\r\n              <Line data={dataMCCpremFV} options={optionsFV} />\r\n            </article>\r\n            <p />\r\n            <br />\r\n            <p />\r\n            <br />\r\n            <hr />\r\n            <div style={{ width: \"60%\" }}>\r\n              <DataTable\r\n                dataColTitles={colHeaders}\r\n                dataProjection={dataProjection}\r\n                gridTitle={\"Compare Options\"}\r\n                language={this.props.language}\r\n              />\r\n            </div>\r\n            <br />\r\n            {this.dataSVManulife.length > 0 && this.dataSVEquiBuild.length > 0 && (\r\n              <div style={{ width: \"60%\" }}>\r\n                <DataTable\r\n                  dataColTitles={[\r\n                    \"Age\",\r\n                    \"EquiBuild Surrnder Value\",\r\n                    \"ManuLife UL Surrnder Value\",\r\n                  ]}\r\n                  dataProjection={dataProjectionCV}\r\n                  gridTitle={\r\n                    \"Compare Surrender Values: EquiBuild vs Manulife UL\"\r\n                  }\r\n                  language={this.props.language}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactExport from \"react-data-export\";\r\nimport { cleanFormat } from \"../../utils/helper\";\r\nimport { APPLET_INA,\r\n  APPLET_EP\r\n} from \"../../definitions/generalDefinitions\";\r\n\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n\r\nexport default class DownloadExcel extends React.Component {\r\n  render() {\r\n    // see https://github.com/securedeveloper/react-data-export for formatting\r\n    const styleCell = { alignment: { horizontal: \"right\" } ,font: {name: \"Trebuchet MS\"} , numFmt: \"##,##0\" };\r\n    const styleCellCol1 = { alignment: { horizontal: \"right\" } ,font: {name: \"Trebuchet MS\"} , numFmt: \"0\" };\r\n    const styleCellAlt = { alignment: { horizontal: \"right\" } ,font: {name: \"Trebuchet MS\"}, fill: { patternType: \"solid\", fgColor: { rgb: \"E9EAEB\" }}, numFmt: \"##,##0\" };\r\n    const styleCellAltCol1 = { alignment: { horizontal: \"right\" } ,font: {name: \"Trebuchet MS\"}, fill: { patternType: \"solid\", fgColor: { rgb: \"E9EAEB\" }}, numFmt: \"0\" };\r\n    const styleTitleRowInfo = {\r\n      font: {name: \"Trebuchet MS\", color: { rgb: \"FFFFFF\" }, bold: true},\r\n      alignment: { wrapText: true,horizontal: \"center\" },\r\n      border: {\r\n        top: { style: \"thin\", color: { rgb: \"C0C0C0\" } },\r\n        bottom: { style: \"thin\", color: { rgb: \"C0C0C0\" } },\r\n        right: { style: \"thin\", color: { rgb: \"C0C0C0\" } },\r\n        left: { style: \"thin\", color: { rgb: \"C0C0C0\" } }\r\n      },\r\n      fill: { patternType: \"solid\", fgColor: { rgb: \"7399c6\" } }\r\n    };\r\n    const styleCellLeftAllign = { alignment: { horizontal: \"left\" },font: {name: \"Trebuchet MS\"}};\r\n    const styleTitleRow = {\r\n      font: {name: \"Trebuchet MS\", color: { rgb: \"FFFFFF\" }, bold: true},\r\n      alignment: {wrapText: true , horizontal: \"center\" },\r\n      border: {\r\n        top: { style: \"thin\", color: { rgb: \"C0C0C0\" } },\r\n        bottom: { style: \"thin\", color: { rgb: \"C0C0C0\" } },\r\n        right: { style: \"thin\", color: { rgb: \"C0C0C0\" } },\r\n        left: { style: \"thin\", color: { rgb: \"C0C0C0\" } }\r\n      },\r\n      fill: { patternType: \"solid\", fgColor: { rgb: \"334D7C\" } }\r\n     \r\n    };\r\n\r\n    let excelColumnsDataInfoSection = [];\r\n    let title = [];\r\n    let dataBodyTitles = []\r\n    let dataBody = [];\r\n    let dataRow = [];\r\n    let j;\r\n    let i;\r\n    let dataCell;\r\n\r\n    // console.log(this.props.excelColumnsDataInfoSection);\r\n\r\n    // section 1 title and header data\r\n    dataRow = [];\r\n    const lang = this.props.language;\r\n    \r\n    // always name and its value: length 2\r\n\r\n    if (this.props.excelColumnsDataInfoSection !== undefined) {\r\n      for (j = 0; j < this.props.excelColumnsDataInfoSection.length; ++j) {\r\n        for (i = 0; i < this.props.excelColumnsDataInfoSection[0].length; ++i) {\r\n           dataCell =\r\n            this.props.excelColumnsDataInfoSection[j][i] === undefined\r\n              ? \"\"\r\n              : (this.props.excelColumnsDataInfoSection[j][i].toString().indexOf(\"%\")>=0 || isNaN(this.props.excelColumnsDataInfoSection[j][i].toString())===true  || this.props.excelColumnsDataInfoSection[j][i].toString()===\"\" ?\r\n              this.props.excelColumnsDataInfoSection[j][i].toString():\r\n                parseFloat(cleanFormat(this.props.excelColumnsDataInfoSection[j][i]),lang));\r\n          dataRow.push({\r\n            value: dataCell,\r\n            style: j === 0 ? styleTitleRowInfo : styleCell\r\n          });\r\n        }\r\n        excelColumnsDataInfoSection.push(dataRow);\r\n        dataRow = [];\r\n      }\r\n    }\r\n\r\n    // section 2 column headers and data\r\n    // add column titles as first data row to be able to style with another stupid libaray\r\n    // empty titles\r\n\r\n    if (this.props.excelColumnsHeaders !== undefined) {\r\n\r\n      title.push([{ value: this.props.title, style: {font: {sz: \"14\", name: \"Trebuchet MS\", bold: true}}}]);\r\n      \r\n      for (j = 0; j < this.props.excelColumnsHeaders.length; ++j) {\r\n        dataBodyTitles.push({ title: \"\", width: { wpx: this.props.width }, font: {name: \"Trebuchet MS\", bold: true}} );\r\n      }\r\n\r\n      for (j = 0; j < this.props.excelColumnsHeaders.length; ++j) {\r\n        \r\n        dataRow.push({ value: this.props.excelColumnsHeaders[j], style: styleTitleRow });\r\n      }\r\n      dataBody.push(dataRow);\r\n    }\r\n\r\n    dataRow = [];\r\n    if (this.props.excelColumnsDataMain !== undefined) {\r\n      for (i = 0; i < this.props.excelColumnsDataMain[0].length; ++i) {\r\n        for (j = 0; j < this.props.excelColumnsHeaders.length; ++j) {\r\n          dataCell =\r\n            this.props.excelColumnsDataMain[j][i] === undefined\r\n              ? \"\"\r\n              :(this.props.excelColumnsDataMain[j][i].toString().indexOf(\"%\")>=0 || isNaN(this.props.excelColumnsDataMain[j][i].toString())===true  || this.props.excelColumnsDataMain[j][i].toString()===\"\" ?\r\n              this.props.excelColumnsDataMain[j][i].toString():\r\n                parseFloat(cleanFormat(this.props.excelColumnsDataMain[j][i]),lang));\r\n\r\n          dataRow.push({\r\n            value: dataCell,\r\n            style: isNaN(parseFloat(cleanFormat(dataCell,lang)))\r\n              ? styleCellLeftAllign\r\n              : (i%2?(j===0?styleCellAltCol1:styleCellAlt):(j===0?styleCellCol1:styleCell))\r\n          });\r\n        }\r\n        dataBody.push(dataRow);\r\n        dataRow = [];\r\n      }\r\n    }\r\n    const multiDataSet = [\r\n      // section 1 title\r\n      {\r\n        columns: [],\r\n        data: title\r\n      },\r\n      // section 1 key values\r\n      {\r\n        columns: [],\r\n        data: excelColumnsDataInfoSection\r\n      },\r\n\r\n      // section 2\r\n      {\r\n        xSteps: 0,\r\n        ySteps: 1,\r\n        columns: dataBodyTitles,\r\n        data: dataBody\r\n      }\r\n    ];\r\n    var tempDate = new Date();\r\n    var date = tempDate.getDate()+ tempDate.toLocaleString('en-us', { month: 'short' })  + tempDate.getFullYear()\r\n\r\n    if (this.props.downloadNow === 0) return \"\";\r\n    else\r\n      return (\r\n        <ExcelFile hideElement={true} filename= {(APPLET_INA?\"INA\":\"PYE\") + \"_Data_\" + date}>\r\n          <ExcelSheet dataSet={multiDataSet} name={APPLET_INA?\"INAd\":\"PYE\" }/>\r\n        </ExcelFile>\r\n      );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n//import { ReactComponent as Icon} from './icon.svg';\r\nimport \"./ExcelToolbar.css\";\r\n\r\nconst defaultToolbarStyles = {\r\n    iconButton: {\r\n    },\r\n};\r\n\r\nexport default class ExcelToolbar extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.setExcel();\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        // console.log(\"classes\", classes)\r\n        const title=<span  style={{fontSize: '12px', marginBottom: '0px', margin: '0px', padding: '0px' }}  >{this.props.excelToolbarText}</span>\r\n        return (\r\n            <React.Fragment>\r\n                <Tooltip placement='left-end' style={{fontSize: '12px', margin: '0px', padding: '0px' }}   title={title}>\r\n                    <IconButton  onClick={this.handleClick}>\r\n                        <svg className=\"icon\" xmlns=\"http://www.w3.org/2000/svg\"   padding= '0px' width=\"30\" height=\"30\"  viewBox=\"0 0 24 24\"><path d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM17 13l-5 5-5-5h3V9h4v4h3z\"/></svg>\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n","import React from \"react\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {\r\n  Typography,\r\n  TableRow,\r\n  TableCell,\r\n  Card,\r\n  CardContent\r\n} from \"@material-ui/core\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport {GRID_INTERNAL_CAPTIONS} from '../../definitions/generalDefinitions';\r\n//import DownloadExcel from './DownloadExcel'\r\nimport DownloadExcel from \"./DownloadExcel\";\r\nimport ExcelToolbar from \"./ExcelToolbar\";\r\n//import PrintToolbar from \"./printToolbar\";\r\nimport {\r\n  getInfoIconNotes\r\n} from \"../../definitions/infoIconsDefinitions.js\";\r\nimport { Info } from \"../Info\";\r\n\r\n\r\nexport default class Datatable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      downloadExcelNow: 0\r\n    };\r\n  }\r\n\r\n\r\n\r\n  getMuiTheme = () =>\r\n    createMuiTheme({\r\n      typography: {\r\n        fontFamily: '\"Trebuchet MS\"',\r\n        fontSize: 11,\r\n        fontWeight: \"100\"\r\n      },\r\n      overrides: {\r\n        MUIDataTable: {\r\n          tableRoot: {\r\n            margin: 0,\r\n            \r\n          },\r\n          paper: {\r\n            boxShadow: \"none\",\r\n            borderBottom:\"1px solid rgb(150, 150, 150)\",\r\n            borderRight:\"1px solid rgb(200, 200, 200)\",\r\n          }\r\n        },\r\n        MuiTableRow: {\r\n          root: {\r\n            //for the body\r\n            height: \"100%\"\r\n          },\r\n          head: {\r\n            //for the head\r\n            height: \"100%\"\r\n          },\r\n          footer: {\r\n            display: \"none\"\r\n          }\r\n        },\r\n        MuiTableCell: {\r\n          head: {\r\n            fontSize: \".8rem\"\r\n          },\r\n          \r\n          sizeSmall: {\r\n            padding: \"8px 3px 8px 3px\"\r\n          }\r\n\r\n        },\r\n        MUIDataTableToolbar: {\r\n          root: {\r\n            paddingLeft: \"0px\"\r\n          },\r\n          titleRoot: {\r\n            fontSize: 24,\r\n            fontWeight: 'bold'\r\n          },\r\n          icon: {\r\n            fontSize: 24\r\n          }\r\n        },\r\n        MUIDataTableBodyCell: {\r\n          root: {\r\n            backgroundColor: \"#FF0000\"\r\n           }\r\n        },\r\n        MUITypography: {\r\n          root: {\r\n            backgroundColor: \"blue\"\r\n           },\r\n           \r\n            body2: {\r\n              color: 'blue',\r\n            },\r\n        },\r\n        MUITablePagination: {\r\n          caption: {\r\n              value: 'blue',\r\n            },\r\n        }\r\n      }\r\n    });\r\n\r\n  setExcel = () => {\r\n    let downloadNow = this.state.downloadExcelNow === 1 ? 0 : 1;\r\n    this.setState({ downloadExcelNow: downloadNow });\r\n  };\r\n\r\n  render() {\r\n    let data = [];\r\n    let dataRow = [];\r\n    let j;\r\n    let i;\r\n\r\n\r\n    \r\n    let unit=65\r\n    let factor=1.3\r\n    if(this.props.dataColTitles.length<4) // for liabs\r\n      unit=95\r\n   \r\n      let divStyle={ width: factor*unit*(this.props.dataColTitles.length),  marginBottom:\"10px\"  }   \r\n    if(factor*unit*this.props.dataColTitles.length>(1/factor)* window.innerWidth)\r\n    {\r\n      unit=((1/factor)*window.innerWidth/(factor*this.props.dataColTitles.length))\r\n      divStyle={ width: factor*unit*(this.props.dataColTitles.length) }   \r\n    \r\n    } \r\n     if(unit<60)\r\n    {\r\n      unit=60 \r\n      divStyle={ width: \"100%\" } \r\n    } \r\n    \r\n    \r\n    let columns = [];\r\n\r\n    if (this.props.dataProjection !== undefined) {\r\n    \r\n      for (i = 0; i < this.props.dataProjection[0].length; ++i) {\r\n        for (j = 0; j < this.props.dataColTitles.length; ++j) {\r\n          if(j<1)\r\n          dataRow.push(this.props.dataProjection[j][i]);\r\n          else\r\n          dataRow.push(this.props.dataProjection[j][i]);\r\n        }\r\n        data.push(dataRow);\r\n        dataRow = [];\r\n      }\r\n\r\n      // build and style header and columns\r\n      let widthCustom =unit;// Math.max(80,6 * this.props.dataColTitles.length); //+'%';\r\n      let styleHeader = {\r\n        backgroundColor: \"#334d7c\",\r\n        color: \"#FFFFFF\",\r\n        textAlign: \"center\",\r\n        width: widthCustom,\r\n        fontWeight: \"bold\",\r\n        position: \"sticky\",\r\n        top: 0,\r\n        zIndex: 0,\r\n      };\r\n\r\n      let customHeader = ({ index, ...column }) => {\r\n        return (\r\n          \r\n          <TableCell key={index} style={styleHeader}>\r\n            {this.props.gridIcons !== undefined && \r\n            this.props.gridIcons[index] !== undefined && <div><Info infoIcon={this.props.gridIcons[index]}/><br/></div>} \r\n          {/* {index===this.props.headerIndex && <div><Info infoIcon={getInfoIconNotes(this.props.language)}/><br/></div>}  */}\r\n           {column.name}\r\n           </TableCell>\r\n        );\r\n      };\r\n\r\n      for (i = 0; i < this.props.dataColTitles.length; ++i) {\r\n        columns.push({\r\n          name: this.props.dataColTitles[i],\r\n          options: {\r\n            filter: false,\r\n            customHeadRender: customHeader\r\n          }\r\n        });\r\n      }\r\n    }\r\n    const captions= GRID_INTERNAL_CAPTIONS[this.props.language]\r\n    const title=<span style={{fontSize: '14px'}}  >{captions.excel}</span>\r\n            \r\n              \r\n    const excelToolbarText=captions.excel \r\n     const options = {\r\n      filter: false,\r\n      filterType: \"dropdown\",\r\n      selectableRows: \"none\",\r\n      responsive: \"scrollMaxHeight\", //this removes horiz\r\n      resizableColumns: true,\r\n      selectableRowsHeader: false,\r\n      viewColumns: false,\r\n      search: false,\r\n      download: false,\r\n      print:false,\r\n      textLabels:{\r\n        pagination: {\r\n          rowsPerPage: captions.rows,\r\n          displayRows: captions.of\r\n        },\r\n        \r\n      },\r\n      \r\n      rowsPerPage: 100,\r\n      setTableProps: () => {\r\n        return {\r\n          padding: \"default\",\r\n          size: \"small\",\r\n          margin: \"0px\"\r\n        };\r\n      },\r\n      downloadOptions: {\r\n        filename: \"INAtableDownload.csv\",\r\n        separator: \",\"\r\n      },\r\n      onDownload: (buildHead, buildBody, columns, data) => {\r\n        //handleCSVDownload2(data, columns);\r\n        this.setExcel();\r\n        //return \"\\uFEFF\" + \"dfof\\n \" + \"go to hell\\n\" + buildHead(headerNames) + buildBody(data);\r\n        return false;\r\n      },\r\n      customRowRender: (data, dataIndex, rowIndex) => {\r\n        let style = {textAlign: \"right\"};\r\n        if (data[0] === \"wwwwwww\") {\r\n          style.backgroundColor = \"green\";\r\n          style.fontSize = \"36px\";\r\n        }\r\n        var rows = [];\r\n\r\n        let i;\r\n        for (i = 0; i < this.props.dataColTitles.length; ++i) {\r\n          let dataI = data[i];\r\n          rows.push(\r\n            <TableCell key={i} style={style}>\r\n              <Typography>{\r\n /* this.formatMoney(\r\n  dataI,\r\n    this.props.gridColumnAligns[i],\r\n    \".\",\r\n    \",\"\r\n  ) } */dataI}</Typography>\r\n            </TableCell>\r\n          );\r\n        }\r\n        // console.log(rows)\r\n        return (\r\n          <TableRow key={rowIndex} style={{ backgroundColor: this.props.specialRow===undefined ? (rowIndex%2?\"#f9f9f9\":\"#e4e5e6\"):(rowIndex===this.props.specialRow?\"#d0d7e6\":(rowIndex%2?\"#f9f9f9\":\"#e4e5e6\")) }}>\r\n            {rows}\r\n          </TableRow>\r\n        );\r\n      },\r\n      customToolbar: () => <ExcelToolbar excelToolbarText={excelToolbarText} setExcel={this.setExcel} />\r\n    };\r\n\r\n   \r\n\r\n    return (\r\n        <div style={divStyle} >\r\n          \r\n        <MuiThemeProvider theme={this.getMuiTheme()}>\r\n          <MUIDataTable\r\n            title={this.props.gridTitle}\r\n            data={data}\r\n            columns={columns}\r\n            options={options}\r\n          />\r\n        </MuiThemeProvider>\r\n        {this.state.downloadExcelNow ===1 && <DownloadExcel\r\n          excelColumnsDataMain={this.props.dataProjection}\r\n          width={\"90\"}\r\n          excelColumnsHeaders={this.props.dataColTitles}\r\n          title={this.props.gridTitle}\r\n          excelColumnsDataInfoSection={this.props.gridColumnsDataExcelInfoSection}\r\n          downloadNow={this.state.downloadExcelNow}\r\n          hideElement={true}\r\n          language={this.props.language}\r\n        />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}